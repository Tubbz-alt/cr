diff a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/common/ItemList.java b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/common/ItemList.java
--- a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/common/ItemList.java
+++ b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/common/ItemList.java
@@ -63,10 +63,11 @@
 import org.openjdk.jmc.ui.UIPlugin;
 import org.openjdk.jmc.ui.accessibility.FocusTracker;
 import org.openjdk.jmc.ui.column.ColumnBuilder;
 import org.openjdk.jmc.ui.column.ColumnManager;
 import org.openjdk.jmc.ui.column.ColumnManager.ColumnComparator;
+import org.openjdk.jmc.ui.handlers.MCContextMenuManager;
 import org.openjdk.jmc.ui.column.IColumn;
 import org.openjdk.jmc.ui.column.TableSettings;
 
 public class ItemList {
 
@@ -103,10 +104,11 @@
 	private final ColumnManager columnManager;
 	// FIXME: JMC-5127 - Don't initialize to 1000 elements
 	private final SimpleArray<IItem> tail = new SimpleArray<>(new IItem[1000]);
 
 	private ExtraRowTableViewer tableViewer;
+	private MCContextMenuManager menuManager;
 
 	private ItemList(Composite container, List<IColumn> columns, TableSettings tableSettings, int style) {
 		tableViewer = new ExtraRowTableViewer(container,
 				SWT.MULTI | SWT.VIRTUAL | SWT.H_SCROLL | SWT.V_SCROLL | SWT.FULL_SELECTION | style);
 		tableViewer.setContentProvider(ArrayContentProvider.getInstance());
@@ -136,10 +138,18 @@
 
 	public ColumnManager getManager() {
 		return columnManager;
 	}
 
+	public void setMenuManager(MCContextMenuManager mm) {
+		menuManager = mm;
+	}
+
+	public MCContextMenuManager getMenuManager() {
+		return menuManager;
+	}
+
 	@SuppressWarnings("unchecked")
 	public Supplier<Stream<? extends IItem>> getSelection() {
 		List<? extends IItem> list = ((IStructuredSelection) columnManager.getViewer().getSelection()).toList();
 		return () -> list.stream();
 	}
