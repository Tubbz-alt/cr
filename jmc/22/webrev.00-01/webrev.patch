diff a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/EventBrowserPage.java b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/EventBrowserPage.java
--- a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/EventBrowserPage.java
+++ b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/EventBrowserPage.java
@@ -174,10 +174,12 @@
 		private final TypeFilterBuilder typeFilterTree;
 		private IItemCollection selectionItems;
 		private FlavorSelector flavorSelector;
 		private FilterComponent listFilter;
 		private Boolean showTypesWithoutEvents;
+		private Boolean showFilterAction;
+		private Boolean showSearchAction;
 
 		EventBrowserUI(Composite parent, FormToolkit toolkit, IState state, IPageContainer container) {
 			this.container = container;
 
 			Form form = DataPageToolkit.createForm(parent, toolkit, getName(), getIcon());
@@ -330,21 +332,26 @@
 					newColumns.add(0, new ColumnSettings(combinedId, false, null, null));
 				}
 			});
 			listColumns.addAll(0, newColumns);
 
+			saveFilterActionStates();
 			Control oldListControl = list.getManager().getViewer().getControl();
 			Composite parent = listFilter != null ? listFilter.getComponent().getParent() : oldListControl.getParent();
 			for (Control c : parent.getChildren()) {
 				c.dispose();
 			}
 			list = DataPageToolkit.createSimpleItemList(parent, itemListBuilder, container,
 					DataPageToolkit.createTableSettingsByOrderByAndColumnsWithDefaultOrdering(orderBy, listColumns),
 					Messages.EventBrowserPage_EVENT_BROWSER_SELECTION);
 			listFilter = FilterComponent.createFilterComponent(list, flagsFilter, filteredItems,
 					container.getSelectionStore()::getSelections, this::onFilterChange);
-			listFilter.loadState(getState().getChild(LIST_FILTER));
+			if (showFilterAction == null) {
+				listFilter.loadState(getState().getChild(LIST_FILTER));
+			} else {
+				loadFilterActionStates();
+			}
 			onFilterChange(flagsFilter);
 
 			MCContextMenuManager mm = list.getMenuManager();
 			mm.add(listFilter.getShowFilterAction());
 			mm.add(listFilter.getShowSearchAction());
@@ -370,10 +377,24 @@
 			if (settings.getOrderBy() != null) {
 				listOrderBy = settings.getOrderBy();
 			}
 		}
 
+		private void saveFilterActionStates() {
+			if (listFilter != null) {
+				showFilterAction = listFilter.getShowFilterAction().isChecked();
+				showSearchAction = listFilter.getShowSearchAction().isChecked();
+			}
+		}
+
+		private void loadFilterActionStates() {
+			listFilter.getShowFilterAction().setChecked(showFilterAction);
+			listFilter.getShowSearchAction().setChecked(showSearchAction);
+			listFilter.getShowFilterAction().run();
+			listFilter.getShowSearchAction().run();
+		}
+
 		@Override
 		public void saveTo(IWritableState state) {
 			PersistableSashForm.saveState(treeSash, state.createChild(TREE_SASH));
 			mergeListSettings();
 			new TableSettings(listOrderBy, listColumns).saveState(state.createChild(ITEM_LIST));
