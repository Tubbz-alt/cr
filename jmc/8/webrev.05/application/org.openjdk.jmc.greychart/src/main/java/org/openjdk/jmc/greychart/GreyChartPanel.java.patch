diff a/application/org.openjdk.jmc.greychart/src/main/java/org/openjdk/jmc/greychart/GreyChartPanel.java b/application/org.openjdk.jmc.greychart/src/main/java/org/openjdk/jmc/greychart/GreyChartPanel.java
--- a/application/org.openjdk.jmc.greychart/src/main/java/org/openjdk/jmc/greychart/GreyChartPanel.java
+++ b/application/org.openjdk.jmc.greychart/src/main/java/org/openjdk/jmc/greychart/GreyChartPanel.java
@@ -56,12 +56,12 @@
 
 	private static final String PROPERTY_KEY_DEBUG = "org.openjdk.jmc.greychart.debug"; //$NON-NLS-1$
 	private static final String PROPERTY_KEY_SHOWRENDERINGTIME = "org.openjdk.jmc.greychart.showrenderingtime"; //$NON-NLS-1$
 	static final long serialVersionUID = 0x0001;
 	/**
-	 * DEBUG flag initialized from the system property org.openjdk.jmc.greychart.debug on startup. Will
-	 * cause rendering to take place directly on screen.
+	 * DEBUG flag initialized from the system property org.openjdk.jmc.greychart.debug on startup.
+	 * Will cause rendering to take place directly on screen.
 	 */
 	public final static boolean DEBUG;
 	private final static boolean SHOW_RENDERING_TIME;
 	private static final int[] EMPTY_INT_ARRAY = new int[0];
 	private static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
@@ -152,11 +152,11 @@
 				/*
 				 * FIXME: This assumes that every component beyond this point restores the altered
 				 * properties of the graphics context when exiting its rendering function. We might
 				 * want to do Graphics2D g2d = (Graphics2D) g.create(); and finally dispose of the
 				 * graphics.
-				 */ 
+				 */
 				m_lastTargetArea.width = getWidth();
 				m_lastTargetArea.height = getHeight();
 				m_chart.render((Graphics2D) g, m_lastTargetArea);
 			} else {
 				g.drawImage(createPlotImage(m_lastTargetArea.width, m_lastTargetArea.height), m_lastTargetArea.x,
