diff a/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/JfrWizardTest.java b/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/JfrWizardTest.java
--- a/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/JfrWizardTest.java
+++ b/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/JfrWizardTest.java
@@ -104,11 +104,12 @@
 		Assert.assertTrue("The recording did not contain the minimal event settings set in the Flight Recording wizard",
 				verifyOnlyRecordingSettingEventEnabled(recordingEventSettings));
 	}
 
 	/**
-	 * Verifies that using one of the default recording templates result in a matching recording (settings wise)
+	 * Verifies that using one of the default recording templates result in a matching recording
+	 * (settings wise)
 	 */
 	@Test
 	public void verifyDefaultRecordingEventSettings() {
 		JfrWizard recordingWizard = MC.jvmBrowser.startFlightRecordingWizard();
 		recordingWizard.setDurationText("1 s");
@@ -133,11 +134,11 @@
 				"Settings differ between what was set in the wizard and what is actually present in the recording",
 				recordingEventSettings.canBeResultOf(wizardEventSettings, false, IS_JFR_NEXT));
 	}
 
 	/**
-	 * Verifies that a default recording template reflects the last run recording template 
+	 * Verifies that a default recording template reflects the last run recording template
 	 */
 	@Test
 	public void testOneTemplateAddedAfterStartingRecording() {
 		String recordingName = "TemplateAdditionTest";
 		String dynamicTemplateName = "Settings for '" + recordingName + "' - last started";
