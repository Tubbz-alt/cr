diff a/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/base/wrappers/MCJemmyBase.java b/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/base/wrappers/MCJemmyBase.java
--- a/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/base/wrappers/MCJemmyBase.java
+++ b/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/base/wrappers/MCJemmyBase.java
@@ -559,11 +559,11 @@
 		Fetcher<Boolean> fetcher = new Fetcher<Boolean>() {
 			@Override
 			public void run() {
 				Menu menu = control.getControl().getMenu();
 				for (MenuItem item : menu.getItems()) {
-					if(menuItemText.equals(item.getText())) {
+					if (menuItemText.equals(item.getText())) {
 						setOutput(item.isEnabled());
 						break;
 					}
 				}
 			}
@@ -899,12 +899,12 @@
 	public static void clearFocus() {
 		focusedSection = null;
 	}
 
 	/**
-	 * @return a {@link List} of {@link MCTable} either in the currently focused section or
-	 *         globally in the shell
+	 * @return a {@link List} of {@link MCTable} either in the currently focused section or globally
+	 *         in the shell
 	 */
 	public static List<MCTable> getTables() {
 		if (focusedSection != null) {
 			return MCTable.getAll(focusedSection);
 		} else {
@@ -915,12 +915,12 @@
 	/**
 	 * Get all tables in the focused section (if set), otherwise from the Mission Control main shell
 	 * 
 	 * @param waitForIdle
 	 *            {@code true} if "UI-update queue" should be empty before looking for controls
-	 * @return a {@link List} of {@link MCTable} either in the currently focused section or
-	 *         globally in the shell
+	 * @return a {@link List} of {@link MCTable} either in the currently focused section or globally
+	 *         in the shell
 	 */
 	public static List<MCTable> getTables(boolean waitForIdle) {
 		if (focusedSection != null) {
 			return MCTable.getAll(focusedSection, waitForIdle);
 		} else {
