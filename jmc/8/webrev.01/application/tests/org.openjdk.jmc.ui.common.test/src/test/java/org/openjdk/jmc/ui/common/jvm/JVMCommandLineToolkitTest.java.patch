diff a/application/tests/org.openjdk.jmc.ui.common.test/src/test/java/org/openjdk/jmc/ui/common/jvm/JVMCommandLineToolkitTest.java b/application/tests/org.openjdk.jmc.ui.common.test/src/test/java/org/openjdk/jmc/ui/common/jvm/JVMCommandLineToolkitTest.java
--- a/application/tests/org.openjdk.jmc.ui.common.test/src/test/java/org/openjdk/jmc/ui/common/jvm/JVMCommandLineToolkitTest.java
+++ b/application/tests/org.openjdk.jmc.ui.common.test/src/test/java/org/openjdk/jmc/ui/common/jvm/JVMCommandLineToolkitTest.java
@@ -56,12 +56,12 @@
 				JVMCommandLineToolkit.getMainClassOrJar("org.openjdk.jmc.test.Runner1"));
 	}
 
 	@Test
 	public void testJarAndMoreFlags() {
-		assertEquals("/path1/path2/mc.jar", JVMCommandLineToolkit
-				.getMainClassOrJar("/path1/path2/mc.jar -consoleLog -data /work/path3"));
+		assertEquals("/path1/path2/mc.jar",
+				JVMCommandLineToolkit.getMainClassOrJar("/path1/path2/mc.jar -consoleLog -data /work/path3"));
 	}
 
 	@Test
 	public void testSlashClassAndFlags() {
 		assertEquals("org/netbeans/Main", JVMCommandLineToolkit.getMainClassOrJar("org/netbeans/Main --branding nb"));
@@ -103,21 +103,19 @@
 				.getJavaCommandLine("-cp application.jar -Darg1=foo org.openjdk.jmc.test.Runner3 arg"));
 	}
 
 	@Test
 	public void testJarFlag() {
-		assertEquals("C:/path1/path2/mc.jar -consoleLog -data C:/path3/path4",
-				JVMCommandLineToolkit.getJavaCommandLine(
-						"-jar C:/path1/path2/mc.jar -consoleLog -data C:/path3/path4"));
+		assertEquals("C:/path1/path2/mc.jar -consoleLog -data C:/path3/path4", JVMCommandLineToolkit
+				.getJavaCommandLine("-jar C:/path1/path2/mc.jar -consoleLog -data C:/path3/path4"));
 	}
 
 	@Test
 	public void testClassPathJarAndFlags() {
 		// not really a valid cmdline
-		assertEquals("C:/path1/path2/mc.jar -consoleLog -data C:/path3/path4",
-				JVMCommandLineToolkit.getJavaCommandLine(
-						"-classpath application.jar -jar C:/path1/path2/mc.jar -consoleLog -data C:/path3/path4"));
+		assertEquals("C:/path1/path2/mc.jar -consoleLog -data C:/path3/path4", JVMCommandLineToolkit.getJavaCommandLine(
+				"-classpath application.jar -jar C:/path1/path2/mc.jar -consoleLog -data C:/path3/path4"));
 	}
 
 	@Test
 	public void testEmptyString2() {
 		assertEquals("", JVMCommandLineToolkit.getJavaCommandLine(""));
