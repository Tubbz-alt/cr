diff a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/MemoryLeakPage.java b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/MemoryLeakPage.java
--- a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/MemoryLeakPage.java
+++ b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/MemoryLeakPage.java
@@ -142,12 +142,14 @@
 		private final Predicate<ReferenceTreeObject> withinTimeRangePredicateFromRootObject = rto -> {
 			if (timeRange != null) {
 				if (rto.getTimestamp().compareTo(timeRange.getStart()) >= 0
 						&& rto.getTimestamp().compareTo(timeRange.getEnd()) <= 0) {
 					return true;
-				} else if (rto.getRootObject().getOldObjectSamples() != null && rto.getRootObject().getOldObjectSamples().size() > 1) {
-					for (Map.Entry<IQuantity, ReferenceTreeObject> rt : rto.getRootObject().getOldObjectSamples().entrySet()) {
+				} else if (rto.getRootObject().getOldObjectSamples() != null
+						&& rto.getRootObject().getOldObjectSamples().size() > 1) {
+					for (Map.Entry<IQuantity, ReferenceTreeObject> rt : rto.getRootObject().getOldObjectSamples()
+							.entrySet()) {
 						if (rt.getKey().compareTo(timeRange.getStart()) >= 0
 								&& rt.getKey().compareTo(timeRange.getEnd()) <= 0) {
 							return true;
 						}
 					}
@@ -274,11 +276,12 @@
 					protected String getTextTyped(ReferenceTreeObject object) {
 						IRange<IQuantity> selectionRange = chart.getSelectionRange();
 						if (selectionRange == null) {
 							return object == null ? "" : Integer.toString(object.getObjectsKeptAliveCount()); //$NON-NLS-1$
 						} else {
-							return (object == null || selectionRange == null) ? "" : Integer.toString(model.getLeakCountInRange(selectionRange, object)); //$NON-NLS-1$
+							return (object == null || selectionRange == null) ? "" //$NON-NLS-1$
+									: Integer.toString(model.getLeakCountInRange(selectionRange, object));
 						}
 					};
 				}).style(SWT.RIGHT).comparator((o1, o2) -> {
 					if (o1 instanceof ReferenceTreeObject && o2 instanceof ReferenceTreeObject) {
 						return ((ReferenceTreeObject) o1).getObjectsKeptAliveCount()
