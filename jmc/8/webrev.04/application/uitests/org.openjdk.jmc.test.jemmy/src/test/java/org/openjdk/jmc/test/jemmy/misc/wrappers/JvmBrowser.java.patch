diff a/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/JvmBrowser.java b/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/JvmBrowser.java
--- a/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/JvmBrowser.java
+++ b/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/JvmBrowser.java
@@ -156,12 +156,12 @@
 	 *            The path of the new connection, this can be either empty, in which case the
 	 *            default naming scheme is used and the connection is created at the root level, or
 	 *            it can be a list of strings representing the path of the new connection. If the
 	 *            path is of length 1 and there is no item with that name, the new connection has
 	 *            that string as the name, however, if that item exists then the new connection is
-	 *            created beneath that item using the default name. This is basically the same
-	 *            for strings of length n > 1.
+	 *            created beneath that item using the default name. This is basically the same for
+	 *            strings of length n > 1.
 	 */
 	public void createConnection(
 		String host, String port, String user, String passwd, Boolean storeCredentials, String ... path) {
 		String connectionName = null;
 		String[] finalPath = null;
@@ -221,12 +221,12 @@
 	 *            The path of the new connection, this can be either empty, in which case the
 	 *            default naming scheme is used and the connection is created at the root level, or
 	 *            it can be a list of strings representing the path of the new connection. If the
 	 *            path is of length 1 and there is no item with that name, the new connection has
 	 *            that string as the name, however, if that item exists then the new connection is
-	 *            created beneath that item using the default name. This is basically the same
-	 *            for strings of length n > 1.
+	 *            created beneath that item using the default name. This is basically the same for
+	 *            strings of length n > 1.
 	 */
 	public void createConnection(String host, String port, String ... path) {
 		createConnection(host, port, null, null, null, path);
 	}
 
@@ -594,11 +594,11 @@
 	public void enableTreeLayout() {
 		setLayout(true);
 	}
 
 	/**
-	 * Finds out whether or not a connection with the specified path exists 
+	 * Finds out whether or not a connection with the specified path exists
 	 *
 	 * @param path
 	 *            the path to find
 	 * @return {@code true} if a connection is found, {@code false} if not.
 	 */
@@ -770,12 +770,11 @@
 	 *
 	 * @param password
 	 *            the password used as a new master password. Must be longer than five characters.
 	 */
 	public void handleSetMasterPassword(String password) {
-		MCDialog masterPasswordShell = MCDialog.getByAnyDialogTitle(
-				MasterPasswordWizardPage_SET_MASTER_PASSWORD_TITLE,
+		MCDialog masterPasswordShell = MCDialog.getByAnyDialogTitle(MasterPasswordWizardPage_SET_MASTER_PASSWORD_TITLE,
 				MasterPasswordWizardPage_VERIFY_MASTER_PASSWORD_TITLE);
 		if (masterPasswordShell.getText().equals(MasterPasswordWizardPage_SET_MASTER_PASSWORD_TITLE)) {
 			masterPasswordShell.enterText(Constants.PASSWORD1_FIELD_NAME, password);
 			masterPasswordShell.enterText(Constants.PASSWORD2_FIELD_NAME, password);
 		} else {
