diff a/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/ControlRecordingsTest.java b/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/ControlRecordingsTest.java
--- a/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/ControlRecordingsTest.java
+++ b/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/ControlRecordingsTest.java
@@ -331,12 +331,11 @@
 	 * Verifies that recording event period settings can be modified on the fly
 	 */
 	@Test
 	public void modifyEventPeriod() {
 		// FIXME: JMC-5207 - Remove the assume call once the GTK3 related bug has been fixed
-		Assume.assumeFalse("Skipping on Linux due to GTK3 related bug",
-				MCJemmyBase.OS_NAME.contains("linux"));
+		Assume.assumeFalse("Skipping on Linux due to GTK3 related bug", MCJemmyBase.OS_NAME.contains("linux"));
 		// Dump the test recording to get the current event settings (combined from, possibly multiple recordings)
 		MC.jvmBrowser.dumpLastPartOfRecording(TEST_RECORDING_NAME);
 		EventSettingsData currentSettings = JfrUi.parseEventSettingsTable();
 		MCMenu.closeActiveEditor();
 		// Find an event that has a period value
