diff a/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/JfrRecordingTest.java b/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/JfrRecordingTest.java
--- a/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/JfrRecordingTest.java
+++ b/application/uitests/org.openjdk.jmc.flightrecorder.uitest/src/test/java/org/openjdk/jmc/flightrecorder/uitest/JfrRecordingTest.java
@@ -103,12 +103,11 @@
 	 * unpacking of the file (unless JMC/Jemmy leaks a lot of memory and causes memory shortage).
 	 */
 	@Test
 	public void verifySmallCompressedRecording() {
 		openCompressedRecording(RECORDING, LOW_ZIPFILE_MEMORY_FACTOR, false);
-		Assert.assertTrue("Unable to find an opened recording in JMC",
-				MCJemmyBase.waitForEditor(30000, RECORDING));
+		Assert.assertTrue("Unable to find an opened recording in JMC", MCJemmyBase.waitForEditor(30000, RECORDING));
 	}
 
 	/**
 	 * Testing opening a compressed recording that is supposed to generate dialogs regarding
 	 * unpacking of the file (by means of setting the RecordingLoader.zippedFileMemoryFactor to an
@@ -117,21 +116,19 @@
 	@Test
 	public void verifyLargeCompressedRecording() {
 		openCompressedRecording(RECORDING, EXTREME_ZIPFILE_MEMORY_FACTOR, false);
 		// removing all of the target file stuff from the dialog text
 		String dialogText = org.openjdk.jmc.flightrecorder.ui.messages.internal.Messages.FILE_OPENER_ZIPPED_FILE_TEXT;
-		String truncatedDialogText = dialogText.replace("{0}", RECORDING).substring(0,
-				dialogText.indexOf("{1}"));
+		String truncatedDialogText = dialogText.replace("{0}", RECORDING).substring(0, dialogText.indexOf("{1}"));
 		MCDialog decompressDialog = MCDialog.getByDialogTitleAndText(
 				org.openjdk.jmc.flightrecorder.ui.messages.internal.Messages.FILE_OPENER_ZIPPED_FILE_TITLE,
 				truncatedDialogText);
 		Assert.assertNotNull("Could not find a dialog with the title '"
 				+ org.openjdk.jmc.flightrecorder.ui.messages.internal.Messages.FILE_OPENER_ZIPPED_FILE_TITLE
 				+ "' and the text '" + truncatedDialogText + "'", decompressDialog);
 		decompressDialog.clickButton(Labels.YES);
-		Assert.assertTrue("Unable to find an opened recording in JMC",
-				MCJemmyBase.waitForEditor(30000, RECORDING));
+		Assert.assertTrue("Unable to find an opened recording in JMC", MCJemmyBase.waitForEditor(30000, RECORDING));
 	}
 
 	/**
 	 * Open a recording and make sure that all tabs are accessible
 	 */
