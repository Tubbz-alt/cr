diff a/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/MCMenu.java b/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/MCMenu.java
--- a/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/MCMenu.java
+++ b/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/MCMenu.java
@@ -267,14 +267,14 @@
 			}
 		}
 	}
 
 	/**
-	 * Enumeration for the "short keys" to access various Mission Control menu items. Primarily to be used with
-	 * Mac OS X where the menu bar is rendered with native code and inaccessible to Jemmy. Other
-	 * platforms should still use the "menu.push()" mechanism to ensure that the menu actually holds
-	 * the items. Note: Each mapping first needs to be configured in plugin.xml.
+	 * Enumeration for the "short keys" to access various Mission Control menu items. Primarily to
+	 * be used with Mac OS X where the menu bar is rendered with native code and inaccessible to
+	 * Jemmy. Other platforms should still use the "menu.push()" mechanism to ensure that the menu
+	 * actually holds the items. Note: Each mapping first needs to be configured in plugin.xml.
 	 */
 
 	private static enum MenuKeys {
 		PROGRESS_VIEW(KeyboardButtons.R, new KeyboardModifiers[] {KeyboardModifiers.SHIFT_DOWN_MASK, SHORTCUT_MODIFIER,
 				KeyboardModifiers.ALT_DOWN_MASK}),
