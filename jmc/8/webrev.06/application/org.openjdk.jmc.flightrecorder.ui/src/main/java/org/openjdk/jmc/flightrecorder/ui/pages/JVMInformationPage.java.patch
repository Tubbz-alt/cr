diff a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/JVMInformationPage.java b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/JVMInformationPage.java
--- a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/JVMInformationPage.java
+++ b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/pages/JVMInformationPage.java
@@ -133,11 +133,10 @@
 		types.add(JdkTypeIDs.INT_FLAG_CHANGED);
 		types.add(JdkTypeIDs.UINT_FLAG_CHANGED);
 		FLAGS_LOG = Collections.unmodifiableSet(types);
 	}
 
-
 	private static final IItemFilter FLAGS_FILTER = ItemFilters.type(FLAGS);
 
 	private static final IAccessorFactory<?> FLAG_VALUE_FIELD = new IAccessorFactory<Object>() {
 
 		@Override
@@ -249,11 +248,12 @@
 			allFlagsTable = FLAG_HISTOGRAM.buildWithoutBorder(allFlagsSection,
 					new TableSettings(state.getChild(JVM_FLAGS)));
 			allFlagsFilter = FilterComponent.createFilterComponent(allFlagsTable, flagsFilter,
 					getDataSource().getItems().apply(FLAGS_FILTER), pageContainer.getSelectionStore()::getSelections,
 					this::onFlagsFilterChange);
-			MCContextMenuManager flagsMm = MCContextMenuManager.create(allFlagsTable.getManager().getViewer().getControl());
+			MCContextMenuManager flagsMm = MCContextMenuManager
+					.create(allFlagsTable.getManager().getViewer().getControl());
 			ColumnMenusFactory.addDefaultMenus(allFlagsTable.getManager(), flagsMm);
 			flagsMm.add(allFlagsFilter.getShowFilterAction());
 			flagsMm.add(allFlagsFilter.getShowSearchAction());
 			allFlagsSection.setClient(allFlagsFilter.getComponent());
 
@@ -265,14 +265,13 @@
 					Messages.JVMInformationPage_SECTION_JVM_FLAGS_LOG);
 			allFlagsLogTable = FLAG_LOG_HISTOGRAM.buildWithoutBorder(allFlagsLogSection,
 					new TableSettings(state.getChild(JVM_FLAGS_LOG)));
 			allFlagsLogFilter = FilterComponent.createFilterComponent(allFlagsLogTable, flagsLogFilter,
 					getDataSource().getItems().apply(FLAGS_LOG_FILTER),
-					pageContainer.getSelectionStore()::getSelections,
-					this::onFlagsLogFilterChange);
-			MCContextMenuManager flagsLogMm = MCContextMenuManager.create(
-					allFlagsLogTable.getManager().getViewer().getControl());
+					pageContainer.getSelectionStore()::getSelections, this::onFlagsLogFilterChange);
+			MCContextMenuManager flagsLogMm = MCContextMenuManager
+					.create(allFlagsLogTable.getManager().getViewer().getControl());
 			ColumnMenusFactory.addDefaultMenus(allFlagsLogTable.getManager(), flagsLogMm);
 			flagsLogMm.add(allFlagsLogFilter.getShowFilterAction());
 			flagsLogMm.add(allFlagsLogFilter.getShowSearchAction());
 			allFlagsLogSection.setClient(allFlagsLogFilter.getComponent());
 
