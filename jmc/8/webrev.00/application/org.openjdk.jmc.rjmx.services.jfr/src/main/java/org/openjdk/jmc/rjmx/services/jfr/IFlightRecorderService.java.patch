diff a/application/org.openjdk.jmc.rjmx.services.jfr/src/main/java/org/openjdk/jmc/rjmx/services/jfr/IFlightRecorderService.java b/application/org.openjdk.jmc.rjmx.services.jfr/src/main/java/org/openjdk/jmc/rjmx/services/jfr/IFlightRecorderService.java
--- a/application/org.openjdk.jmc.rjmx.services.jfr/src/main/java/org/openjdk/jmc/rjmx/services/jfr/IFlightRecorderService.java
+++ b/application/org.openjdk.jmc.rjmx.services.jfr/src/main/java/org/openjdk/jmc/rjmx/services/jfr/IFlightRecorderService.java
@@ -53,13 +53,13 @@
  * Implementation, if available, can be retrieved from an
  * {@link IConnectionHandle#getServiceOrNull(Class)}
  */
 public interface IFlightRecorderService extends IRecorderConfigurationService {
 	/**
-	 * Returns the available JDK Flight Recorder recordings. The immutable descriptor represents
-	 * the state at the time the method was called. To get an updated representation the method must
-	 * be called again.
+	 * Returns the available JDK Flight Recorder recordings. The immutable descriptor represents the
+	 * state at the time the method was called. To get an updated representation the method must be
+	 * called again.
 	 *
 	 * @return the available Flight Recording recordings.
 	 * @throws FlightRecorderException
 	 */
 	List<IRecordingDescriptor> getAvailableRecordings() throws FlightRecorderException;
@@ -151,12 +151,12 @@
 	 *             if there was a problem retrieving the metadata.
 	 */
 	Map<? extends IEventTypeID, ? extends IEventTypeInfo> getEventTypeInfoMapByID() throws FlightRecorderException;
 
 	/**
-	 * Returns the currently active settings for all event types, if the JDK Flight Recorder
-	 * version supports this notion. Otherwise, empty settings will be returned.
+	 * Returns the currently active settings for all event types, if the JDK Flight Recorder version
+	 * supports this notion. Otherwise, empty settings will be returned.
 	 *
 	 * @return the current settings for the event types.
 	 * @throws FlightRecorderException
 	 *             if there was a problem retrieving the settings.
 	 */
