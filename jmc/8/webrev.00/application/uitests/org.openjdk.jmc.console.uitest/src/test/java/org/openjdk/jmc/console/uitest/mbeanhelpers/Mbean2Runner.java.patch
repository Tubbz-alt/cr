diff a/application/uitests/org.openjdk.jmc.console.uitest/src/test/java/org/openjdk/jmc/console/uitest/mbeanhelpers/Mbean2Runner.java b/application/uitests/org.openjdk.jmc.console.uitest/src/test/java/org/openjdk/jmc/console/uitest/mbeanhelpers/Mbean2Runner.java
--- a/application/uitests/org.openjdk.jmc.console.uitest/src/test/java/org/openjdk/jmc/console/uitest/mbeanhelpers/Mbean2Runner.java
+++ b/application/uitests/org.openjdk.jmc.console.uitest/src/test/java/org/openjdk/jmc/console/uitest/mbeanhelpers/Mbean2Runner.java
@@ -89,12 +89,13 @@
 						return "This is an awkward way of providing information.";
 					}
 
 					@Override
 					public MBeanInfo getMBeanInfo() {
-						return new MBeanInfo(Testable.class.getName(), "This is even uglier.", new MBeanAttributeInfo[0],
-								new MBeanConstructorInfo[0], new MBeanOperationInfo[0], new MBeanNotificationInfo[0]);
+						return new MBeanInfo(Testable.class.getName(), "This is even uglier.",
+								new MBeanAttributeInfo[0], new MBeanConstructorInfo[0], new MBeanOperationInfo[0],
+								new MBeanNotificationInfo[0]);
 					}
 				};
 				mbs.registerMBean(mbean, testName2);
 				StandardMBean mbean4 = new StandardMBean(testBean4, TestableMBean.class) {
 					@Override
@@ -132,12 +133,13 @@
 						return "This is an awkward way of providing information.";
 					}
 
 					@Override
 					public MBeanInfo getMBeanInfo() {
-						return new MBeanInfo(Testable.class.getName(), "This is even uglier.", new MBeanAttributeInfo[0], 
-								new MBeanConstructorInfo[0], new MBeanOperationInfo[0], new MBeanNotificationInfo[0]);
+						return new MBeanInfo(Testable.class.getName(), "This is even uglier.",
+								new MBeanAttributeInfo[0], new MBeanConstructorInfo[0], new MBeanOperationInfo[0],
+								new MBeanNotificationInfo[0]);
 					}
 				};
 				mbs.registerMBean(mbean3, testName3);
 				addMBean("test3", "type=buz");
 				addMBean("test4", "hugo=buz");
