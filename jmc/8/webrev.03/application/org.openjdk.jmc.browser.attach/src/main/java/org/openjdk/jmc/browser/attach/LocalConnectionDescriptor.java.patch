diff a/application/org.openjdk.jmc.browser.attach/src/main/java/org/openjdk/jmc/browser/attach/LocalConnectionDescriptor.java b/application/org.openjdk.jmc.browser.attach/src/main/java/org/openjdk/jmc/browser/attach/LocalConnectionDescriptor.java
--- a/application/org.openjdk.jmc.browser.attach/src/main/java/org/openjdk/jmc/browser/attach/LocalConnectionDescriptor.java
+++ b/application/org.openjdk.jmc.browser.attach/src/main/java/org/openjdk/jmc/browser/attach/LocalConnectionDescriptor.java
@@ -173,12 +173,11 @@
 	 *
 	 * @throws AgentLoadException
 	 * @throws IOException
 	 * @throws AttachNotSupportedException
 	 */
-	private void tryJCMDStyleStartingOfTheAgent(String name)
-			throws IOException, AgentLoadException {
+	private void tryJCMDStyleStartingOfTheAgent(String name) throws IOException, AgentLoadException {
 		try {
 			// Enforce a timeout here to ensure we don't block forever if the JVM is busy/suspended. See JMC-5398
 			ExecutorService service = Executors.newSingleThreadExecutor();
 			Future<Void> future = service.submit(new Callable<Void>() {
 				@Override
@@ -189,11 +188,12 @@
 						vm = VirtualMachine.attach(name);
 						LocalJVMToolkit.executeCommandForPid(vm, name, "ManagementAgent.start_local"); //$NON-NLS-1$
 						// Get in memory Service URL...
 						JMXServiceURL inMemURL = LocalJVMToolkit.getInMemoryURLFromPID(Integer.parseInt(name));
 						if (inMemURL == null) {
-							BrowserAttachPlugin.getPluginLogger().log(Level.SEVERE, COULD_NOT_RETRIEVE_URL_ERROR_MESSAGE);
+							BrowserAttachPlugin.getPluginLogger().log(Level.SEVERE,
+									COULD_NOT_RETRIEVE_URL_ERROR_MESSAGE);
 							throw new LazyServiceURLResolveException(COULD_NOT_RETRIEVE_URL_ERROR_MESSAGE);
 						}
 						url = inMemURL;
 					} finally {
 						if (vm != null) {
