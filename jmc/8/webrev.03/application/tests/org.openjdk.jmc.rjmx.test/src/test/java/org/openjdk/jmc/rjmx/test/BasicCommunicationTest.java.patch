diff a/application/tests/org.openjdk.jmc.rjmx.test/src/test/java/org/openjdk/jmc/rjmx/test/BasicCommunicationTest.java b/application/tests/org.openjdk.jmc.rjmx.test/src/test/java/org/openjdk/jmc/rjmx/test/BasicCommunicationTest.java
--- a/application/tests/org.openjdk.jmc.rjmx.test/src/test/java/org/openjdk/jmc/rjmx/test/BasicCommunicationTest.java
+++ b/application/tests/org.openjdk.jmc.rjmx.test/src/test/java/org/openjdk/jmc/rjmx/test/BasicCommunicationTest.java
@@ -75,12 +75,11 @@
 	}
 
 	@Test
 	public void testIConnectionHandle() throws Exception {
 		IConnectionHandle handle = getDefaultServer().connect("Test");
-		MRI descriptor = new MRI(Type.ATTRIBUTE, "java.lang:type=Threading",
-				"ThreadCount");
+		MRI descriptor = new MRI(Type.ATTRIBUTE, "java.lang:type=Threading", "ThreadCount");
 		MBeanServerConnection connection = handle.getServiceOrThrow(MBeanServerConnection.class);
 		assertBetween(1L, 1000L,
 				((Number) connection.getAttribute(descriptor.getObjectName(), descriptor.getDataPath())).longValue());
 		handle.close();
 	}
@@ -100,12 +99,11 @@
 		ConnectionDescriptorBuilder builder = new ConnectionDescriptorBuilder();
 		IConnectionDescriptor descriptor = builder.hostName("localhost").port(0).build();
 		IConnectionHandle handle = IServerHandle.create(descriptor).connect("Test");
 
 		ISubscriptionService service = handle.getServiceOrThrow(ISubscriptionService.class);
-		MRI attribute = new MRI(Type.ATTRIBUTE, "java.lang:type=Threading",
-				"ThreadCount");
+		MRI attribute = new MRI(Type.ATTRIBUTE, "java.lang:type=Threading", "ThreadCount");
 		service.addMRIValueListener(attribute, new IMRIValueListener() {
 			@Override
 			public void valueChanged(MRIValueEvent event) {
 				System.out.println(event.getValue());
 			}
