diff a/application/org.openjdk.jmc.joverflow.ui/src/main/java/org/openjdk/jmc/joverflow/ui/viewers/ReferrerTreeViewer.java b/application/org.openjdk.jmc.joverflow.ui/src/main/java/org/openjdk/jmc/joverflow/ui/viewers/ReferrerTreeViewer.java
--- a/application/org.openjdk.jmc.joverflow.ui/src/main/java/org/openjdk/jmc/joverflow/ui/viewers/ReferrerTreeViewer.java
+++ b/application/org.openjdk.jmc.joverflow.ui/src/main/java/org/openjdk/jmc/joverflow/ui/viewers/ReferrerTreeViewer.java
@@ -174,12 +174,12 @@
 		getTable().setHeaderVisible(true);
 		ColumnViewerToolTipSupport.enableFor(this);
 	}
 
 	private TableViewerColumn createTreeViewerColumn(
-			String label, Function<ReferrerItem, String> labelProvider, Function<ReferrerItem, String> toolTipProvider,
-			Comparator<ReferrerItem> comparator, boolean intent) {
+		String label, Function<ReferrerItem, String> labelProvider, Function<ReferrerItem, String> toolTipProvider,
+		Comparator<ReferrerItem> comparator, boolean intent) {
 		TableViewerColumn column = new TableViewerColumn(this, SWT.NONE);
 		column.getColumn().setWidth(200);
 		column.getColumn().setText(label);
 		column.getColumn().setMoveable(true);
 
@@ -202,21 +202,19 @@
 				if (intent) {
 					dx += 10 * ((ReferrerItem) element).getLevel();
 
 					Color fg = event.gc.getForeground();
 					event.gc.setForeground(referrerIconColor);
-					event.gc.drawPolygon(new int[] {
-							3 + dx, dy, //
+					event.gc.drawPolygon(new int[] {3 + dx, dy, //
 							6 + dx, 7 + dy, //
 							4 + dx, 7 + dy, //
 							4 + dx, 9 + dy, //
 							8 + dx, 9 + dy, //
 							8 + dx, 11 + dy, //
 							2 + dx, 11 + dy, //
 							2 + dx, 7 + dy, //
-							dx, 7 + dy
-					});
+							dx, 7 + dy});
 					event.gc.setForeground(fg);
 					dx += 11 + margin;
 				}
 
 				event.gc.drawString(labelProvider.apply((ReferrerItem) element), dx, bounds.y + margin, true);
