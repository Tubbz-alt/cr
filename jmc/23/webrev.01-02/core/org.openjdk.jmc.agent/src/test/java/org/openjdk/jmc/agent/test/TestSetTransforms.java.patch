diff a/core/org.openjdk.jmc.agent/src/test/java/org/openjdk/jmc/agent/test/TestSetTransforms.java b/core/org.openjdk.jmc.agent/src/test/java/org/openjdk/jmc/agent/test/TestSetTransforms.java
--- a/core/org.openjdk.jmc.agent/src/test/java/org/openjdk/jmc/agent/test/TestSetTransforms.java
+++ b/core/org.openjdk.jmc.agent/src/test/java/org/openjdk/jmc/agent/test/TestSetTransforms.java
@@ -86,36 +86,36 @@
 			+ "</events>"
 			+ "</jfragent>";
 
 	@Test
 	public void testSetTransforms() throws Exception {
-		boolean excpetionThrown = false;
+		boolean exceptionThrown = false;
 		try {
 			InstrumentMe.printHelloWorldJFR6();
 		} catch (Exception e) {
 			e.printStackTrace(System.err);
-			excpetionThrown = true;
+			exceptionThrown = true;
 		}
-		assertFalse(excpetionThrown);
+		assertFalse(exceptionThrown);
 
 		injectFailingEvent();
-		doSetTransfroms(XML_DESCRIPTION);
+		doSetTransforms(XML_DESCRIPTION);
 		try {
 			InstrumentMe.printHelloWorldJFR6();
 		} catch (RuntimeException e) {
-			excpetionThrown = true;
+			exceptionThrown = true;
 		}
-		assertTrue(excpetionThrown);
+		assertTrue(exceptionThrown);
 
-		doSetTransfroms("");
+		doSetTransforms("");
 		try {
 			InstrumentMe.printHelloWorldJFR6();
-			excpetionThrown = false;
+			exceptionThrown = false;
 		} catch (Exception e) {
 			e.printStackTrace(System.err);
 		}
-		assertFalse(excpetionThrown);
+		assertFalse(exceptionThrown);
 	}
 
 	private void injectFailingEvent() throws Exception {
 		Method method = new Method(METHOD_NAME, METHOD_DESCRIPTOR);
 		Map<String, String> attributes = new HashMap<String, String>();
@@ -157,11 +157,11 @@
 
 		TypeUtils.defineClass(eventTd.getEventClassName(), modifiedEvent, 0, modifiedEvent.length,
 				ClassLoader.getSystemClassLoader(), null);
 	}
 
-	private void doSetTransfroms(String xmlDescription) throws Exception  {
+	private void doSetTransforms(String xmlDescription) throws Exception  {
 		ObjectName name = new ObjectName(AGENT_OBJECT_NAME);
 		Object[] parameters = {xmlDescription};
 		String[] signature = {String.class.getName()};
 
 		MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
