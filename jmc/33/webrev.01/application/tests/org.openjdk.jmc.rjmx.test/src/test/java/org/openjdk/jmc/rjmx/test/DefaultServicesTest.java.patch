diff a/application/tests/org.openjdk.jmc.rjmx.test/src/test/java/org/openjdk/jmc/rjmx/test/DefaultServicesTest.java b/application/tests/org.openjdk.jmc.rjmx.test/src/test/java/org/openjdk/jmc/rjmx/test/DefaultServicesTest.java
--- a/application/tests/org.openjdk.jmc.rjmx.test/src/test/java/org/openjdk/jmc/rjmx/test/DefaultServicesTest.java
+++ b/application/tests/org.openjdk.jmc.rjmx.test/src/test/java/org/openjdk/jmc/rjmx/test/DefaultServicesTest.java
@@ -49,38 +49,40 @@
  */
 public class DefaultServicesTest extends ServerHandleTestCase {
 
 	@Test
 	public void testMBeanServerConnection() throws Exception {
-		IConnectionHandle handle = getDefaultServer().connect("Test");
-		MBeanServerConnection connection = handle.getServiceOrThrow(MBeanServerConnection.class);
+		try (IConnectionHandle handle = getDefaultServer().connect("Test")) {
+			MBeanServerConnection connection = handle.getServiceOrThrow(MBeanServerConnection.class);
 
-		String[] domains = connection.getDomains();
-		assertNotNull(connection.getDomains());
-		// At least java.lang, no matter what, or we're breaking J2SE compliance...
-		for (String domain : domains) {
-			if (domain.equals("java.lang")) {
-				return;
+			String[] domains = connection.getDomains();
+			assertNotNull(connection.getDomains());
+			// At least java.lang, no matter what, or we're breaking J2SE compliance...
+			for (String domain : domains) {
+				if (domain.equals("java.lang")) {
+					return;
+				}
 			}
+			fail("Could not find java.lang.management among the domains!");
 		}
-		fail("Could not find java.lang.management among the domains!");
 	}
 
 	@Test
 	public void xtestMBeanHelperService() throws Exception {
-		IConnectionHandle handle = getDefaultServer().connect("Test");
-		IMBeanHelperService helper = handle.getServiceOrThrow(IMBeanHelperService.class);
+		try (IConnectionHandle handle = getDefaultServer().connect("Test")) {
+			IMBeanHelperService helper = handle.getServiceOrThrow(IMBeanHelperService.class);
 
-		// FIXME: JMC-4270 - Server time approximation is not reliable. Disabling until a solution is found.
-//		long time = System.currentTimeMillis();
-//
-//		// The server time calculations should not be this much off.
-//		long diff = time - helper.getApproximateServerTime(time);
-//		assertLessThan("Server time approximation off by more than five seconds", 5000L, Math.abs(diff));
-//		System.out.println("DefaultServicesTest.testMBeanHelperService(): Server time approximation difference = "
-//				+ Math.abs(diff) + " ms");
+			// FIXME: JMC-4270 - Server time approximation is not reliable. Disabling until a solution is found.
+//			long time = System.currentTimeMillis();
+//	
+//			// The server time calculations should not be this much off.
+//			long diff = time - helper.getApproximateServerTime(time);
+//			assertLessThan("Server time approximation off by more than five seconds", 5000L, Math.abs(diff));
+//			System.out.println("DefaultServicesTest.testMBeanHelperService(): Server time approximation difference = "
+//					+ Math.abs(diff) + " ms");
 
-		// Should at least contain the java.lang mbeans. Just testing for the Threading one.
-		assertTrue("Could not find the Threading MBean!",
-				helper.getMBeanNames().contains(new ObjectName("java.lang:type=Threading")));
+			// Should at least contain the java.lang mbeans. Just testing for the Threading one.
+			assertTrue("Could not find the Threading MBean!",
+					helper.getMBeanNames().contains(new ObjectName("java.lang:type=Threading")));
+		}
 	}
 }
