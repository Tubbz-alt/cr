diff a/application/tests/org.openjdk.jmc.flightrecorder.controlpanel.ui.test/src/test/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/model/test/EventConfigurationTest.java b/application/tests/org.openjdk.jmc.flightrecorder.controlpanel.ui.test/src/test/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/model/test/EventConfigurationTest.java
--- a/application/tests/org.openjdk.jmc.flightrecorder.controlpanel.ui.test/src/test/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/model/test/EventConfigurationTest.java
+++ b/application/tests/org.openjdk.jmc.flightrecorder.controlpanel.ui.test/src/test/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/model/test/EventConfigurationTest.java
@@ -46,18 +46,20 @@
 
 @SuppressWarnings("nls")
 public class EventConfigurationTest {
 
 	private IEventConfiguration loadConfig(String jfcName) throws Exception {
-		InputStream in = EventConfigurationTest.class.getResourceAsStream(jfcName);
-		XMLModel model = EventConfiguration.createModel(in);
-		return new EventConfiguration(model);
+		try (InputStream in = EventConfigurationTest.class.getResourceAsStream(jfcName)) {
+			XMLModel model = EventConfiguration.createModel(in);
+			return new EventConfiguration(model);
+		}
 	}
 
 	private void validateConfig(String jfcName, SchemaVersion version) throws Exception {
-		InputStream in = EventConfigurationTest.class.getResourceAsStream(jfcName);
-		EventConfiguration.validate(in, jfcName, version);
+		try (InputStream in = EventConfigurationTest.class.getResourceAsStream(jfcName)) {
+			EventConfiguration.validate(in, jfcName, version);
+		}
 	}
 
 	@Test
 	public void testLoadV1() throws Exception {
 		loadConfig("continous_jfr_1_0.jfc");
