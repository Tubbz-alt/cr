diff a/application/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLModel.java b/application/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLModel.java
--- a/application/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLModel.java
+++ b/application/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/configuration/model/xml/XMLModel.java
@@ -257,13 +257,14 @@
 	 */
 	public void saveToFile(File file) throws IOException {
 		// NOTE: The pretty printer writes that the encoding is UTF-8, so we must make sure it is.
 		// Ensure charset exists before opening file for writing.
 		Charset charset = Charset.forName("UTF-8"); //$NON-NLS-1$
-		Writer osw = new OutputStreamWriter(new FileOutputStream(file), charset);
-		if (writeTo(osw)) {
-			setDirty(false);
+		try (Writer osw = new OutputStreamWriter(new FileOutputStream(file), charset)) {
+			if (writeTo(osw)) {
+				setDirty(false);
+			}
 		}
 	}
 
 	/**
 	 * Writes the model to the given {@link Writer}. Does not change dirtyness, as returned by
@@ -273,19 +274,16 @@
 	 * @param oneLineElements
 	 *            XML tags to output on a single line
 	 * @return true iff the model was successfully written to the {@link Writer}.
 	 */
 	public boolean writeTo(Writer writer) {
-		PrintWriter pw = new PrintWriter(writer);
-		try {
+		try (PrintWriter pw = new PrintWriter(writer)) {
 			PrettyPrinter pp = new PrettyPrinter(pw, m_validator.getElementsTooKeepOnOneLine());
 			pp.print(this);
 			pw.flush();
 			// PrintWriter never throws any exceptions, so this is how we find out if something went wrong.
 			return !pw.checkError();
-		} finally {
-			IOToolkit.closeSilently(pw);
 		}
 	}
 
 	public XMLTagInstance getRoot() {
 		return m_root;
