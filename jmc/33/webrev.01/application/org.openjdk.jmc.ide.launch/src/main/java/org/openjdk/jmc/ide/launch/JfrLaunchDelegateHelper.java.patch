diff a/application/org.openjdk.jmc.ide.launch/src/main/java/org/openjdk/jmc/ide/launch/JfrLaunchDelegateHelper.java b/application/org.openjdk.jmc.ide.launch/src/main/java/org/openjdk/jmc/ide/launch/JfrLaunchDelegateHelper.java
--- a/application/org.openjdk.jmc.ide.launch/src/main/java/org/openjdk/jmc/ide/launch/JfrLaunchDelegateHelper.java
+++ b/application/org.openjdk.jmc.ide.launch/src/main/java/org/openjdk/jmc/ide/launch/JfrLaunchDelegateHelper.java
@@ -238,24 +238,20 @@
 			}
 		};
 	}
 
 	protected void scheduleOpenJfrJob() {
-		FileInputStream stream = null;
-		try {
-			stream = new FileInputStream(recordingFile);
+		try (FileInputStream stream = new FileInputStream(recordingFile)) {
 			boolean wrote = jfrPathToOpen.tryWriteStream(stream, null);
 			if (wrote) {
 				String info = recordingFile.getAbsolutePath() + " was written to " + jfrPathToOpen.getPath() //$NON-NLS-1$
 						+ " which is not expected. Should have existed after refresh."; //$NON-NLS-1$
 				LaunchPlugin.getDefault().getLogger().info(info);
 			}
 			WorkbenchToolkit.asyncOpenEditor(new MCPathEditorInput(recordingFile, false));
 			return;
 		} catch (IOException e) {
-		} finally {
-			IOToolkit.closeSilently(stream);
 		}
 		displayErrorMessage(NLS.bind(Messages.JfrLaunch_JFR_FILE_DID_NOT_EXIST, jfrPathToOpen));
 	}
 
 	protected void displayErrorMessage(String message) {
