diff a/application/org.openjdk.jmc.console.ui.notification/src/main/java/org/openjdk/jmc/console/ui/notification/tab/TriggerToolkit.java b/application/org.openjdk.jmc.console.ui.notification/src/main/java/org/openjdk/jmc/console/ui/notification/tab/TriggerToolkit.java
--- a/application/org.openjdk.jmc.console.ui.notification/src/main/java/org/openjdk/jmc/console/ui/notification/tab/TriggerToolkit.java
+++ b/application/org.openjdk.jmc.console.ui.notification/src/main/java/org/openjdk/jmc/console/ui/notification/tab/TriggerToolkit.java
@@ -101,15 +101,14 @@
 	 *            the notification model
 	 * @return {@link IStatus} with severity {@link IStatus#OK} if the trigger were loaded
 	 *         successfully
 	 */
 	public static IStatus resetTriggers(NotificationRegistry model) {
-		InputStream stream = null;
-		try {
-			// Load DOM for default triggers
-			stream = NotificationPlugin.class.getResourceAsStream(NotificationPlugin.DEFAULT_TRIGGER_FILE);
-			Document doc = XmlToolkit.loadDocumentFromStream(new BufferedInputStream(stream));
+		// Load DOM for default triggers
+		try (InputStream stream = NotificationPlugin.class.getResourceAsStream(NotificationPlugin.DEFAULT_TRIGGER_FILE);
+				BufferedInputStream bis = new BufferedInputStream(stream)) {
+			Document doc = XmlToolkit.loadDocumentFromStream(bis);
 			Collection<TriggerRule> c = model.getAvailableRules();
 
 			// Remove all rules
 			TriggerRule[] rules = c.toArray(new TriggerRule[c.size()]);
 			for (TriggerRule rule : rules) {
@@ -122,12 +121,10 @@
 			translateStringValues(documentElement, bundle, NotificationPlugin.getDefault().getBundle());
 			model.importFromXML(documentElement);
 		} catch (Exception exc) {
 			return StatusFactory.createErr(NLS.bind(Messages.TriggerToolkit_ERROR_COULD_NOT_READ_DEFAULT_TEMPLATE_FILE,
 					NotificationPlugin.DEFAULT_TRIGGER_FILE), exc, false);
-		} finally {
-			IOToolkit.closeSilently(stream);
 		}
 		return StatusFactory.createOk(Messages.TriggerToolkit_MESSAGE_DEFAULT_TRIGGERS_LOADED);
 	}
 
 	private static void translateStringValues(Element e, ResourceBundle bundle, Bundle plugin) {
