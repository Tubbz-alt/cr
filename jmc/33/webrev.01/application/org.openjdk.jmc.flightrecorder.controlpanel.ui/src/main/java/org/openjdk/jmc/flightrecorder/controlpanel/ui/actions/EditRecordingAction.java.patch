diff a/application/org.openjdk.jmc.flightrecorder.controlpanel.ui/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/actions/EditRecordingAction.java b/application/org.openjdk.jmc.flightrecorder.controlpanel.ui/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/actions/EditRecordingAction.java
--- a/application/org.openjdk.jmc.flightrecorder.controlpanel.ui/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/actions/EditRecordingAction.java
+++ b/application/org.openjdk.jmc.flightrecorder.controlpanel.ui/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/actions/EditRecordingAction.java
@@ -32,11 +32,10 @@
  */
 package org.openjdk.jmc.flightrecorder.controlpanel.ui.actions;
 
 import org.eclipse.jface.wizard.IWizard;
 
-import org.openjdk.jmc.common.io.IOToolkit;
 import org.openjdk.jmc.flightrecorder.controlpanel.ui.ControlPanel;
 import org.openjdk.jmc.flightrecorder.controlpanel.ui.ImageConstants;
 import org.openjdk.jmc.flightrecorder.controlpanel.ui.RecordingProvider;
 import org.openjdk.jmc.flightrecorder.controlpanel.ui.messages.internal.Messages;
 import org.openjdk.jmc.flightrecorder.controlpanel.ui.wizards.EditRecordingWizard;
@@ -58,17 +57,13 @@
 		this.recording = recording;
 	}
 
 	@Override
 	public IWizard doCreateWizard() throws Exception {
-		IConnectionHandle connection = null;
-		try {
-			connection = recording.getServerHandle().connect(Messages.ACTION_EDIT_RECORDING_LABEL);
+		try (IConnectionHandle connection = recording.getServerHandle().connect(Messages.ACTION_EDIT_RECORDING_LABEL)) {
 			return new EditRecordingWizard(recording,
 					new RecordingWizardModel(connection.getServiceOrThrow(IFlightRecorderService.class),
 							recording.getRecordingDescriptor(), recording.getDumpToFile()));
-		} finally {
-			IOToolkit.closeSilently(connection);
 		}
 	}
 
 }
