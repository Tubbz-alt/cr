diff a/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/EventAppearance.java b/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/EventAppearance.java
--- a/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/EventAppearance.java
+++ b/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/EventAppearance.java
@@ -76,22 +76,19 @@
 	private static Properties loadProperties(String fileName) {
 		// Reading through Properties now, for simplicity.
 		// Might change to ResourceBundle, or do as FieldToolkit (or NLS),
 		// if localization is needed. (Which I doubt, since it would be confusing.)
 		Properties properties = new Properties();
-		InputStream in = EventAppearance.class.getResourceAsStream(fileName);
-		if (in != null) {
-			try {
+		try (InputStream in = EventAppearance.class.getResourceAsStream(fileName)) {
+			if (in != null) {
 				properties.load(in);
-			} catch (IOException e) {
-				System.err.println("Problem loading file '" + fileName + "'"); //$NON-NLS-1$ //$NON-NLS-2$
-				e.printStackTrace();
-			} finally {
-				IOToolkit.closeSilently(in);
+			} else {
+				System.err.println("Couldn't find file '" + fileName + "'"); //$NON-NLS-1$ //$NON-NLS-2$
 			}
-		} else {
-			System.err.println("Couldn't find file '" + fileName + "'"); //$NON-NLS-1$ //$NON-NLS-2$
+		} catch (IOException e) {
+			System.err.println("Problem loading file '" + fileName + "'"); //$NON-NLS-1$ //$NON-NLS-2$
+			e.printStackTrace();
 		}
 		return properties;
 	}
 
 	public static String[] getHumanSegmentArray(String path) {
