diff a/application/org.openjdk.jmc.flightrecorder.controlpanel.ui/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/actions/StartRecordingAction.java b/application/org.openjdk.jmc.flightrecorder.controlpanel.ui/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/actions/StartRecordingAction.java
--- a/application/org.openjdk.jmc.flightrecorder.controlpanel.ui/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/actions/StartRecordingAction.java
+++ b/application/org.openjdk.jmc.flightrecorder.controlpanel.ui/src/main/java/org/openjdk/jmc/flightrecorder/controlpanel/ui/actions/StartRecordingAction.java
@@ -58,13 +58,11 @@
 		this.recorder = recorder;
 	}
 
 	@Override
 	public IWizard doCreateWizard() throws Exception {
-		IConnectionHandle handle = null;
-		try {
-			handle = recorder.getServerHandle().connect(Messages.ACTION_START_RECORDING_LABEL);
+		try (IConnectionHandle handle = recorder.getServerHandle().connect(Messages.ACTION_START_RECORDING_LABEL)) {
 			IFlightRecorderService flrService = handle.getServiceOrNull(IFlightRecorderService.class);
 			if (flrService == null) {
 				throw new FlightRecorderException(JVMSupportToolkit.getNoFlightRecorderErrorMessage(handle, false));
 			} else if (flrService.isEnabled()
 					|| ControlPanel.askUserForEnable(flrService, Messages.COMMERCIAL_FEATURES_QUESTION)) {
@@ -76,11 +74,9 @@
 				return null;
 			}
 		} catch (Exception e) {
 			recorder.setWarning(e.getLocalizedMessage());
 			throw e;
-		} finally {
-			IOToolkit.closeSilently(handle);
 		}
 	}
 
 }
