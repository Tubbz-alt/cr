diff a/application/org.openjdk.jmc.rjmx/src/main/java/org/openjdk/jmc/rjmx/persistence/internal/PersistenceFile.java b/application/org.openjdk.jmc.rjmx/src/main/java/org/openjdk/jmc/rjmx/persistence/internal/PersistenceFile.java
--- a/application/org.openjdk.jmc.rjmx/src/main/java/org/openjdk/jmc/rjmx/persistence/internal/PersistenceFile.java
+++ b/application/org.openjdk.jmc.rjmx/src/main/java/org/openjdk/jmc/rjmx/persistence/internal/PersistenceFile.java
@@ -75,12 +75,11 @@
 	final MRI mri;
 	final long fileLen;
 
 	PersistenceFile(File file) throws IOException {
 		this.file = file;
-		RandomAccessFile raf = new RandomAccessFile(file, "r"); //$NON-NLS-1$
-		try {
+		try (RandomAccessFile raf = new RandomAccessFile(file, "r")) { //$NON-NLS-1$
 			mri = MRI.createFromQualifiedName(raf.readUTF());
 			fileLen = raf.length();
 			eventsStart = raf.getFilePointer();
 			eventCount = (int) ((fileLen - eventsStart) / EVENT_SIZE);
 			if (eventCount > 0) {
@@ -89,12 +88,10 @@
 				end = raf.readLong();
 			} else {
 				start = Long.MAX_VALUE;
 				end = Long.MAX_VALUE;
 			}
-		} finally {
-			IOToolkit.closeSilently(raf);
 		}
 	}
 
 	boolean isCorrupt() {
 		return eventsStart + (long) eventCount * EVENT_SIZE != fileLen;
@@ -102,15 +99,12 @@
 
 	synchronized ITimestampedData[] getEvents(long min, long max) throws IOException {
 		if (events == null) {
 			// TODO: For now read all data
 			events = new ITimestampedData[eventCount];
-			RandomAccessFile raf = new RandomAccessFile(file, "r"); //$NON-NLS-1$
-			try {
+			try (RandomAccessFile raf = new RandomAccessFile(file, "r")) { //$NON-NLS-1$
 				readEvents(raf, 0, eventCount);
-			} finally {
-				IOToolkit.closeSilently(raf);
 			}
 		}
 		return events;
 	}
 
