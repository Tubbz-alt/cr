diff a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/views/FlameGraphView.java b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/views/FlameGraphView.java
--- a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/views/FlameGraphView.java
+++ b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/views/FlameGraphView.java
@@ -55,13 +55,13 @@
 import org.eclipse.jface.viewers.IStructuredSelection;
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.browser.Browser;
 import org.eclipse.swt.browser.ProgressAdapter;
 import org.eclipse.swt.browser.ProgressEvent;
-import org.eclipse.swt.custom.SashForm;
 import org.eclipse.swt.events.MenuDetectEvent;
 import org.eclipse.swt.events.MenuDetectListener;
+import org.eclipse.swt.layout.FillLayout;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.ui.IMemento;
 import org.eclipse.ui.ISelectionListener;
 import org.eclipse.ui.IViewSite;
 import org.eclipse.ui.IWorkbenchPart;
@@ -85,10 +85,12 @@
 	private static final String UNCLASSIFIABLE_FRAME_DESC = getStacktraceMessage(STACKTRACE_UNCLASSIFIABLE_FRAME_DESC);
 	private static final String HTML_PAGE;
 	static {
 		// from: https://cdn.jsdelivr.net/gh/spiermar/d3-flame-graph@2.0.3/dist/d3-flamegraph.css
 		String cssD3Flamegraph = "jslibs/d3-flamegraph.css";
+		// jmc flameview stylesheet
+		String cssFlameView = "css/FlameGraphView.css";
 		// from: https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js
 		String jsHtml5shiv = "jslibs/html5shiv.min.js";
 		// from: https://oss.maxcdn.com/respond/1.4.2/respond.min.js
 		String jsRespond = "jslibs/respond.min.js";
 		// from: https://d3js.org/d3.v4.min.js
@@ -96,25 +98,26 @@
 		// from: https://cdnjs.cloudflare.com/ajax/libs/d3-tip/0.9.1/d3-tip.min.js
 		String jsD3Tip = "jslibs/d3-tip.min.js";
 		// from: https://cdn.jsdelivr.net/gh/spiermar/d3-flame-graph@2.0.3/dist/d3-flamegraph.min.js
 		String jsD3FlameGraph = "jslibs/d3-flamegraph.min.js";
 		// jmc flameview coloring functions
-		String jsFlameviewColoring = "flameviewColoring.js";
+		String jsFlameviewColoring = "src/main/js/flameviewColoring.js";
 
+		String stylesheets = loadLibraries(cssD3Flamegraph, cssFlameView);
 		String jsIeLibraries = loadLibraries(jsHtml5shiv, jsRespond);
 		String jsD3Libraries = loadLibraries(jsD3V4, jsD3Tip, jsD3FlameGraph);
 
 		// formatter arguments for the template: %1 - CSSs, %2 - IE9 specific scripts, %3 - 3rd party scripts %4 - 4th Flameview Coloring
-		HTML_PAGE = String.format(fileContent("page.template"), fileContent(cssD3Flamegraph), jsIeLibraries,
-				jsD3Libraries, fileContent(jsFlameviewColoring));
+		HTML_PAGE = String.format(fileContent("page.template"), stylesheets, jsIeLibraries, jsD3Libraries,
+				fileContent(jsFlameviewColoring));
 	}
 
 	private static final ExecutorService MODEL_EXECUTOR = Executors.newFixedThreadPool(1);
 	private FrameSeparator frameSeparator;
 
 	private Browser browser;
-	private SashForm container;
+	private Composite container;
 	private TraceNode currentRoot;
 	private CompletableFuture<TraceNode> currentModelCalculator;
 	private boolean threadRootAtTop = true;
 	private IItemCollection currentItems;
 	private GroupByAction[] groupByActions;
@@ -165,13 +168,13 @@
 		super.dispose();
 	}
 
 	@Override
 	public void createPartControl(Composite parent) {
-		container = new SashForm(parent, SWT.HORIZONTAL);
+		container = new Composite(parent, SWT.NONE);
+		container.setLayout(new FillLayout());
 		browser = new Browser(container, SWT.NONE);
-		container.setMaximizedControl(browser);
 		browser.addMenuDetectListener(new MenuDetectListener() {
 			@Override
 			public void menuDetected(MenuDetectEvent e) {
 				e.doit = false;
 			}
diff a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/resources/css/FlameGraphView.css b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/resources/css/FlameGraphView.css
--- /dev/null
+++ b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/resources/css/FlameGraphView.css
@@ -0,0 +1,3 @@
+svg {
+    width: 100%;
+}
diff a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/resources/page.template b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/resources/page.template
--- a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/resources/page.template
+++ b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/resources/page.template
@@ -25,11 +25,11 @@
         	.attr('class', 'd3-flame-graph-tip')
         	.html(adjustTip);
 
 		function processGraph(jsonObj) {
 			flameGraph = d3.flamegraph()
-				.width(windowSize() * 0.9)
+				.width(chartSize())
 				.cellHeight(18)
 				.transitionDuration(320)
 				.minFrameSize(5)
 				.transitionEase(d3.easeCubic)
 				.sort(true)
@@ -41,17 +41,17 @@
 			d3.select("#chart")
 				.datum(currentJson)
 				.call(flameGraph);
 		}
 
-		function windowSize() {
-			return Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
+		function chartSize() {
+			return document.getElementById("chart").clientWidth;
 		}
 
 		function resizeFlameGraph() {
 			if (flameGraph) {
-				flameGraph.width(windowSize() * 0.9);
+				flameGraph.width(chartSize());
 				d3.select("#chart")
 					.datum(currentJson)
 					.call(flameGraph);
 			}
 		}
