diff a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/resources/jsjmclibs/flameviewColoring.js b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/resources/jsjmclibs/flameviewColoring.js
--- a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/resources/jsjmclibs/flameviewColoring.js
+++ b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/resources/jsjmclibs/flameviewColoring.js
@@ -15,36 +15,43 @@
 const packageJavaValueL = 65;
 const packageJavaHslHSValues = [184, 10];
 const packageSunValueLMax = 54;
 const packageSunValueL = 31;
 const packageSunHSValues = [211, 21];
+const packageComSunValueLMax = 55;
+const packageComSunValueL = 45;
+const packageComSunHSValues = [204, 5];
 const packageRestValueHMax = 360;
 const packageRestValueH = 0;
 const packageRestSLValues = [42, 53];
 const packageConsideredDepth = 3;
 const packageMarkerJava = "java";
 const packageMarkerSun = "sun";
+const packageMarkerComSun = "comSun";
 const packageMarkerRest = "rest";
 const packagesIdentifierMap = new Map().set("java.", packageMarkerJava).set("sun.", packageMarkerSun)
-    .set("com.sun.", packageMarkerSun);
+    .set("com.sun.", packageMarkerComSun);
 const packageColorMap = new Map().set("", rootPackageColor);
 
 const colorByPackage = function (p) {
     if (p === undefined) {
         return invalidPackageColor;
     } else {
-        const packageNameStrip = stripPackageName(p);	
+    	const packageNameStrip = stripPackageName(p);	
         const packageSelectedColor = packageColorMap.get(packageNameStrip);
         if (packageSelectedColor === undefined) {
-            const packageMarkerSelected = getPackageMarker(packageNameStrip);
-
-			const packageNameStripHash = packageNameStrip.hashCode();
+        	const packageMarkerSelected = getPackageMarker(packageNameStrip);
+        	const packageNameStripHash = packageNameStrip.hashCode();
             switch (packageMarkerSelected) {
                 case packageMarkerJava:
                     const packageJavaSelectedColor = createHslColorString(packageJavaHslHSValues[0], packageJavaHslHSValues[1], adjustHslPropertyByHash(packageNameStripHash, packageJavaValueL, packageJavaValueLMax));
                     packageColorMap.set(packageNameStrip, packageJavaSelectedColor);
                     break;
+                case packageMarkerComSun:
+                	const packageComSunSelectedColor = createHslColorString(packageComSunHSValues[0], packageComSunHSValues[1], adjustHslPropertyByHash(packageNameStripHash, packageComSunValueL, packageComSunValueLMax));
+                	packageColorMap.set(packageNameStrip, packageComSunSelectedColor);
+                	break;
                 case packageMarkerSun:
                     const packageSunSelectedColor = createHslColorString(packageSunHSValues[0], packageSunHSValues[1], adjustHslPropertyByHash(packageNameStripHash, packageSunValueL, packageSunValueLMax));
                     packageColorMap.set(packageNameStrip, packageSunSelectedColor);
                     break;
                 case packageMarkerRest:
