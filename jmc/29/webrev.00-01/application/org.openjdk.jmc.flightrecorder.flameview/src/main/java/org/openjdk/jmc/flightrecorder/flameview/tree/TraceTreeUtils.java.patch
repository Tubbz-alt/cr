diff a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/tree/TraceTreeUtils.java b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/tree/TraceTreeUtils.java
--- a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/tree/TraceTreeUtils.java
+++ b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/tree/TraceTreeUtils.java
@@ -82,12 +82,11 @@
 		StacktraceFrame firstFrame = branch.getFirstFrame();
 		TraceNode currentNode = new TraceNode(format(firstFrame), firstFrame.getItemCount(),
 				formatPackageName(firstFrame));
 		root.addChild(currentNode);
 		for (StacktraceFrame frame : branch.getTailFrames()) {
-			TraceNode newNode = new TraceNode(format(frame), frame.getItemCount(),
-					formatPackageName(frame));
+			TraceNode newNode = new TraceNode(format(frame), frame.getItemCount(), formatPackageName(frame));
 			currentNode.addChild(newNode);
 			currentNode = newNode;
 		}
 		addFork(currentNode, branch.getEndFork());
 	}
@@ -101,11 +100,11 @@
 	private static String format(StacktraceFrame sFrame) {
 		IMCFrame frame = sFrame.getFrame();
 		IMCMethod method = frame.getMethod();
 		return FormatToolkit.getHumanReadable(method, false, false, true, false, true, false);
 	}
-	
+
 	private static String formatPackageName(StacktraceFrame sFrame) {
 		IMCFrame frame = sFrame.getFrame();
 		IMCMethod method = frame.getMethod();
 		return FormatToolkit.getPackage(method.getType().getPackage());
 	}
