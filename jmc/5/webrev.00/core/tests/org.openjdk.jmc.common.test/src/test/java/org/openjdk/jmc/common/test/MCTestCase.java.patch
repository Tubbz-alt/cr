diff a/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/MCTestCase.java b/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/MCTestCase.java
--- a/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/MCTestCase.java
+++ b/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/MCTestCase.java
@@ -77,12 +77,12 @@
 	 * Asserts that with respect to all bits in the mask, a long is equal to the given value. If it
 	 * is not an AssertionFailedError is thrown with the given message.
 	 */
 	static public void assertMaskedEquals(String message, long expected, long actual, long mask) {
 		if (((expected ^ actual) & mask) != 0) {
-			Assert.fail(((message != null) ? message + ' ' : "")
-					+ "masked with " + hex(mask) + " expected:<" + hex(expected) + "> was not:<" + hex(actual) + ">");
+			Assert.fail(((message != null) ? message + ' ' : "") + "masked with " + hex(mask) + " expected:<"
+					+ hex(expected) + "> was not:<" + hex(actual) + ">");
 		}
 	}
 
 	/**
 	 * Asserts that with respect to all bits in the mask, a long is equal to the given value.
@@ -99,12 +99,12 @@
 	 * Asserts that a {@link Comparable} is within the given (inclusive) range. If it is not an
 	 * AssertionFailedError is thrown with the given message.
 	 */
 	static public <T extends Comparable<T>> void assertBetween(String message, T min, T max, T actual) {
 		if ((min.compareTo(actual) > 0) || (max.compareTo(actual) < 0)) {
-			Assert.fail(((message != null) ? message + ' ' : "")
-					+ "expected in:[" + min + ", " + max + "] was not:<" + actual + ">");
+			Assert.fail(((message != null) ? message + ' ' : "") + "expected in:[" + min + ", " + max + "] was not:<"
+					+ actual + ">");
 		}
 	}
 
 	/**
 	 * Asserts that a {@link Comparable} is within the given (inclusive) range.
@@ -117,12 +117,12 @@
 	 * Asserts that a {@link Comparable} is less or equal than the given value. If it is not an
 	 * AssertionFailedError is thrown with the given message.
 	 */
 	static public <T extends Comparable<T>> void assertMax(String message, T max, T actual) {
 		if (max.compareTo(actual) < 0) {
-			Assert.fail(((message != null) ? message + ' ' : "")
-					+ "expected max:<" + max + "> was not:<" + actual + ">");
+			Assert.fail(
+					((message != null) ? message + ' ' : "") + "expected max:<" + max + "> was not:<" + actual + ">");
 		}
 	}
 
 	/**
 	 * Asserts that a {@link Comparable} is less or equal than the given value.
@@ -135,12 +135,12 @@
 	 * Asserts that a {@link Comparable} is greater or equal than the given value. If it is not an
 	 * AssertionFailedError is thrown with the given message.
 	 */
 	static public <T extends Comparable<T>> void assertMin(String message, T min, T actual) {
 		if (min.compareTo(actual) > 0) {
-			Assert.fail(((message != null) ? message + ' ' : "")
-					+ "expected min:<" + min + "> was not:<" + actual + ">");
+			Assert.fail(
+					((message != null) ? message + ' ' : "") + "expected min:<" + min + "> was not:<" + actual + ">");
 		}
 	}
 
 	/**
 	 * Asserts that a {@link Comparable} is greater or equal than the given value.
@@ -153,12 +153,12 @@
 	 * Asserts that a {@link Comparable} is less than the given value. If it is not an
 	 * AssertionFailedError is thrown with the given message.
 	 */
 	static public <T extends Comparable<T>> void assertLessThan(String message, T greaterVal, T actual) {
 		if (greaterVal.compareTo(actual) <= 0) {
-			Assert.fail(((message != null) ? message + ' ' : "")
-					+ "expected less than:<" + greaterVal + "> was not:<" + actual + ">");
+			Assert.fail(((message != null) ? message + ' ' : "") + "expected less than:<" + greaterVal + "> was not:<"
+					+ actual + ">");
 		}
 	}
 
 	/**
 	 * Asserts that a {@link Comparable} is less than the given value.
@@ -171,12 +171,12 @@
 	 * Asserts that a {@link Comparable} is greater than the given value. If it is not an
 	 * AssertionFailedError is thrown with the given message.
 	 */
 	static public <T extends Comparable<? super T>> void assertGreaterThan(String message, T lesserVal, T actual) {
 		if (lesserVal.compareTo(actual) >= 0) {
-			Assert.fail(((message != null) ? message + ' ' : "")
-					+ "expected greater than:<" + lesserVal + "> was not:<" + actual + ">");
+			Assert.fail(((message != null) ? message + ' ' : "") + "expected greater than:<" + lesserVal + "> was not:<"
+					+ actual + ">");
 		}
 	}
 
 	/**
 	 * Asserts that a {@link Comparable} is greater than the given value.
