diff a/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/unit/DeriveUnitTest.java b/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/unit/DeriveUnitTest.java
--- a/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/unit/DeriveUnitTest.java
+++ b/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/unit/DeriveUnitTest.java
@@ -67,11 +67,11 @@
 		min = UnitLookup.MINUTE;
 		h = span.getUnit("h");
 		d = span.getUnit("d");
 		wk = span.getUnit("wk");
 		y = span.getUnit("a");
-		
+
 		Hz = UnitLookup.HERTZ;
 		LinearKindOfQuantity freq = UnitLookup.FREQUENCY;
 		kHz = freq.getUnit(DecimalPrefix.KILO);
 		MHz = freq.getUnit(DecimalPrefix.MEGA);
 		mHz = freq.getUnit(DecimalPrefix.MILLI);
@@ -104,19 +104,19 @@
 		// FIXME: One could argue that the expected unit should be B here.
 		assertDerivedUnit(null, B.quantity(0.5));
 
 		assertDerivedUnit(null, B.quantity(0.1));
 	}
-	
+
 	@Test
 	public void testFrequencies() throws Exception {
 		assertDerivedUnit(Hz, Hz.quantity(1));
 		assertDerivedUnit(Hz, Hz.quantity(999));
 		assertDerivedUnit(kHz, Hz.quantity(1000));
 		assertDerivedUnit(kHz, kHz.quantity(999));
 		assertDerivedUnit(MHz, kHz.quantity(1000));
-		
+
 		assertDerivedUnit(mHz, Hz.quantity(0.5));
 		assertDerivedUnit(uHz, mHz.quantity(0.5));
 	}
 
 	@Test
