diff a/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/dataproviders/JvmInternalsDataProvider.java b/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/dataproviders/JvmInternalsDataProvider.java
--- a/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/dataproviders/JvmInternalsDataProvider.java
+++ b/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/dataproviders/JvmInternalsDataProvider.java
@@ -55,11 +55,10 @@
 	 * comparison is done with 'c:/myjar.jar').
 	 */
 	private static final String[] OPTIONS = new String[] {"-XX", "-javaagent", "-agent"};
 	private static final Map<String, String> EQUIVALENT = new HashMap<>();
 
-
 	static {
 		putBiMap("-Xbatch", "BackgroundCompilation");
 		putBiMap("-Xmaxjitcodesize", "ReservedCodeCacheSize");
 		putBiMap("-Xmx", "MaxHeapSize");
 		putBiMap("-Xmn", "NewSize");
@@ -153,14 +152,13 @@
 					dupes.put(flag, new ArrayList<String>());
 					dupes.get(flag).add(seenFlags.get(flag));
 				}
 				dupes.get(flag).add(fullArgument);
 
-			}
-			else {
+			} else {
 				seenFlags.put(flag, fullArgument);
-			}		
+			}
 		}
 		return dupes.values();
 	}
 
 	private static String scrubPrefix(String argument, String prefix) {
