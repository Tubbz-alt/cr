diff a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/unit/UnitLookup.java b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/unit/UnitLookup.java
--- a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/unit/UnitLookup.java
+++ b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/unit/UnitLookup.java
@@ -446,11 +446,11 @@
 		memory.addFormatter(new KindOfQuantity.ExactFormatter<>(memory));
 		memory.addFormatter(new KindOfQuantity.VerboseFormatter<>(memory));
 
 		return memory;
 	}
-	
+
 	private static LinearKindOfQuantity createFrequency() {
 		LinearKindOfQuantity frequency = new LinearKindOfQuantity("frequency", "Hz", EnumSet.range(NONE, TERA),
 				EnumSet.range(YOCTO, YOTTA));
 
 		frequency.addFormatter(new LinearKindOfQuantity.AutoFormatter(frequency, "Dynamic"));
@@ -479,11 +479,11 @@
 		// UCUM defines the symbol "wk" for the week.
 		LinearUnit week = timeSpan.makeUnit("wk", day.quantity(7));
 		// The Julian year (annum, symbol "a") is defined by UCUM for use with SI, since it is the basis for the light year (so this is exact).
 		LinearUnit year = timeSpan.makeUnit("a", hour.quantity(8766));
 		// A mean Julian month is 1/12 of a Julian year = 365.25*24/12 h = 730.5 h = 43 830 min (exactly).
-//		LinearUnit month = timeSpan.makeUnit("mo", minute.quantity(43830));
+		// LinearUnit month = timeSpan.makeUnit("mo", minute.quantity(43830));
 
 		LinearUnit[] units = {minute, hour, day, week, year};
 		for (LinearUnit unit : units) {
 			timeSpan.addUnit(unit);
 		}
