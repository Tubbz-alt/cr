diff a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/common/AggregationGrid.java b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/common/AggregationGrid.java
--- a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/common/AggregationGrid.java
+++ b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/common/AggregationGrid.java
@@ -78,20 +78,19 @@
 		}
 	}
 
 	public static class AggregateRow {
 		final int index;
-		final IItemCollection rowItems;
+		final IItemCollection items;
 		final Object key;
 		final IQuantity count;
 		final AggregationModel model;
 
 		AggregateRow(AggregationModel model, Object key, List<IItem[]> itemsByType, int rowIndex) {
 			this.model = model;
 			this.key = key;
-
-			this.rowItems = buildItemCollection(itemsByType);
+			this.items = buildItemCollection(itemsByType);
 			this.count = UnitLookup.NUMBER_UNITY.quantity(itemsByType.stream().mapToInt(ia -> ia.length).sum());
 			this.index = rowIndex;
 		}
 
 		@Override
@@ -128,11 +127,11 @@
 			}
 			return null;
 		}
 
 		private Object calculateValue(AggregateRow row) {
-			return valueFunction.apply(row.rowItems);
+			return valueFunction.apply(row.items);
 		}
 	}
 
 	private static class PercentageColumn implements IMemberAccessor<Object, Object> {
 
@@ -156,11 +155,11 @@
 			}
 			return null;
 		}
 
 		private Object calculateValue(AggregateRow row) {
-			return valueFunction.apply(row.rowItems, row.model.modelItems);
+			return valueFunction.apply(row.items, row.model.modelItems);
 		}
 	}
 
 	private int createdColumns;
 
@@ -171,11 +170,11 @@
 	public static IQuantity getCount(Object row) {
 		return (row instanceof AggregateRow) ? ((AggregateRow) row).count : null;
 	}
 
 	public static IItemCollection getItems(Object row) {
-		return ((AggregateRow) row).rowItems;
+		return ((AggregateRow) row).items;
 	}
 
 	public static double getCountFraction(Object row) {
 		if ((row instanceof AggregateRow)) {
 			AggregateRow ai = ((AggregateRow) row);
