diff a/application/org.openjdk.jmc.ui.common/src/main/java/org/openjdk/jmc/ui/common/jvm/JVMDescriptor.java b/application/org.openjdk.jmc.ui.common/src/main/java/org/openjdk/jmc/ui/common/jvm/JVMDescriptor.java
--- a/application/org.openjdk.jmc.ui.common/src/main/java/org/openjdk/jmc/ui/common/jvm/JVMDescriptor.java
+++ b/application/org.openjdk.jmc.ui.common/src/main/java/org/openjdk/jmc/ui/common/jvm/JVMDescriptor.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.
  * 
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * The contents of this file are subject to the terms of either the Universal Permissive License
  * v 1.0 as shown at http://oss.oracle.com/licenses/upl
@@ -36,25 +36,27 @@
  * Metadata for a running JVM
  */
 public class JVMDescriptor {
 	private final String javaVersion;
 	private final JVMType jvmType;
+	private final String jvmVendor;
 	private final JVMArch jvmArch;
 	private final String javaCommand;
 	private final String jvmArguments;
 	private final Integer pid;
 	private final Boolean debug;
 	private final Connectable connectable;
 
 	public JVMDescriptor(String javaVersion, JVMType jvmType, JVMArch jvmArch, String javaCommand, String jvmArguments,
-			Integer pid, boolean debug, Connectable attachable) {
+			String jvmVendor, Integer pid, boolean debug, Connectable attachable) {
 		super();
 		this.javaVersion = javaVersion;
 		this.jvmType = jvmType;
 		this.jvmArch = jvmArch;
 		this.javaCommand = javaCommand;
 		this.jvmArguments = jvmArguments;
+		this.jvmVendor = jvmVendor;
 		this.pid = pid;
 		this.debug = debug;
 		connectable = attachable;
 	}
 
@@ -76,10 +78,14 @@
 
 	public String getJVMArguments() {
 		return jvmArguments;
 	}
 
+	public String getJvmVendor() {
+		return jvmVendor;
+	}
+
 	public Integer getPid() {
 		return pid;
 	}
 
 	public Boolean isDebug() {
