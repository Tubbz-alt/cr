diff a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/unit/TimestampUnit.java b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/unit/TimestampUnit.java
--- a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/unit/TimestampUnit.java
+++ b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/unit/TimestampUnit.java
@@ -45,17 +45,16 @@
 import org.openjdk.jmc.common.messages.internal.Messages;
 
 public class TimestampUnit extends TypedUnit<TimestampUnit> {
 	private final LinearUnit timeOffsetUnit;
 	private final String unitId;
-	private final String unitDescription;
+	private String unitDescription;
 
 	TimestampUnit(LinearUnit timeOffsetUnit) {
 		this.timeOffsetUnit = timeOffsetUnit;
 		unitId = "epoch" + timeOffsetUnit.getIdentifier(); //$NON-NLS-1$
-		String multiplier = timeOffsetUnit.asWellKnownQuantity().displayUsing(IDisplayable.EXACT);
-		unitDescription = MessageFormat.format(Messages.getString(Messages.TimestampKind_SINCE_1970_MSG), multiplier);
+		unitDescription = null;
 	}
 
 	@Override
 	protected final Class<TimestampUnit> getUnitClass() {
 		return TimestampUnit.class;
@@ -222,10 +221,15 @@
 		return ""; //$NON-NLS-1$
 	}
 
 	@Override
 	public String getLocalizedDescription() {
+		if (unitDescription == null) {
+			String multiplier = timeOffsetUnit.asWellKnownQuantity().displayUsing(IDisplayable.EXACT);
+			unitDescription = MessageFormat.format(Messages.getString(Messages.TimestampKind_SINCE_1970_MSG),
+					multiplier);
+		}
 		return unitDescription;
 	}
 
 	@Override
 	public String[] getAltLocalizedNames() {
