diff a/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/util/TypeUtils.java b/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/util/TypeUtils.java
--- a/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/util/TypeUtils.java
+++ b/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/util/TypeUtils.java
@@ -233,18 +233,41 @@
 	 */
 	public static String parameterize(String className) {
 		return "L" + className + ";"; //$NON-NLS-1$ //$NON-NLS-2$
 	}
 
+	/**
+	 * Converts a canonical class name into the internal form (binary name).
+	 * 
+	 * eg. <code>com.company.project</code> converts into <code>com/company/project</code>
+	 * 
+	 * @param className the canonical class name
+	 * @return the internal form
+	 */
 	public static String getInternalName(String className) {
 		return className.replace('.', '/');
 	}
 
+	/**
+	 * Converts a internal class name (binary name) into the canonical form.
+	 *
+	 * ie. <code>com/company/project</code> converts into <code>com.company.project</code> 
+	 * 
+	 * @param binaryName the internal class name
+	 * @return in canonical form
+	 */
 	public static String getCanonicalName(String binaryName) {
 		return binaryName.replace('/', '.');
 	}
 
+	/**
+	 * Returns the constant loading instruction that pushes a zero value of the given type onto the operand stack. A 
+	 * null reference is pushed if the given type is an object or an array.
+	 * 
+	 * @param type the type of the operand
+	 * @return the instruction
+	 */
 	public static int getConstZeroOpcode(Type type) {
 		switch (type.getSort()) {
 		case Type.BOOLEAN:
 		case Type.BYTE:
 		case Type.CHAR:
@@ -266,10 +289,17 @@
 		default:
 			throw new AssertionError();
 		}
 	}
 
+	/**
+	 * Returns a array element for ASM's <code>MethodVisitor.visitFrame()</code> method used for frame verification of 
+	 * a given type.
+	 * 
+	 * @param type the type of the element on the operand stack or in the local variable table
+	 * @return a array element for <code>MethodVisitor.visitFrame()</code>'s parameter
+	 */
 	public static Object getFrameVerificationType(Type type) {
 		switch (type.getSort()) {
 		case Type.BOOLEAN:
 		case Type.BYTE:
 		case Type.CHAR:
