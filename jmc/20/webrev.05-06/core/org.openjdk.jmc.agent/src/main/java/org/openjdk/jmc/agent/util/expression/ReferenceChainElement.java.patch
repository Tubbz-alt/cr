diff a/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/util/expression/ReferenceChainElement.java b/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/util/expression/ReferenceChainElement.java
--- a/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/util/expression/ReferenceChainElement.java
+++ b/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/util/expression/ReferenceChainElement.java
@@ -50,12 +50,10 @@
 	Type getMemberingType();
 
 	// the type of the class/interface which the reference is to
 	Type getReferencedType();
 
-	// if the reference is allow from a caller
-	boolean isAccessibleFrom(Class<?> caller);
 
 	// if this reference is static
 	boolean isStatic();
 
 	class FieldReference implements ReferenceChainElement {
@@ -92,15 +90,10 @@
 		@Override
 		public Type getReferencedType() {
 			return Type.getType(getReferencedClass());
 		}
 
-		@Override
-		public boolean isAccessibleFrom(Class<?> caller) {
-			return AccessUtils.isAccessible(memberingClass, field, caller);
-		}
-
 		@Override
 		public boolean isStatic() {
 			return Modifier.isStatic(field.getModifiers());
 		}
 
@@ -145,15 +138,10 @@
 		@Override
 		public Type getReferencedType() {
 			return Type.getType(getReferencedClass());
 		}
 
-		@Override
-		public boolean isAccessibleFrom(Class<?> caller) {
-			return clazz.equals(caller);
-		}
-
 		@Override
 		public boolean isStatic() {
 			return false;
 		}
 
@@ -207,22 +195,10 @@
 		@Override
 		public Type getReferencedType() {
 			return Type.getType(getReferencedClass());
 		}
 
-		@Override
-		public boolean isAccessibleFrom(Class<?> caller) {
-			Class<?> c = caller;
-			while (c != null) {
-				if (c.equals(innerClass)) {
-					return true;
-				}
-				c = c.getEnclosingClass();
-			}
-			return false;
-		}
-
 		@Override
 		public boolean isStatic() {
 			return false;
 		}
 
