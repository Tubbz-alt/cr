diff a/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/jfr/JFRTransformDescriptor.java b/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/jfr/JFRTransformDescriptor.java
--- a/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/jfr/JFRTransformDescriptor.java
+++ b/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/jfr/JFRTransformDescriptor.java
@@ -36,10 +36,11 @@
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
 import org.objectweb.asm.Type;
+import org.openjdk.jmc.agent.Field;
 import org.openjdk.jmc.agent.Method;
 import org.openjdk.jmc.agent.Parameter;
 import org.openjdk.jmc.agent.ReturnValue;
 import org.openjdk.jmc.agent.TransformDescriptor;
 import org.openjdk.jmc.agent.util.TypeUtils;
@@ -60,13 +61,14 @@
 	private final boolean useRethrow;
 	private final boolean allowToString;
 	private final boolean allowConverter;
 	private final List<Parameter> parameters;
 	private final ReturnValue returnValue;
+	private final List<Field> fields;
 
 	public JFRTransformDescriptor(String id, String className, Method method,
-			Map<String, String> transformationAttributes, List<Parameter> parameters, ReturnValue returnValue) {
+			Map<String, String> transformationAttributes, List<Parameter> parameters, ReturnValue returnValue, List<Field> fields) {
 		super(id, className, method, transformationAttributes);
 		classPrefix = initializeClassPrefix();
 		eventName = initializeEventName();
 		eventClassName = initializeEventClassName();
 		eventPath = initializeEventPath();
@@ -74,10 +76,11 @@
 		recordStackTrace = getBoolean(ATTRIBUTE_STACK_TRACE, true);
 		useRethrow = getBoolean(ATTRIBUTE_RETHROW, false);
 		allowToString = getBoolean(ATTRIBUTE_ALLOW_TO_STRING, false);
 		allowConverter = getBoolean(ATTRIBUTE_ALLOW_CONVERTER, false);
 		this.parameters = parameters;
+		this.fields = fields;
 		this.returnValue = returnValue;
 	}
 
 	public String getEventClassName() {
 		return eventClassName;
@@ -176,10 +179,14 @@
 
 	public List<Parameter> getParameters() {
 		return parameters;
 	}
 
+	public List<Field> getFields() {
+		return fields;
+	}
+
 	public ReturnValue getReturnValue() {
 		return returnValue;
 	}
 
 	public boolean isAllowedFieldType(Type type) {
