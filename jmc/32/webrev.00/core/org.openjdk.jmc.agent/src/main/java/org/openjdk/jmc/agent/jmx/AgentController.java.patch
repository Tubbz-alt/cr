diff a/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/jmx/AgentController.java b/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/jmx/AgentController.java
--- a/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/jmx/AgentController.java
+++ b/core/org.openjdk.jmc.agent/src/main/java/org/openjdk/jmc/agent/jmx/AgentController.java
@@ -51,11 +51,11 @@
 	public AgentController(Instrumentation instrumentation, TransformRegistry registry) {
 		this.instrumentation = instrumentation;
 		this.registry = registry;
 	}
 
-	public Class<?>[] setTransforms(String xmlDescription) throws Exception{
+	public void defineEventProbes(String xmlDescription) throws Exception{
 		HashSet<Class<?>> classesToRetransform = new HashSet<Class<?>>();
 		boolean revertAll = xmlDescription == null ? true : xmlDescription.isEmpty();
 		if (revertAll) {
 			List<String> classNames = registry.clearAllTransformData();
 			for (String className : classNames ) {
@@ -69,11 +69,11 @@
 		} else {
 			List<TransformDescriptor> descriptors = registry.modify(xmlDescription);
 			boolean noDescriptors = descriptors == null ? true : descriptors.isEmpty();
 			if (noDescriptors) {
 				logger.log(Level.SEVERE, "Failed to identify transformations: " + xmlDescription);
-				return null;
+				return;
 			}
 			for (TransformDescriptor descriptor : descriptors) {
 				try {
 					Class<?> classToRetransform = Class.forName(descriptor.getClassName().replace('/', '.'));
 					classesToRetransform.add(classToRetransform);
@@ -86,9 +86,7 @@
 		Class<?>[] classesToRetransformArray = classesToRetransform.toArray(new Class<?>[0]);
 
 		registry.setRevertInstrumentation(true);
 		instrumentation.retransformClasses(classesToRetransformArray);
 		registry.setRevertInstrumentation(false);
-
-		return classesToRetransformArray;
 	}
 }
