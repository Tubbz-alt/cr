diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
@@ -61,18 +61,10 @@
     float green;
     float blue;
     bool is_set;
 };
 
-struct CanvasBuffer {
-    CanvasBuffer() : data(NULL), width(0), height(0), pending(false) {}
-    void* data;
-    int width;
-    int height;
-    bool pending; // if a draw from gtk_queue
-    BgColor bg_color; // background color
-};
 
 struct WindowGeometry {
     WindowGeometry(): current_x(0),
                       current_y(0),
                       current_w(0),
@@ -226,11 +218,11 @@
     jobject jview;
     GtkWidget* gtk_widget;
     GdkWindow* gdk_window;
     GtkWindowGroup* win_group; // this is used for window grabs
     GdkWMFunction gdk_windowManagerFunctions;
-    CanvasBuffer buffer; // the content to draw
+    BgColor bg_color;
 
     bool is_iconified;
     bool is_maximized;
     bool is_mouse_entered;
 
@@ -272,10 +264,11 @@
     void process_mouse_scroll(GdkEventScroll*);
     void process_mouse_cross(GdkEventCrossing*);
     void process_key(GdkEventKey*);
     void process_state(GdkEventWindowState*);
 
+    void notify_repaint();
     void notify_state(jint);
 
     int getEmbeddedX() { return 0; }
     int getEmbeddedY() { return 0; }
 
@@ -287,11 +280,11 @@
     ~WindowContextBase();
 protected:
     virtual void applyShapeMask(void*, uint width, uint height) = 0;
 private:
     bool im_filter_keypress(GdkEventKey*);
-    bool paint_buffer(cairo_t*);
+    void paint_buffer(cairo_t*);
 };
 
 
 class WindowContextTop: public WindowContextBase {
     jlong screen;
