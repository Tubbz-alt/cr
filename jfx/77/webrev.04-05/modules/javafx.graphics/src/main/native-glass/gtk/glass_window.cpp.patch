diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
@@ -861,29 +861,37 @@
 
     gtk_window_set_geometry_hints(GTK_WINDOW(gtk_widget), gtk_widget, &gdk_geometry,
         (GdkWindowHints) (GDK_HINT_MIN_SIZE | GDK_HINT_MAX_SIZE | GDK_HINT_WIN_GRAVITY));
 }
 
-void WindowContextTop::size_position_notify() {
+void WindowContextTop::size_position_notify(bool size_changed, bool pos_changed) {
     if (jwindow) {
-        mainEnv->CallVoidMethod(jwindow, jWindowNotifyResize,
-                (is_maximized)
-                    ? com_sun_glass_events_WindowEvent_MAXIMIZE
-                    : com_sun_glass_events_WindowEvent_RESIZE,
-                geometry.current_w, geometry.current_h);
-        CHECK_JNI_EXCEPTION(mainEnv)
+            if (size_changed || is_maximized) {
+            mainEnv->CallVoidMethod(jwindow, jWindowNotifyResize,
+                    (is_maximized)
+                        ? com_sun_glass_events_WindowEvent_MAXIMIZE
+                        : com_sun_glass_events_WindowEvent_RESIZE,
+                    geometry.current_w, geometry.current_h);
+            CHECK_JNI_EXCEPTION(mainEnv)
+        }
 
-        mainEnv->CallVoidMethod(jwindow, jWindowNotifyMove, geometry.current_x, geometry.current_y);
-        CHECK_JNI_EXCEPTION(mainEnv)
+        if (pos_changed) {
+            mainEnv->CallVoidMethod(jwindow, jWindowNotifyMove, geometry.current_x, geometry.current_y);
+            CHECK_JNI_EXCEPTION(mainEnv)
+        }
     }
 
     if (jview) {
-        mainEnv->CallVoidMethod(jview, jViewNotifyResize, geometry.current_cw, geometry.current_ch);
-        CHECK_JNI_EXCEPTION(mainEnv);
+        if (size_changed) {
+            mainEnv->CallVoidMethod(jview, jViewNotifyResize, geometry.current_cw, geometry.current_ch);
+            CHECK_JNI_EXCEPTION(mainEnv);
+        }
 
-        mainEnv->CallVoidMethod(jview, jViewNotifyView, com_sun_glass_events_ViewEvent_MOVE);
-        CHECK_JNI_EXCEPTION(mainEnv)
+        if (pos_changed) {
+            mainEnv->CallVoidMethod(jview, jViewNotifyView, com_sun_glass_events_ViewEvent_MOVE);
+            CHECK_JNI_EXCEPTION(mainEnv)
+        }
     }
 }
 
 void WindowContextTop::activate_window() {
     Display *display = GDK_DISPLAY_XDISPLAY (gdk_window_get_display (gdk_window));
@@ -1010,24 +1018,22 @@
     gtk_window_get_position(GTK_WINDOW(gtk_widget), &x, &y);
     gtk_window_get_size(GTK_WINDOW(gtk_widget), &gtk_w, &gtk_h);
     w = gtk_w + geometry.adjust_w;
     h = gtk_h + geometry.adjust_h;
 
-    gboolean changed = geometry.current_x != x || geometry.current_y != y
-                        || geometry.current_w != w || geometry.current_h != h
-                        || geometry.current_cw != gtk_w || geometry.current_ch != gtk_h;
+    gboolean pos_changed = geometry.current_x != x || geometry.current_y != y;
+    gboolean size_changed = geometry.current_w != w || geometry.current_h != h
+                            || geometry.current_cw != gtk_w || geometry.current_ch != gtk_h;
 
-    if (changed) {
-        geometry.current_x = x;
-        geometry.current_y = y;
-        geometry.current_w = w;
-        geometry.current_h = h;
-        geometry.current_cw = gtk_w;
-        geometry.current_ch = gtk_h;
+    geometry.current_x = x;
+    geometry.current_y = y;
+    geometry.current_w = w;
+    geometry.current_h = h;
+    geometry.current_cw = gtk_w;
+    geometry.current_ch = gtk_h;
 
-        size_position_notify();
-    }
+    size_position_notify(size_changed, pos_changed);
 }
 
 void WindowContextTop::process_screen_changed() {
     glong to_screen = getScreenPtrForLocation(geometry.current_x, geometry.current_y);
     if (to_screen != -1) {
@@ -1065,13 +1071,15 @@
     // newW / newH always content sizes compatible with GTK+
     // if window has no decoration, adjustments will be ZERO
     int newW = w > 0 ? w - geometry.adjust_w : cw;
     int newH = h > 0 ? h - geometry.adjust_h : ch;
 
-    gboolean changed = FALSE;
+    gboolean size_changed = FALSE;
+    gboolean pos_changed = FALSE;
+
     if (newW > 0 && newH > 0) {
-        changed = TRUE;
+        size_changed = TRUE;
 
         geometry.current_cw = newW;
         geometry.current_ch = newH;
         geometry.current_w = newW + geometry.adjust_w;
         geometry.current_h = newH + geometry.adjust_h;
@@ -1086,20 +1094,18 @@
     if (xSet || ySet) {
         int newX = (xSet) ? x : geometry.current_x;
         int newY = (ySet) ? y : geometry.current_y;
 
         if (newX != geometry.current_x || newY != geometry.current_y) {
-            changed = TRUE;
+            pos_changed = TRUE;
             geometry.current_x = newX;
             geometry.current_y = newY;
             gtk_window_move(GTK_WINDOW(gtk_widget), newX, newY);
         }
     }
 
-    if (changed) {
-        size_position_notify();
-    }
+    size_position_notify(size_changed, pos_changed);
 }
 
 void WindowContextTop::process_map() {
     map_received = true;
 }
