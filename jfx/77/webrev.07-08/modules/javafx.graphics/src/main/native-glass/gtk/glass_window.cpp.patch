diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
@@ -834,11 +834,11 @@
 
     gint rx, ry;
     gdk_window_get_root_origin(gdk_window, &rx, &ry);
 
     if (rx != x || ry != y) {
-        // probably..
+        // the left extends are correct - the right one is guessed to be the same
         geometry.adjust_w = (rx - x) * 2;
         // guess that bottom size is the same as left and right
         geometry.adjust_h = (ry - y) + (rx - x);
 
         // those will be correct
@@ -882,11 +882,11 @@
 
     GdkGeometry gdk_geometry;
     gdk_geometry.win_gravity = GDK_GRAVITY_NORTH_WEST;
 
     if ((!geometry.resizable || !geometry.enabled) && !(is_maximized || is_fullscreen)) {
-        // no resizeable
+        // not resizeable
         int w = (geometry.current_w - geometry.adjust_w) > 0
                     ? geometry.current_w - geometry.adjust_w
                     : geometry.current_cw;
 
         int h = (geometry.current_h - geometry.adjust_h) > 0
@@ -923,11 +923,11 @@
             CHECK_JNI_EXCEPTION(mainEnv)
         }
     }
 
     if (jwindow) {
-            if (size_changed || is_maximized) {
+        if (size_changed || is_maximized) {
             mainEnv->CallVoidMethod(jwindow, jWindowNotifyResize,
                     (is_maximized)
                         ? com_sun_glass_events_WindowEvent_MAXIMIZE
                         : com_sun_glass_events_WindowEvent_RESIZE,
                     geometry.current_w, geometry.current_h);
@@ -1048,14 +1048,11 @@
 
                     save_cached_extents();
 
                     // set bounds again to set to correct window size that must
                     // be the total width and height accounting extents
-                    set_bounds(0, 0,
-                               false, false,
-                               geometry.current_w, geometry.current_h,
-                               -1, -1);
+                    set_bounds(0, 0, false, false, -1, -1, -1, -1);
                 }
             }
         }
     }
 }
