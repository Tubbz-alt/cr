diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
@@ -61,10 +61,21 @@
     float green;
     float blue;
     bool is_set;
 };
 
+struct CachedExtents {
+    int adjust_w;
+    int adjust_h;
+
+    // The position of the view relative to the window
+    int view_x;
+    int view_y;
+};
+
+static CachedExtents normal_extents = {0, 0, 0 ,0};
+static CachedExtents utility_extents = {0, 0, 0 ,0};
 
 struct WindowGeometry {
     WindowGeometry(): current_x(0),
                       current_y(0),
                       current_w(0),
@@ -279,13 +290,13 @@
     WindowFrameType frame_type;
     WindowType window_type;
     struct WindowContext *owner;
     WindowGeometry geometry;
     bool map_received;
+    bool visible_received;
     bool on_top;
     bool is_fullscreen;
-
 public:
     WindowContextTop(jobject, WindowContext*, long, WindowFrameType, WindowType, GdkWMFunction);
     void process_map();
     void process_property_notify(GdkEventProperty*);
     void process_configure();
@@ -323,10 +334,11 @@
     void detach_from_java();
 protected:
     void applyShapeMask(void*, uint width, uint height);
 private:
     void calculate_adjustments();
+    void save_cached_extents();
     void apply_geometry();
     bool get_frame_extents_property(int *, int *, int *, int *);
     void request_frame_extents();
     void activate_window();
     void size_position_notify(bool, bool);
