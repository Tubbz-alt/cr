diff a/modules/javafx.graphics/src/main/native-glass/gtk/GlassWindow.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/GlassWindow.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/GlassWindow.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/GlassWindow.cpp
@@ -103,43 +103,10 @@
 JNIEXPORT jlong JNICALL Java_com_sun_glass_ui_gtk_GtkWindow__1createChildWindow
   (JNIEnv * env, jobject obj , jlong owner)
 {
     (void)env;
 
-//    GdkWindow *parent_window = NULL;
-//    GtkWidget *parent_widget = NULL;
-//    WindowContextPlug *parent_ctx = NULL;
-//    WindowContext *ctx = NULL;
-//
-//    parent_window = gdk_x11_window_lookup_for_display(
-//                        gdk_display_get_default(),
-//                        (Window)PTR_TO_JLONG(owner));
-//
-//    if (parent_window != NULL) {
-//        g_print("===> HERE\n");
-//        parent_ctx = (WindowContextPlug *)g_object_get_data(G_OBJECT(parent_window), GDK_WINDOW_DATA_CONTEXT);
-//        // HACK: do not use get_gtk_window()
-//        // the method is intended to return GtkWindow that can be used for FileChooser
-//        // (OK, that's also a hack, but still...)
-//        if (parent_ctx != NULL) {
-//            parent_widget = GTK_WIDGET(parent_ctx->get_gtk_window());
-//        }
-//    }
-//
-//    if (parent_widget == NULL) {
-//        // If 'owner' is a bad handle, then the child window is created unparented
-//        g_print("===> HERE2\n");
-//        ctx = new WindowContextPlug(obj, JLONG_TO_PTR(owner));
-//    } else {
-//        g_print("===> HERE3\n");
-//        ctx = new WindowContextChild(obj,
-//                        JLONG_TO_PTR(owner),
-//                        parent_ctx->gtk_container,
-//                        parent_ctx);
-//    }
-//
-//    return PTR_TO_JLONG(ctx);
     return 0;
 }
 
 /*
  * Class:     com_sun_glass_ui_gtk_GtkWindow
