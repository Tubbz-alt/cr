diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkWindow.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkWindow.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkWindow.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkWindow.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2010, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2010, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
diff a/modules/javafx.graphics/src/main/native-glass/gtk/GlassApplication.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/GlassApplication.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/GlassApplication.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/GlassApplication.cpp
@@ -433,19 +433,10 @@
         return;
     }
 
     glass_evloop_call_hooks(event);
 
-//    if (ctx != NULL && dynamic_cast<WindowContextPlug*>(ctx) && ctx->get_gtk_window()) {
-//        WindowContextPlug* ctx_plug = dynamic_cast<WindowContextPlug*>(ctx);
-//        if (!ctx_plug->embedded_children.empty()) {
-//            // forward to child
-//            ctx = (WindowContext*) ctx_plug->embedded_children.back();
-//            window = ctx->get_gdk_window();
-//        }
-//    }
-
     if (ctx != NULL) {
         EventsCounterHelper helper(ctx);
         gtk_main_do_event(event);
 
         if (event->type == GDK_DRAG_LEAVE) {
diff a/modules/javafx.graphics/src/main/native-glass/gtk/GlassCursor.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/GlassCursor.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/GlassCursor.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/GlassCursor.cpp
@@ -30,11 +30,11 @@
 
 #include "com_sun_glass_ui_Cursor.h"
 #include "glass_general.h"
 
 #ifndef GLASS_GTK3
-GdkCursor* find_best_cursor(const gchar* options, GdkCursorType type) {
+static GdkCursor* find_best_cursor(const gchar* options, GdkCursorType type) {
     gchar **opts = g_strsplit(options, ",", -1);
     gint size = g_strv_length(opts);
 
     GdkCursor *cursor = NULL;
 
diff a/modules/javafx.graphics/src/main/native-glass/gtk/GlassWindow.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/GlassWindow.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/GlassWindow.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/GlassWindow.cpp
@@ -103,43 +103,10 @@
 JNIEXPORT jlong JNICALL Java_com_sun_glass_ui_gtk_GtkWindow__1createChildWindow
   (JNIEnv * env, jobject obj , jlong owner)
 {
     (void)env;
 
-//    GdkWindow *parent_window = NULL;
-//    GtkWidget *parent_widget = NULL;
-//    WindowContextPlug *parent_ctx = NULL;
-//    WindowContext *ctx = NULL;
-//
-//    parent_window = gdk_x11_window_lookup_for_display(
-//                        gdk_display_get_default(),
-//                        (Window)PTR_TO_JLONG(owner));
-//
-//    if (parent_window != NULL) {
-//        g_print("===> HERE\n");
-//        parent_ctx = (WindowContextPlug *)g_object_get_data(G_OBJECT(parent_window), GDK_WINDOW_DATA_CONTEXT);
-//        // HACK: do not use get_gtk_window()
-//        // the method is intended to return GtkWindow that can be used for FileChooser
-//        // (OK, that's also a hack, but still...)
-//        if (parent_ctx != NULL) {
-//            parent_widget = GTK_WIDGET(parent_ctx->get_gtk_window());
-//        }
-//    }
-//
-//    if (parent_widget == NULL) {
-//        // If 'owner' is a bad handle, then the child window is created unparented
-//        g_print("===> HERE2\n");
-//        ctx = new WindowContextPlug(obj, JLONG_TO_PTR(owner));
-//    } else {
-//        g_print("===> HERE3\n");
-//        ctx = new WindowContextChild(obj,
-//                        JLONG_TO_PTR(owner),
-//                        parent_ctx->gtk_container,
-//                        parent_ctx);
-//    }
-//
-//    return PTR_TO_JLONG(ctx);
     return 0;
 }
 
 /*
  * Class:     com_sun_glass_ui_gtk_GtkWindow
diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_general.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/glass_general.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_general.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_general.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
