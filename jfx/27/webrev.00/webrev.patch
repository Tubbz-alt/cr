diff a/modules/javafx.web/src/main/java/javafx/scene/web/HTMLEditorSkin.java b/modules/javafx.web/src/main/java/javafx/scene/web/HTMLEditorSkin.java
--- a/modules/javafx.web/src/main/java/javafx/scene/web/HTMLEditorSkin.java
+++ b/modules/javafx.web/src/main/java/javafx/scene/web/HTMLEditorSkin.java
@@ -687,11 +687,11 @@
                 fontFamilyComboBox.setItems(fonts);
             }
         });
 
         fontFamilyComboBox.valueProperty().addListener((observable, oldValue, newValue) -> {
-            executeCommand(FONT_FAMILY.getCommand(), ("".equals(newValue)) ? "''" : newValue);
+            executeCommand(FONT_FAMILY.getCommand(), "'" + newValue + "'");
         });
 
         fontSizeComboBox = new ComboBox<String>();
         fontSizeComboBox.getStyleClass().add("font-menu-button");
         fontSizeComboBox.setFocusTraversable(false);
@@ -1137,11 +1137,11 @@
         if (webPage.getClientCommittedTextLength() == 0) {
             String format = formatStyleMap.get(formatComboBox.getValue());
             String font   = fontFamilyComboBox.getValue().toString();
 
             executeCommand(FORMAT.getCommand(), format);
-            executeCommand(FONT_FAMILY.getCommand(), font);
+            executeCommand(FONT_FAMILY.getCommand(), "'" + font + "'");
         }
     }
 
     void print(PrinterJob job) {
         webView.getEngine().print(job);
diff a/tests/system/src/test/java/test/javafx/scene/web/HTMLEditorTest.java b/tests/system/src/test/java/test/javafx/scene/web/HTMLEditorTest.java
--- a/tests/system/src/test/java/test/javafx/scene/web/HTMLEditorTest.java
+++ b/tests/system/src/test/java/test/javafx/scene/web/HTMLEditorTest.java
@@ -29,13 +29,16 @@
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 import javafx.application.Application;
 import javafx.application.Platform;
 import javafx.event.Event;
+import javafx.scene.control.ComboBox;
 import javafx.scene.input.KeyCode;
 import javafx.scene.input.KeyEvent;
+import javafx.scene.Node;
 import javafx.scene.Scene;
+import javafx.scene.text.Font;
 import javafx.scene.web.HTMLEditor;
 import javafx.scene.web.WebView;
 import javafx.stage.Stage;
 import org.junit.AfterClass;
 import org.junit.Before;
@@ -82,10 +85,16 @@
     public static void setupOnce() {
         // Start the Test Application
         new Thread(() -> Application.launch(HTMLEditorTestApp.class,
             (String[]) null)).start();
 
+        // Used by selectFontFamilysWithSpace() for JDK-8230492
+        Font.loadFont(
+            HTMLEditorTest.class.getResource("WebKit_Layout_Tests_2.ttf").toExternalForm(),
+            10
+        );
+
         assertTrue("Timeout waiting for FX runtime to start", Util.await(launchLatch));
     }
 
     @AfterClass
     public static void tearDownOnce() {
@@ -292,6 +301,57 @@
 
         assertTrue("Timeout when waiting for focus change ", Util.await(editorStateLatch));
         assertNotNull("result must have a valid reference ", result.get());
         assertEquals("document.body.style.fontWeight must be bold ", "bold", result.get());
     }
+
+    /**
+     * @test
+     * @bug 8230492
+     * Summary Check font-family change on font name with numbers
+     */
+    @Test
+    public void selectFontFamilyWithSpace() {
+        final CountDownLatch editorStateLatch = new CountDownLatch(1);
+        final AtomicReference<String> result = new AtomicReference<>();
+
+        Util.runAndWait(() -> {
+            webView.getEngine().getLoadWorker().stateProperty().
+                addListener((observable, oldValue, newValue) -> {
+                if (newValue == SUCCEEDED) {
+                    htmlEditor.requestFocus();
+                }
+            });
+
+            htmlEditor.setHtmlText("<body>Sample Text</body>");
+
+            webView.focusedProperty().
+                addListener((observable, oldValue, newValue) -> {
+                if (newValue) {
+                    ComboBox<String> fontFamilyComboBox = null;
+                    int i = 0;
+                    for(Node comboBox : htmlEditor.lookupAll(".font-menu-button")) {
+                        // 0 - Format, 1 - Font Family, 2 - Font Size
+                        if (i == 1) {
+                            assertTrue("fontFamilyComboBox must be ComboBox",
+                                comboBox instanceof ComboBox);
+                            fontFamilyComboBox = (ComboBox<String>) comboBox;
+                            assertNotNull("fontFamilyComboBox must not be null",
+                                fontFamilyComboBox);
+                        }
+                        i++;
+                    }
+                    webView.getEngine().
+                        executeScript("document.execCommand('selectAll', false, 'true');");
+                    fontFamilyComboBox.getSelectionModel().select("WebKit Layout Tests 2");
+                    result.set(htmlEditor.getHtmlText());
+                    editorStateLatch.countDown();
+                }
+            });
+        });
+
+        assertTrue("Timeout when waiting for focus change ", Util.await(editorStateLatch));
+        assertNotNull("result must have a valid reference ", result.get());
+        assertTrue("font-family must be 'WebKit Layout Test 2' ", result.get().
+            contains("font-family: &quot;WebKit Layout Tests 2&quot;"));
+    }
 }
diff a/modules/javafx.web/src/main/native/Tools/DumpRenderTree/fonts/WebKit Layout Tests 2.ttf b/tests/system/src/test/resources/test/javafx/scene/web/WebKit_Layout_Tests_2.ttf
--- a/modules/javafx.web/src/main/native/Tools/DumpRenderTree/fonts/WebKit Layout Tests 2.ttf
+++ b/tests/system/src/test/resources/test/javafx/scene/web/WebKit_Layout_Tests_2.ttf
