diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltInternals.h b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltInternals.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltInternals.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltInternals.h
@@ -103,18 +103,10 @@
  * Internal define to enable the pointer-comparison of
  * namespaces of XSLT elements.
  */
 /* #define XSLT_REFACTORED_XSLT_NSCOMP */
 
-/**
- * XSLT_REFACTORED_XPATHCOMP:
- *
- * Internal define to enable the optimization of the
- * compilation of XPath expressions.
- */
-#define XSLT_REFACTORED_XPATHCOMP
-
 #ifdef XSLT_REFACTORED_XSLT_NSCOMP
 
 extern const xmlChar *xsltConstNamespaceNameXSLT;
 
 /**
@@ -476,11 +468,11 @@
  * TODO: This is somehow not nice, since it has a "free" field, which
  *   derived stylesheet-structs do not have.
  */
 struct _xsltElemPreComp {
     xsltElemPreCompPtr next;        /* next item in the global chained
-                       list hold by xsltStylesheet. */
+                       list held by xsltStylesheet. */
     xsltStyleType type;     /* type of the element */
     xsltTransformFunction func; /* handling function */
     xmlNodePtr inst;            /* the node in the stylesheet's tree
                        corresponding to this item */
 
@@ -588,11 +580,11 @@
  * REVISIT TODO: Keep this structure equal to the fields
  *   defined by XSLT_ITEM_COMMON_FIELDS
  */
 struct _xsltStylePreComp {
     xsltElemPreCompPtr next;    /* next item in the global chained
-                   list hold by xsltStylesheet */
+                   list held by xsltStylesheet */
     xsltStyleType type;         /* type of the item */
     xsltTransformFunction func; /* handling function */
     xmlNodePtr inst;        /* the node in the stylesheet's tree
                    corresponding to this item. */
     /* Currently no navigational fields. */
@@ -1344,13 +1336,10 @@
     * the spec can be turned off. This has effect only on special
     * mechanisms like whitespace-stripping in the stylesheet.
     */
     int strict;
     xsltPrincipalStylesheetDataPtr psData;
-#ifdef XSLT_REFACTORED_XPATHCOMP
-    xmlXPathContextPtr xpathCtxt;
-#endif
     xsltStyleItemUknownPtr unknownItem;
     int hasNsAliases; /* Indicator if there was an xsl:namespace-alias. */
     xsltNsAliasPtr nsAliases;
     xsltVarInfoPtr ivars; /* Storage of local in-scope variables/params. */
     xsltVarInfoPtr ivar; /* topmost local variable/param. */
@@ -1640,10 +1629,12 @@
      * Forwards-compatible processing
      */
     int forwards_compatible;
 
     xmlHashTablePtr namedTemplates; /* hash table of named templates */
+
+    xmlXPathContextPtr xpathCtxt;
 };
 
 typedef struct _xsltTransformCache xsltTransformCache;
 typedef xsltTransformCache *xsltTransformCachePtr;
 struct _xsltTransformCache {
@@ -1787,10 +1778,12 @@
     xmlDocPtr localRVTBase; /* Obsolete */
     int keyInitLevel;   /* Needed to catch recursive keys issues */
     int depth;          /* Needed to catch recursions */
     int maxTemplateDepth;
     int maxTemplateVars;
+    unsigned long opLimit;
+    unsigned long opCount;
 };
 
 /**
  * CHECK_STOPPED:
  *
@@ -1869,10 +1862,13 @@
 XSLTPUBFUN xsltStylesheetPtr XSLTCALL
             xsltParseStylesheetDoc  (xmlDocPtr doc);
 XSLTPUBFUN xsltStylesheetPtr XSLTCALL
             xsltParseStylesheetImportedDoc(xmlDocPtr doc,
                         xsltStylesheetPtr style);
+XSLTPUBFUN int XSLTCALL
+            xsltParseStylesheetUser(xsltStylesheetPtr style,
+                        xmlDocPtr doc);
 XSLTPUBFUN xsltStylesheetPtr XSLTCALL
             xsltLoadStylesheetPI    (xmlDocPtr doc);
 XSLTPUBFUN void XSLTCALL
             xsltNumberFormat    (xsltTransformContextPtr ctxt,
                          xsltNumberDataPtr data,
