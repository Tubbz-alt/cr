diff a/modules/javafx.web/src/main/legal/libxslt.md b/modules/javafx.web/src/main/legal/libxslt.md
--- a/modules/javafx.web/src/main/legal/libxslt.md
+++ b/modules/javafx.web/src/main/legal/libxslt.md
@@ -1,6 +1,6 @@
-## xmlsoft.org: libxslt v1.1.33
+## xmlsoft.org: libxslt v1.1.34
 
 ### libxslt License
 ```
 
 Copyright (C) 1998-2012 Daniel Veillard.  All Rights Reserved.
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/config.h b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/config.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/config.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/config.h
@@ -1,11 +1,8 @@
 /* config.h.  Generated from config.h.in by configure.  */
 /* config.h.in.  Generated from configure.ac by autoheader.  */
 
-/* Define to 1 if you have the <ansidecl.h> header file. */
-/* #undef HAVE_ANSIDECL_H */
-
 /* Define to 1 if you have the `clock_gettime' function. */
 
 
 /* Define to 1 if you have the <dlfcn.h> header file. */
 #define HAVE_DLFCN_H 1
@@ -160,20 +157,20 @@
 
 /* Define to the full name of this package. */
 #define PACKAGE_NAME "libxslt"
 
 /* Define to the full name and version of this package. */
-#define PACKAGE_STRING "libxslt 1.1.33"
+#define PACKAGE_STRING "libxslt 1.1.34"
 
 /* Define to the one symbol short name of this package. */
 #define PACKAGE_TARNAME "libxslt"
 
 /* Define to the home page for this package. */
 #define PACKAGE_URL ""
 
 /* Define to the version of this package. */
-#define PACKAGE_VERSION "1.1.33"
+#define PACKAGE_VERSION "1.1.34"
 
 /* Define to 1 if you have the ANSI C header files. */
 #define STDC_HEADERS 1
 
 /* Enable extensions on AIX 3, Interix.  */
@@ -197,28 +194,22 @@
 # define __EXTENSIONS__ 1
 #endif
 
 
 /* Version number of package */
-#define VERSION "1.1.33"
+#define VERSION "1.1.34"
 
 /* Define if debugging support is enabled */
 /* #undef WITH_DEBUGGER */
 
+/* Define if profiling support is enabled */
+/* #undef WITH_PROFILER */
+
 /* Define to 1 if on MINIX. */
 /* #undef _MINIX */
 
 /* Define to 2 if the system does not provide POSIX.1 features except with
    this defined. */
 /* #undef _POSIX_1_SOURCE */
 
 /* Define to 1 if you need to in order for `stat' and other things to work. */
 /* #undef _POSIX_SOURCE */
-
-/* Using the Win32 Socket implementation */
-/* #undef _WINSOCKAPI_ */
-
-/* Win32 Std C name mangling work-around */
-/* #undef snprintf */
-
-/* Win32 Std C name mangling work-around */
-/* #undef vsnprintf */
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/libexslt/exsltconfig.h b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/libexslt/exsltconfig.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/libexslt/exsltconfig.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/libexslt/exsltconfig.h
@@ -16,11 +16,11 @@
 /**
  * LIBEXSLT_DOTTED_VERSION:
  *
  * the version string like "1.2.3"
  */
-#define LIBEXSLT_DOTTED_VERSION "1.1.33"
+#define LIBEXSLT_DOTTED_VERSION "1.1.34"
 
 /**
  * LIBEXSLT_VERSION:
  *
  * the version number: 1.2.3 value is 10203
@@ -54,13 +54,10 @@
  * ATTRIBUTE_UNUSED:
  *
  * This macro is used to flag unused function parameters to GCC
  */
 #ifdef __GNUC__
-#ifdef HAVE_ANSIDECL_H
-#include <ansidecl.h>
-#endif
 #ifndef ATTRIBUTE_UNUSED
 #define ATTRIBUTE_UNUSED __attribute__((unused))
 #endif
 #else
 #define ATTRIBUTE_UNUSED
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/libxslt/xsltwin32config.h b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/libxslt/xsltwin32config.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/libxslt/xsltwin32config.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/linux/libxslt/xsltwin32config.h
@@ -21,25 +21,25 @@
 /**
  * LIBXSLT_DOTTED_VERSION:
  *
  * the version string like "1.2.3"
  */
-#define LIBXSLT_DOTTED_VERSION "1.1.33"
+#define LIBXSLT_DOTTED_VERSION "1.1.34"
 
 /**
  * LIBXSLT_VERSION:
  *
  * the version number: 1.2.3 value is 1002003
  */
-#define LIBXSLT_VERSION 10133
+#define LIBXSLT_VERSION 10134
 
 /**
  * LIBXSLT_VERSION_STRING:
  *
  * the version number string, 1.2.3 value is "1002003"
  */
-#define LIBXSLT_VERSION_STRING "10133"
+#define LIBXSLT_VERSION_STRING "10134"
 
 /**
  * LIBXSLT_VERSION_EXTRA:
  *
  * extra version information, used to show a CVS compilation
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/mac/config.h b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/mac/config.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/mac/config.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/mac/config.h
@@ -1,11 +1,8 @@
 /* config.h.  Generated from config.h.in by configure.  */
 /* config.h.in.  Generated from configure.ac by autoheader.  */
 
-/* Define to 1 if you have the <ansidecl.h> header file. */
-/* #undef HAVE_ANSIDECL_H */
-
 /* Define to 1 if you have the `clock_gettime' function. */
 
 
 /* Define to 1 if you have the <dlfcn.h> header file. */
 #define HAVE_DLFCN_H 1
@@ -159,20 +156,20 @@
 
 /* Define to the full name of this package. */
 #define PACKAGE_NAME "libxslt"
 
 /* Define to the full name and version of this package. */
-#define PACKAGE_STRING "libxslt 1.1.33"
+#define PACKAGE_STRING "libxslt 1.1.34"
 
 /* Define to the one symbol short name of this package. */
 #define PACKAGE_TARNAME "libxslt"
 
 /* Define to the home page for this package. */
 #define PACKAGE_URL ""
 
 /* Define to the version of this package. */
-#define PACKAGE_VERSION "1.1.33"
+#define PACKAGE_VERSION "1.1.34"
 
 /* Define to 1 if you have the ANSI C header files. */
 #define STDC_HEADERS 1
 
 /* Enable extensions on AIX 3, Interix.  */
@@ -196,28 +193,22 @@
 # define __EXTENSIONS__ 1
 #endif
 
 
 /* Version number of package */
-#define VERSION "1.1.33"
+#define VERSION "1.1.34"
 
 /* Define if debugging support is enabled */
 /* #undef WITH_DEBUGGER */
 
+/* Define if profiling support is enabled */
+/* #undef WITH_PROFILER */
+
 /* Define to 1 if on MINIX. */
 /* #undef _MINIX */
 
 /* Define to 2 if the system does not provide POSIX.1 features except with
    this defined. */
 /* #undef _POSIX_1_SOURCE */
 
 /* Define to 1 if you need to in order for `stat' and other things to work. */
 /* #undef _POSIX_SOURCE */
-
-/* Using the Win32 Socket implementation */
-/* #undef _WINSOCKAPI_ */
-
-/* Win32 Std C name mangling work-around */
-/* #undef snprintf */
-
-/* Win32 Std C name mangling work-around */
-/* #undef vsnprintf */
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/Makefile.am b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/Makefile.am
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/Makefile.am
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/Makefile.am
@@ -36,10 +36,11 @@
 ## Use sed and then mv to avoid problems if the user interrupts.
 	sed -e 's?\@XSLT_LIBDIR\@?$(XSLT_LIBDIR)?g' \
 	    -e 's?\@XSLT_INCLUDEDIR\@?$(XSLT_INCLUDEDIR)?g' \
 	    -e 's?\@VERSION\@?$(VERSION)?g' \
 	    -e 's?\@XSLT_LIBS\@?$(XSLT_LIBS) $(EXTRA_LIBS)?g' \
+	    -e 's?\@XSLT_PRIVATE_LIBS\@?$(XSLT_PRIVATE_LIBS)?g' \
 	       < $(srcdir)/xsltConf.sh.in > xsltConf.tmp \
 	&& mv xsltConf.tmp xsltConf.sh
 
 CLEANFILES = xsltConf.sh
 
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/config.h.in b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/config.h.in
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/config.h.in
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/config.h.in
@@ -1,10 +1,7 @@
 /* config.h.in.  Generated from configure.ac by autoheader.  */
 
-/* Define to 1 if you have the <ansidecl.h> header file. */
-#undef HAVE_ANSIDECL_H
-
 /* Define to 1 if you have the `clock_gettime' function. */
 #undef HAVE_CLOCK_GETTIME
 
 /* Define to 1 if you have the <dlfcn.h> header file. */
 #undef HAVE_DLFCN_H
@@ -201,23 +198,17 @@
 #undef VERSION
 
 /* Define if debugging support is enabled */
 #undef WITH_DEBUGGER
 
+/* Define if profiling support is enabled */
+#undef WITH_PROFILER
+
 /* Define to 1 if on MINIX. */
 #undef _MINIX
 
 /* Define to 2 if the system does not provide POSIX.1 features except with
    this defined. */
 #undef _POSIX_1_SOURCE
 
 /* Define to 1 if you need to in order for `stat' and other things to work. */
 #undef _POSIX_SOURCE
-
-/* Using the Win32 Socket implementation */
-#undef _WINSOCKAPI_
-
-/* Win32 Std C name mangling work-around */
-#undef snprintf
-
-/* Win32 Std C name mangling work-around */
-#undef vsnprintf
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/configure.ac b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/configure.ac
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/configure.ac
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/configure.ac
@@ -1,11 +1,11 @@
 dnl Process this file with autoconf to produce a configuration script.
 AC_PREREQ(2.63)
 
 m4_define([MAJOR_VERSION], [1])
 m4_define([MINOR_VERSION], [1])
-m4_define([MICRO_VERSION], [33])
+m4_define([MICRO_VERSION], [34])
 
 AC_INIT([libxslt], [MAJOR_VERSION.MINOR_VERSION.MICRO_VERSION])
 AC_CONFIG_SRCDIR([libxslt/xslt.c])
 AC_CONFIG_HEADERS(config.h)
 AC_CANONICAL_HOST
@@ -166,11 +166,11 @@
 
 dnl
 dnl Math detection
 dnl
 
-AC_CHECK_HEADERS(ieeefp.h nan.h math.h fp_class.h float.h ansidecl.h)
+AC_CHECK_HEADERS(ieeefp.h nan.h math.h fp_class.h float.h)
 AC_CHECK_HEADERS(sys/timeb.h time.h sys/stat.h sys/select.h stdarg.h)
 AC_CHECK_HEADERS(errno.h)
 AC_CHECK_FUNCS(stat _stat)
 AC_CHECK_FUNC(pow, , AC_CHECK_LIB(m, pow,
   [M_LIBS="-lm"; AC_DEFINE([HAVE_POW],[], [Define if pow is there])]))
@@ -400,10 +400,24 @@
     WITH_DEBUGGER=1
     AC_DEFINE([WITH_DEBUGGER],[], [Define if debugging support is enabled])
 fi
 AC_SUBST(WITH_DEBUGGER)
 
+dnl
+dnl Is profiler support requested
+dnl
+AC_ARG_WITH(profiler, [  --with-profiler        Add the profiling support (on)])
+if test "$with_profiler" = "no" ; then
+    echo Disabling profiler
+    WITH_PROFILER=0
+else
+    echo Enabling profiler
+    WITH_PROFILER=1
+    AC_DEFINE([WITH_PROFILER],[], [Define if profiling support is enabled])
+fi
+AC_SUBST(WITH_PROFILER)
+
 dnl
 dnl The following new parameters were added to offer
 dnl the ability to specify the location of the libxml
 dnl library during linking and compilation.
 dnl
@@ -458,68 +472,97 @@
           *-dec-osf* )
                CFLAGS="${CFLAGS} -ieee"
                ;;
     esac
 else
-    CFLAGS="${CFLAGS} -Wall -Wformat=2 -Wmissing-format-attribute"
+    CFLAGS="${CFLAGS} -Wall -Wextra -Wformat=2 -Wmissing-format-attribute"
     case "${host}" in
           alpha*-*-linux* )
 	       CFLAGS="${CFLAGS} -mieee"
 	       ;;
 	  alpha*-*-osf* )
 	       CFLAGS="${CFLAGS} -mieee"
 	       ;;
     esac
 fi
 
+dnl
+dnl Check which type of library to build. Default to building shared and static.
+dnl
+
+build_shared_libs="yes"
+build_static_libs="yes"
+
+if test "$enable_shared" = "no"; then
+    build_shared_libs="no"
+fi
+
+if test "$enable_static" = "no"; then
+    build_static_libs="no"
+fi
+
+if test "$build_shared_libs" = "no" -a "$build_static_libs" = "no"; then
+    build_static_libs="yes"
+fi
+
 dnl
 dnl Override other variables if LIBXML_SRC is set
 dnl
 
-if test "x$LIBXML_SRC" != "x"
-then
-	CWD=`pwd`
-	if cd $LIBXML_SRC
-	then
-		LIBXML_SRC=`pwd`
-		XML_CONFIG="${LIBXML_SRC}/xml2-config"
-		LIBXML_CFLAGS="-I${LIBXML_SRC}/include"
-		LIBXML_LIBS="-L${LIBXML_SRC} `$XML_CONFIG --libs`"
-                WITH_MODULES="`$XML_CONFIG --modules`"
-		cd $CWD
-	else
-		AC_MSG_ERROR([libxml source dir not found (${LIBXML_SRC}), typo?])
-	fi
+if test "x$LIBXML_SRC" != "x"; then
+    CWD=`pwd`
+    if cd $LIBXML_SRC; then
+        LIBXML_SRC=`pwd`
+        XML_CONFIG="${LIBXML_SRC}/xml2-config"
+        LIBXML_CFLAGS="-I${LIBXML_SRC}/include"
+        if test "$build_static_libs" = "no"; then
+            LIBXML_LIBS="-L${LIBXML_SRC} `$XML_CONFIG --libs --dynamic`"
+        else
+            LIBXML_LIBS="-L${LIBXML_SRC} `$XML_CONFIG --libs`"
+        fi
+        WITH_MODULES="`$XML_CONFIG --modules`"
+        cd $CWD
+    else
+        AC_MSG_ERROR([libxml source dir not found (${LIBXML_SRC}), typo?])
+    fi
 fi
 
 dnl
 dnl Try pkg-config first if nothing is set
 dnl
 
-if test "x$LIBXML_CONFIG_PREFIX" = "x" -a "x$LIBXML_LIBS" = "x"
-then
-	PKG_CHECK_MODULES([LIBXML], [libxml-2.0 >= $LIBXML_REQUIRED_VERSION], [
-		WITH_MODULES="`$PKG_CONFIG --variable=modules libxml-2.0`"
-	], [ ])
+if test "x$LIBXML_CONFIG_PREFIX" = "x" -a "x$LIBXML_LIBS" = "x"; then
+    if test "$build_static_libs" = "no"; then
+        PKG_CHECK_MODULES([LIBXML], [libxml-2.0 >= $LIBXML_REQUIRED_VERSION], [
+            WITH_MODULES="`$PKG_CONFIG --variable=modules libxml-2.0`"
+        ], [ ])
+    else
+        PKG_CHECK_MODULES_STATIC([LIBXML], [libxml-2.0 >= $LIBXML_REQUIRED_VERSION],
+        [ ], [ ])
+    fi
 fi
 
 dnl
 dnl make sure xml2-config is executable,
 dnl test version and init our variables
 dnl
 
 if test "x$LIBXML_LIBS" = "x" && ${XML_CONFIG} --libs print > /dev/null 2>&1
 then
-        AC_MSG_CHECKING(for libxml libraries >= $LIBXML_REQUIRED_VERSION)
-	XMLVERS=`$XML_CONFIG --version`
-	if test VERSION_TO_NUMBER(echo $XMLVERS) -ge VERSION_TO_NUMBER(echo $LIBXML_REQUIRED_VERSION)
-	then
-		AC_MSG_RESULT($XMLVERS found)
-	else
-		AC_MSG_ERROR(Version $XMLVERS found. You need at least libxml2 $LIBXML_REQUIRED_VERSION for this version of libxslt)
-	fi
-	LIBXML_LIBS="`$XML_CONFIG --libs`"
+    AC_MSG_CHECKING(for libxml libraries >= $LIBXML_REQUIRED_VERSION)
+    XMLVERS=`$XML_CONFIG --version`
+    if test VERSION_TO_NUMBER(echo $XMLVERS) -ge VERSION_TO_NUMBER(echo $LIBXML_REQUIRED_VERSION); then
+        AC_MSG_RESULT($XMLVERS found)
+    else
+        AC_MSG_ERROR(Version $XMLVERS found. You need at least libxml2 $LIBXML_REQUIRED_VERSION for this version of libxslt)
+    fi
+
+    if test "$build_static_libs" = "no"; then
+        LIBXML_LIBS="`$XML_CONFIG --libs --dynamic`"
+    else
+        LIBXML_LIBS="`$XML_CONFIG --libs`"
+    fi
 	LIBXML_CFLAGS="`$XML_CONFIG --cflags`"
         WITH_MODULES="`$XML_CONFIG --modules`"
 fi
 
 if test "x$LIBXML_LIBS" = "x"
@@ -538,11 +581,11 @@
 then
     with_plugins=yes
 fi
 
 AC_MSG_CHECKING([whether shared libraries will be built (required for plugins)])
-if test "$enable_shared" = "no" -a "$with_plugins" = "yes"; then
+if test "$build_shared_libs" = "no" -a "$with_plugins" = "yes"; then
 	 AC_MSG_RESULT(no)
 	 AC_MSG_WARN([Disabling plugin support.])
 	 AC_MSG_WARN([Plugins require that shared libraries be built.])
 	 with_plugins=no
 else
@@ -577,26 +620,15 @@
     echo "$libdir"
 )
 LIBXSLT_DEFAULT_PLUGINS_PATH="$expanded_libdir/libxslt-plugins"
 AC_SUBST(LIBXSLT_DEFAULT_PLUGINS_PATH)
 
-WIN32_EXTRA_LIBADD=
-WIN32_EXTRA_LDFLAGS=
 case "$host" in
- *-*-cygwin*)
- WIN32_EXTRA_LDFLAGS="-no-undefined"
- ;;
- *-*-mingw*)
- WIN32_EXTRA_LIBADD="-lwsock32"
- WIN32_EXTRA_LDFLAGS="-no-undefined"
- AC_DEFINE([_WINSOCKAPI_],1,[Using the Win32 Socket implementation])
- AC_DEFINE([snprintf],[_snprintf],[Win32 Std C name mangling work-around])
- AC_DEFINE([vsnprintf],[_vsnprintf],[Win32 Std C name mangling work-around])
+ *-*-cygwin*|*-*-mingw*)
+ LDFLAGS="$LDFLAGS -no-undefined"
  ;;
 esac
-AC_SUBST(WIN32_EXTRA_LIBADD)
-AC_SUBST(WIN32_EXTRA_LDFLAGS)
 
 
 AC_SUBST(XSLTPROCDV)
 AC_SUBST(PYTHONSODV)
 AC_SUBST(XML_CONFIG)
@@ -607,21 +639,25 @@
 AC_SUBST(PYTHON_INCLUDES)
 AC_SUBST(PYTHON_SITE_PACKAGES)
 
 XSLT_LIBDIR='-L${libdir}'
 XSLT_INCLUDEDIR='-I${includedir}'
-XSLT_LIBS="-lxslt $LIBXML_LIBS $M_LIBS"
+XSLT_LIBS="-lxslt $LIBXML_LIBS"
+XSLT_PRIVATE_LIBS="$M_LIBS"
 AC_SUBST(XSLT_LIBDIR)
 AC_SUBST(XSLT_INCLUDEDIR)
 AC_SUBST(XSLT_LIBS)
+AC_SUBST(XSLT_PRIVATE_LIBS)
 
 EXSLT_LIBDIR='-L${libdir}'
 EXSLT_INCLUDEDIR='-I${includedir}'
-EXSLT_LIBS="-lexslt $XSLT_LIBS $LIBGCRYPT_LIBS"
+EXSLT_LIBS="-lexslt $XSLT_LIBS"
+EXSLT_PRIVATE_LIBS="$XSLT_PRIVATE_LIBS $LIBGCRYPT_LIBS"
 AC_SUBST(EXSLT_LIBDIR)
 AC_SUBST(EXSLT_INCLUDEDIR)
 AC_SUBST(EXSLT_LIBS)
+AC_SUBST(EXSLT_PRIVATE_LIBS)
 
 AC_SUBST(EXTRA_LIBS)
 
 AC_SUBST(M_LIBS)
 
@@ -670,11 +706,14 @@
 tests/exslt/strings/Makefile
 tests/exslt/date/Makefile
 tests/exslt/dynamic/Makefile
 tests/exslt/crypto/Makefile
 tests/plugins/Makefile
+tests/fuzz/Makefile
 doc/Makefile
 xslt-config
 libxslt.spec
 ])
+AC_CONFIG_LINKS([tests/fuzz/xpath.xml:tests/fuzz/xpath.xml])
+AC_CONFIG_LINKS([tests/fuzz/xslt.xml:tests/fuzz/xslt.xml])
 
 AC_OUTPUT
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libexslt.pc.in b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libexslt.pc.in
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libexslt.pc.in
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libexslt.pc.in
@@ -6,7 +6,8 @@
 
 Name: libexslt
 Version: @LIBEXSLT_VERSION@
 Description: EXSLT Extension library
 Requires: libxml-2.0
-Libs: @EXSLT_LIBDIR@ @EXSLT_LIBS@
 Cflags: @EXSLT_INCLUDEDIR@
+Libs: @EXSLT_LIBDIR@ @EXSLT_LIBS@
+Libs.private: @EXSLT_PRIVATE_LIBS@
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.pc.in b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.pc.in
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.pc.in
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.pc.in
@@ -6,7 +6,8 @@
 
 Name: libxslt
 Version: @VERSION@
 Description: XSLT library version 2.
 Requires: libxml-2.0
-Libs: @XSLT_LIBDIR@ @XSLT_LIBS@ @EXTRA_LIBS@
 Cflags: @XSLT_INCLUDEDIR@
+Libs: @XSLT_LIBDIR@ @XSLT_LIBS@ @EXTRA_LIBS@
+Libs.private: @XSLT_PRIVATE_LIBS@
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.spec b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.spec
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.spec
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.spec
@@ -1,8 +1,8 @@
 Summary: Library providing the GNOME XSLT engine
 Name: libxslt
-Version: 1.1.33
+Version: 1.1.34
 Release: 1%{?dist}%{?extra_release}
 License: MIT
 Group: Development/Libraries
 Source: ftp://xmlsoft.org/XSLT/libxslt-%{version}.tar.gz
 BuildRoot: %{_tmppath}/%{name}-%{version}-root
@@ -68,11 +68,11 @@
 
 rm -f $RPM_BUILD_ROOT%{_libdir}/*.la
 rm -rf $RPM_BUILD_ROOT%{_datadir}/doc/%{name}{,-python}-%{version}
 
 %check
-make check
+make tests
 
 %clean
 rm -fr %{buildroot}
 
 %post
@@ -120,14 +120,13 @@
 %defattr(-, root, root)
 
 %doc AUTHORS ChangeLog.gz NEWS README Copyright FEATURES
 %{_libdir}/python*/site-packages/libxslt.py*
 %{_libdir}/python*/site-packages/libxsltmod*
-%doc python/TODO
 %doc python/libxsltclass.txt
 %doc python/tests/*.py
 %doc python/tests/*.xml
 %doc python/tests/*.xsl
 
 %changelog
-* Thu Mar 21 2019 Daniel Veillard <veillard@redhat.com>
-- upstream release 1.1.33 see http://xmlsoft.org/XSLT/news.html
+* Thu Nov 14 2019 Daniel Veillard <veillard@redhat.com>
+- upstream release 1.1.34 see http://xmlsoft.org/XSLT/news.html
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.spec.in b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.spec.in
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.spec.in
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt.spec.in
@@ -68,11 +68,11 @@
 
 rm -f $RPM_BUILD_ROOT%{_libdir}/*.la
 rm -rf $RPM_BUILD_ROOT%{_datadir}/doc/%{name}{,-python}-%{version}
 
 %check
-make check
+make tests
 
 %clean
 rm -fr %{buildroot}
 
 %post
@@ -120,11 +120,10 @@
 %defattr(-, root, root)
 
 %doc AUTHORS ChangeLog.gz NEWS README Copyright FEATURES
 %{_libdir}/python*/site-packages/libxslt.py*
 %{_libdir}/python*/site-packages/libxsltmod*
-%doc python/TODO
 %doc python/libxsltclass.txt
 %doc python/tests/*.py
 %doc python/tests/*.xml
 %doc python/tests/*.xsl
 
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/Makefile.am b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/Makefile.am
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/Makefile.am
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/Makefile.am
@@ -62,11 +62,10 @@
 LIBXSLT_VERSION_SCRIPT =
 endif
 
 libxslt_la_LIBADD = $(LIBXML_LIBS) $(EXTRA_LIBS) $(M_LIBS)
 libxslt_la_LDFLAGS =					\
-		$(WIN32_EXTRA_LDFLAGS)			\
 		$(LIBXSLT_VERSION_SCRIPT)		\
 		-version-info $(LIBXSLT_VERSION_INFO)
 
 man_MANS = libxslt.3
 
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/attrvt.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/attrvt.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/attrvt.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/attrvt.c
@@ -46,11 +46,16 @@
     xmlNsPtr *nsList;
     int nsNr;
     /*
      * the content is an alternate of string and xmlXPathCompExprPtr
      */
-    void *segments[MAX_AVT_SEG];
+#if __STDC_VERSION__ >= 199901L
+    /* Using a C99 flexible array member avoids false positives under UBSan */
+    void *segments[];
+#else
+    void *segments[1];
+#endif
 };
 
 /**
  * xsltNewAttrVT:
  * @style:  a XSLT process context
@@ -60,19 +65,20 @@
  * Returns the structure or NULL in case of error
  */
 static xsltAttrVTPtr
 xsltNewAttrVT(xsltStylesheetPtr style) {
     xsltAttrVTPtr cur;
+    size_t size = sizeof(xsltAttrVT) + MAX_AVT_SEG * sizeof(void*);
 
-    cur = (xsltAttrVTPtr) xmlMalloc(sizeof(xsltAttrVT));
+    cur = (xsltAttrVTPtr) xmlMalloc(size);
     if (cur == NULL) {
     xsltTransformError(NULL, style, NULL,
         "xsltNewAttrVTPtr : malloc failed\n");
     if (style != NULL) style->errors++;
     return(NULL);
     }
-    memset(cur, 0, sizeof(xsltAttrVT));
+    memset(cur, 0, size);
 
     cur->nb_seg = 0;
     cur->max_seg = MAX_AVT_SEG;
     cur->strstart = 0;
     cur->next = style->attVTs;
@@ -144,15 +150,18 @@
  * Returns the avt pointer, which may have been changed by a re-alloc
  */
 static xsltAttrVTPtr
 xsltSetAttrVTsegment(xsltAttrVTPtr avt, void *val) {
     if (avt->nb_seg >= avt->max_seg) {
-    avt = (xsltAttrVTPtr) xmlRealloc(avt, sizeof(xsltAttrVT) +
-            avt->max_seg * sizeof(void *));
-    if (avt == NULL) {
+        size_t size = sizeof(xsltAttrVT) +
+                      (avt->max_seg + MAX_AVT_SEG) * sizeof(void *);
+    xsltAttrVTPtr tmp = (xsltAttrVTPtr) xmlRealloc(avt, size);
+    if (tmp == NULL) {
+            xsltFreeAttrVT(avt);
         return NULL;
     }
+        avt = tmp;
     memset(&avt->segments[avt->nb_seg], 0, MAX_AVT_SEG*sizeof(void *));
     avt->max_seg += MAX_AVT_SEG;
     }
     avt->segments[avt->nb_seg++] = val;
     return avt;
@@ -162,11 +171,11 @@
  * xsltCompileAttr:
  * @style:  a XSLT process context
  * @attr: the attribute coming from the stylesheet.
  *
  * Precompile an attribute in a stylesheet, basically it checks if it is
- * an attrubute value template, and if yes establish some structures needed
+ * an attribute value template, and if yes, establish some structures needed
  * to process it at transformation time.
  */
 void
 xsltCompileAttr(xsltStylesheetPtr style, xmlAttrPtr attr) {
     const xmlChar *str;
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/functions.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/functions.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/functions.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/functions.c
@@ -53,11 +53,11 @@
  */
 #define DOCBOOK_XSL_HACK
 
 /**
  * xsltXPathFunctionLookup:
- * @ctxt:  a void * but the XSLT transformation context actually
+ * @vctxt:  a void * but the XSLT transformation context actually
  * @name:  the function name
  * @ns_uri:  the function namespace URI
  *
  * This is the entry point when a function is needed by the XPath
  * interpretor.
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/keys.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/keys.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/keys.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/keys.c
@@ -239,26 +239,28 @@
  *
  * Returns the byte after the predicate or -1 in case of error
  */
 static int
 skipPredicate(const xmlChar *cur, int end) {
+    int level = 0;
+
     if ((cur == NULL) || (end < 0)) return(-1);
     if (cur[end] != '[') return(end);
     end++;
     while (cur[end] != 0) {
         if ((cur[end] == '\'') || (cur[end] == '"')) {
         end = skipString(cur, end);
         if (end <= 0)
             return(-1);
         continue;
     } else if (cur[end] == '[') {
-        end = skipPredicate(cur, end);
-        if (end <= 0)
-            return(-1);
-        continue;
-    } else if (cur[end] == ']')
-        return(end + 1);
+            level += 1;
+    } else if (cur[end] == ']') {
+            if (level == 0)
+            return(end + 1);
+            level -= 1;
+        }
     end++;
     }
     return(-1);
 }
 
@@ -627,10 +629,11 @@
     xsltKeyTablePtr table;
     xmlNodePtr oldInst, cur;
     xmlNodePtr oldContextNode;
     xsltDocumentPtr oldDocInfo;
     int oldXPPos, oldXPSize;
+    xmlNodePtr oldXPNode;
     xmlDocPtr oldXPDoc;
     int oldXPNsNr;
     xmlNsPtr *oldXPNamespaces;
     xmlXPathContextPtr xpctxt;
 
@@ -665,10 +668,11 @@
     */
     oldInst = ctxt->inst;
     oldDocInfo = ctxt->document;
     oldContextNode = ctxt->node;
 
+    oldXPNode = xpctxt->node;
     oldXPDoc = xpctxt->doc;
     oldXPPos = xpctxt->proximityPosition;
     oldXPSize = xpctxt->contextSize;
     oldXPNsNr = xpctxt->nsNr;
     oldXPNamespaces = xpctxt->namespaces;
@@ -863,10 +867,11 @@
 error:
     ctxt->keyInitLevel--;
     /*
     * Restore context state.
     */
+    xpctxt->node = oldXPNode;
     xpctxt->doc = oldXPDoc;
     xpctxt->nsNr = oldXPNsNr;
     xpctxt->namespaces = oldXPNamespaces;
     xpctxt->proximityPosition = oldXPPos;
     xpctxt->contextSize = oldXPSize;
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/libxslt.syms b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/libxslt.syms
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/libxslt.syms
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/libxslt.syms
@@ -497,5 +497,15 @@
 # xsltInternals
   xsltFlagRVTs;
   xsltDecimalFormatGetByQName;
 } LIBXML2_1.1.27;
 
+LIBXML2_1.1.34 {
+    global:
+
+# xsltInternals
+  xsltParseStylesheetUser;
+
+# pattern
+  xsltCompMatchClearCache;
+} LIBXML2_1.1.30;
+
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/numbers.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/numbers.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/numbers.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/numbers.c
@@ -34,20 +34,20 @@
 # define TRUE (1 == 1)
 #endif
 
 #define SYMBOL_QUOTE        ((xmlChar)'\'')
 
-#define DEFAULT_TOKEN       (xmlChar)'0'
+#define DEFAULT_TOKEN       '0'
 #define DEFAULT_SEPARATOR   "."
 
 #define MAX_TOKENS      1024
 
 typedef struct _xsltFormatToken xsltFormatToken;
 typedef xsltFormatToken *xsltFormatTokenPtr;
 struct _xsltFormatToken {
     xmlChar *separator;
-    xmlChar  token;
+    int      token;
     int      width;
 };
 
 typedef struct _xsltFormat xsltFormat;
 typedef xsltFormat *xsltFormatPtr;
@@ -105,24 +105,26 @@
      (xsltUTF8Charcmp((letter), (self)->decimalPoint) == 0)  || \
      (xsltUTF8Charcmp((letter), (self)->grouping) == 0)     ||  \
      (xsltUTF8Charcmp((letter), (self)->patternSeparator) == 0))
 
 #define IS_DIGIT_ZERO(x) xsltIsDigitZero(x)
-#define IS_DIGIT_ONE(x) xsltIsDigitZero((xmlChar)(x)-1)
+#define IS_DIGIT_ONE(x) xsltIsDigitZero((x)-1)
 
 static int
 xsltIsDigitZero(unsigned int ch)
 {
     /*
      * Reference: ftp://ftp.unicode.org/Public/UNIDATA/UnicodeData.txt
+     *
+     * There a many more digit ranges in newer Unicode versions. These
+     * are only the zeros that match Digit in XML 1.0 (IS_DIGIT macro).
      */
     switch (ch) {
     case 0x0030: case 0x0660: case 0x06F0: case 0x0966:
     case 0x09E6: case 0x0A66: case 0x0AE6: case 0x0B66:
     case 0x0C66: case 0x0CE6: case 0x0D66: case 0x0E50:
-    case 0x0E60: case 0x0F20: case 0x1040: case 0x17E0:
-    case 0x1810: case 0xFF10:
+    case 0x0ED0: case 0x0F20:
     return TRUE;
     default:
     return FALSE;
     }
 }
@@ -380,26 +382,29 @@
         }
         if (IS_DIGIT_ONE(val)) {
         tokens->tokens[tokens->nTokens].token = val - 1;
         ix += len;
         val = xmlStringCurrentChar(NULL, format+ix, &len);
-        }
-    } else if ( (val == (xmlChar)'A') ||
-            (val == (xmlChar)'a') ||
-            (val == (xmlChar)'I') ||
-            (val == (xmlChar)'i') ) {
+        } else {
+                tokens->tokens[tokens->nTokens].token = '0';
+                tokens->tokens[tokens->nTokens].width = 1;
+            }
+    } else if ( (val == 'A') ||
+            (val == 'a') ||
+            (val == 'I') ||
+            (val == 'i') ) {
         tokens->tokens[tokens->nTokens].token = val;
         ix += len;
         val = xmlStringCurrentChar(NULL, format+ix, &len);
     } else {
         /* XSLT section 7.7
          * "Any other format token indicates a numbering sequence
          *  that starts with that token. If an implementation does
          *  not support a numbering sequence that starts with that
          *  token, it must use a format token of 1."
          */
-        tokens->tokens[tokens->nTokens].token = (xmlChar)'0';
+        tokens->tokens[tokens->nTokens].token = '0';
         tokens->tokens[tokens->nTokens].width = 1;
     }
     /*
      * Skip over remaining alphanumeric characters from the Nd
      * (Number, decimal digit), Nl (Number, letter), No (Number,
@@ -644,46 +649,55 @@
                  double *array,
                  int max)
 {
     int amount = 0;
     int cnt;
+    xmlNodePtr oldCtxtNode;
     xmlNodePtr ancestor;
     xmlNodePtr preceding;
     xmlXPathParserContextPtr parser;
 
-    context->xpathCtxt->node = node;
+    oldCtxtNode = context->xpathCtxt->node;
     parser = xmlXPathNewParserContext(NULL, context->xpathCtxt);
     if (parser) {
     /* ancestor-or-self::*[count] */
-    for (ancestor = node;
-         (ancestor != NULL) && (ancestor->type != XML_DOCUMENT_NODE);
-         ancestor = xmlXPathNextAncestor(parser, ancestor)) {
-
+    ancestor = node;
+    while ((ancestor != NULL) && (ancestor->type != XML_DOCUMENT_NODE)) {
         if ((fromPat != NULL) &&
         xsltTestCompMatchList(context, ancestor, fromPat))
         break; /* for */
 
+            /*
+             * The xmlXPathNext* iterators require that the context node is
+             * set to the start node. Calls to xsltTestCompMatch* may also
+             * leave the context node in an undefined state, so make sure
+             * that the context node is reset before each iterator invocation.
+             */
+
         if (xsltTestCompMatchCount(context, ancestor, countPat, node)) {
         /* count(preceding-sibling::*) */
         cnt = 1;
-        for (preceding =
-                        xmlXPathNextPrecedingSibling(parser, ancestor);
-             preceding != NULL;
-             preceding =
-                xmlXPathNextPrecedingSibling(parser, preceding)) {
-
+                context->xpathCtxt->node = ancestor;
+                preceding = xmlXPathNextPrecedingSibling(parser, ancestor);
+                while (preceding != NULL) {
                 if (xsltTestCompMatchCount(context, preceding, countPat,
                                                node))
             cnt++;
+                    context->xpathCtxt->node = ancestor;
+                    preceding =
+                        xmlXPathNextPrecedingSibling(parser, preceding);
         }
         array[amount++] = (double)cnt;
         if (amount >= max)
             break; /* for */
         }
+            context->xpathCtxt->node = node;
+            ancestor = xmlXPathNextAncestor(parser, ancestor);
     }
     xmlXPathFreeParserContext(parser);
     }
+    context->xpathCtxt->node = oldCtxtNode;
     return amount;
 }
 
 static int
 xsltNumberFormatGetValue(xmlXPathContextPtr context,
@@ -813,10 +827,20 @@
                           1,
                           &tokens,
                           output);
         }
     }
+
+        /*
+         * Unlike `match` patterns, `count` and `from` patterns can contain
+         * variable references, so we have to clear the pattern match
+         * cache if the "direct" matching algorithm was used.
+         */
+        if (data->countPat != NULL)
+            xsltCompMatchClearCache(ctxt, data->countPat);
+        if (data->fromPat != NULL)
+            xsltCompMatchClearCache(ctxt, data->fromPat);
     }
     /* Insert number as text node */
     xsltCopyTextString(ctxt, ctxt->insert, xmlBufferContent(output), 0);
 
     xmlBufferFree(output);
@@ -833,11 +857,12 @@
 }
 
 static int
 xsltFormatNumberPreSuffix(xsltDecimalFormatPtr self, xmlChar **format, xsltFormatNumberInfoPtr info)
 {
-    int count=0;    /* will hold total length of prefix/suffix */
+    /* will hold total length of prefix/suffix without quote characters */
+    int count=0;
     int len;
 
     while (1) {
     /*
      * prefix / suffix ends at end of string or at
@@ -931,11 +956,10 @@
 {
     xmlXPathError status = XPATH_EXPRESSION_OK;
     xmlBufferPtr buffer;
     xmlChar *the_format, *prefix = NULL, *suffix = NULL;
     xmlChar *nprefix, *nsuffix = NULL;
-    xmlChar pchar;
     int     prefix_length, suffix_length = 0, nprefix_length, nsuffix_length;
     double  scale;
     int     j, len;
     int     self_grouping_len;
     xsltFormatNumberInfo format_info;
@@ -959,11 +983,11 @@
     case -1:
         if (self->minusSign == NULL)
         *result = xmlStrdup(BAD_CAST "-");
         else
         *result = xmlStrdup(self->minusSign);
-        /* no-break on purpose */
+        /* Intentional fall-through */
     case 1:
         if ((self == NULL) || (self->infinity == NULL))
         *result = xmlStrcat(*result, BAD_CAST "Infinity");
         else
         *result = xmlStrcat(*result, self->infinity);
@@ -1256,33 +1280,33 @@
     /* Ready to output our number.  First see if "default sign" is required */
     if (default_sign != 0)
     xmlBufferAdd(buffer, self->minusSign, xmlUTF8Strsize(self->minusSign, 1));
 
     /* Put the prefix into the buffer */
-    for (j = 0; j < prefix_length; j++) {
-    if ((pchar = *prefix++) == SYMBOL_QUOTE) {
+    for (j = 0; j < prefix_length; ) {
+    if (*prefix == SYMBOL_QUOTE)
+            prefix++;
         len = xmlUTF8Strsize(prefix, 1);
         xmlBufferAdd(buffer, prefix, len);
         prefix += len;
-        j += len - 1;   /* length of symbol less length of quote */
-    } else
-        xmlBufferAdd(buffer, &pchar, 1);
+        j += len;
     }
 
     /* Next do the integer part of the number */
     number = fabs(number) * (double)format_info.multiplier;
     scale = pow(10.0, (double)(format_info.frac_digits + format_info.frac_hash));
     number = floor((scale * number + 0.5)) / scale;
     if ((self->grouping != NULL) &&
         (self->grouping[0] != 0)) {
+        int gchar;
 
     len = xmlStrlen(self->grouping);
-    pchar = xsltGetUTF8Char(self->grouping, &len);
+    gchar = xsltGetUTF8Char(self->grouping, &len);
     xsltNumberFormatDecimal(buffer, floor(number), self->zeroDigit[0],
                 format_info.integer_digits,
                 format_info.group,
-                pchar, len);
+                gchar, len);
     } else
     xsltNumberFormatDecimal(buffer, floor(number), self->zeroDigit[0],
                 format_info.integer_digits,
                 format_info.group,
                 ',', 1);
@@ -1321,18 +1345,17 @@
                 format_info.frac_digits + j,
                 0, 0, 0);
     }
     }
     /* Put the suffix into the buffer */
-    for (j = 0; j < suffix_length; j++) {
-    if ((pchar = *suffix++) == SYMBOL_QUOTE) {
-            len = xmlUTF8Strsize(suffix, 1);
+    for (j = 0; j < suffix_length; ) {
+    if (*suffix == SYMBOL_QUOTE)
+            suffix++;
+        len = xmlUTF8Strsize(suffix, 1);
         xmlBufferAdd(buffer, suffix, len);
         suffix += len;
-        j += len - 1;   /* length of symbol less length of escape */
-    } else
-        xmlBufferAdd(buffer, &pchar, 1);
+        j += len;
     }
 
     *result = xmlStrdup(xmlBufferContent(buffer));
     xmlBufferFree(buffer);
     return status;
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/pattern.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/pattern.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/pattern.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/pattern.c
@@ -111,11 +111,10 @@
     int nbStep;
     int maxStep;
     xmlNsPtr *nsList;       /* the namespaces in scope */
     int nsNr;           /* the number of namespaces in scope */
     xsltStepOpPtr steps;        /* ops for computation */
-    int novar;                  /* doesn't contain variables */
 };
 
 typedef struct _xsltParserContext xsltParserContext;
 typedef xsltParserContext *xsltParserContextPtr;
 struct _xsltParserContext {
@@ -340,24 +339,18 @@
         xsltAllocateExtra(ctxt->style);
     comp->steps[comp->nbStep].lenExtra =
         xsltAllocateExtra(ctxt->style);
     }
     if (op == XSLT_OP_PREDICATE) {
-    xmlXPathContextPtr xctxt;
+        int flags = 0;
 
-    if (ctxt->style != NULL)
-        xctxt = xmlXPathNewContext(ctxt->style->doc);
-    else
-        xctxt = xmlXPathNewContext(NULL);
 #ifdef XML_XPATH_NOVAR
     if (novar != 0)
-        xctxt->flags = XML_XPATH_NOVAR;
+        flags = XML_XPATH_NOVAR;
 #endif
-    if (ctxt->style != NULL)
-        xctxt->dict = ctxt->style->dict;
-    comp->steps[comp->nbStep].comp = xmlXPathCtxtCompile(xctxt, value);
-    xmlXPathFreeContext(xctxt);
+    comp->steps[comp->nbStep].comp = xsltXPathCompileFlags(ctxt->style,
+                value, flags);
     if (comp->steps[comp->nbStep].comp == NULL) {
         xsltTransformError(NULL, ctxt->style, ctxt->elem,
             "Failed to compile predicate\n");
         if (ctxt->style != NULL)
         ctxt->style->errors++;
@@ -593,12 +586,11 @@
         xmlXPathFreeObject(newlist);
         return(-1);
     }
     ix = 0;
 
-    if ((parent == NULL) || (node->doc == NULL) || isRVT ||
-            (comp->novar == 0))
+    if ((parent == NULL) || (node->doc == NULL) || isRVT)
         nocache = 1;
 
     if (nocache == 0) {
         if (list != NULL)
         xmlXPathFreeObject(list);
@@ -1249,10 +1241,38 @@
     comp = comp->next;
     }
     return(0);
 }
 
+/**
+ * xsltCompMatchClearCache:
+ * @ctxt:  a XSLT process context
+ * @comp: the precompiled pattern list
+ *
+ * Clear pattern match cache.
+ */
+void
+xsltCompMatchClearCache(xsltTransformContextPtr ctxt, xsltCompMatchPtr comp) {
+    xsltStepOpPtr sel;
+    xmlXPathObjectPtr list;
+
+    if ((ctxt == NULL) || (comp == NULL))
+        return;
+
+    sel = &comp->steps[0];
+    list = (xmlXPathObjectPtr) XSLT_RUNTIME_EXTRA_LST(ctxt, sel->lenExtra);
+
+    if (list != NULL) {
+        xmlXPathFreeObject(list);
+
+        XSLT_RUNTIME_EXTRA_LST(ctxt, sel->lenExtra) = NULL;
+        XSLT_RUNTIME_EXTRA(ctxt, sel->previousExtra, ptr) = NULL;
+        XSLT_RUNTIME_EXTRA(ctxt, sel->indexExtra, ival) = 0;
+        XSLT_RUNTIME_EXTRA_FREE(ctxt, sel->lenExtra) = NULL;
+    }
+}
+
 /************************************************************************
  *                                  *
  *          Dedicated parser for templates          *
  *                                  *
  ************************************************************************/
@@ -1793,13 +1813,11 @@
         xsltCompileStepPattern(ctxt, NULL, novar);
     } else if (CUR == '/') {
         PUSH(XSLT_OP_PARENT, NULL, NULL, novar);
         NEXT;
         SKIP_BLANKS;
-        if ((CUR != 0) && (CUR != '|')) {
-        xsltCompileRelativePathPattern(ctxt, NULL, novar);
-        }
+        xsltCompileStepPattern(ctxt, NULL, novar);
     } else {
         ctxt->error = 1;
     }
     if (ctxt->error)
         goto error;
@@ -1860,10 +1878,12 @@
     SKIP_BLANKS;
     if ((CUR == '(') && !xmlXPathIsNodeType(name)) {
         xsltCompileIdKeyPattern(ctxt, name, 1, novar, 0);
         xmlFree(name);
         name = NULL;
+            if (ctxt->error)
+                return;
         if ((CUR == '/') && (NXT(1) == '/')) {
         PUSH(XSLT_OP_ANCESTOR, NULL, NULL, novar);
         NEXT;
         NEXT;
         SKIP_BLANKS;
@@ -1970,11 +1990,10 @@
     if (element->nsList != NULL) {
         while (element->nsList[j] != NULL)
         j++;
     }
     element->nsNr = j;
-        element->novar = novar;
 
 
 #ifdef WITH_XSLT_DEBUG_PATTERN
     xsltGenericDebug(xsltGenericDebugContext,
              "xsltCompilePattern : parsing '%s'\n",
@@ -2135,12 +2154,19 @@
         }
 
         xmlHashAddEntry2(style->namedTemplates, cur->name, cur->nameURI, cur);
     }
 
-    if (cur->match == NULL)
+    if (cur->match == NULL) {
+            if (cur->name == NULL) {
+                xsltTransformError(NULL, style, cur->elem,
+                    "xsl:template: need to specify match or name attribute\n");
+                style->errors++;
+                return(-1);
+            }
     return(0);
+    }
 
     priority = cur->priority;
     pat = xsltCompilePatternInternal(cur->match, style->doc, cur->elem,
             style, NULL, 1);
     if (pat == NULL)
@@ -2362,10 +2388,11 @@
          */
         switch (node->type) {
         case XML_ELEMENT_NODE:
             if (node->name[0] == ' ')
             break;
+                    /* Intentional fall-through */
         case XML_ATTRIBUTE_NODE:
         case XML_PI_NODE:
             name = node->name;
             break;
         case XML_DOCUMENT_NODE:
@@ -2399,11 +2426,11 @@
                          name, ctxt->mode, ctxt->modeURI);
     } else
         list = NULL;
     while (list != NULL) {
         if (xsltTestCompMatch(ctxt, list, node,
-                      ctxt->mode, ctxt->modeURI)) {
+                      ctxt->mode, ctxt->modeURI) == 1) {
         ret = list->template;
         priority = list->priority;
         break;
         }
         list = list->next;
@@ -2468,11 +2495,11 @@
         break;
     }
     while ((list != NULL) &&
            ((ret == NULL)  || (list->priority > priority))) {
         if (xsltTestCompMatch(ctxt, list, node,
-                      ctxt->mode, ctxt->modeURI)) {
+                      ctxt->mode, ctxt->modeURI) == 1) {
         ret = list->template;
         priority = list->priority;
         break;
         }
         list = list->next;
@@ -2485,11 +2512,11 @@
         (node->type == XML_TEXT_NODE)) {
         list = curstyle->elemMatch;
         while ((list != NULL) &&
            ((ret == NULL)  || (list->priority > priority))) {
         if (xsltTestCompMatch(ctxt, list, node,
-                      ctxt->mode, ctxt->modeURI)) {
+                      ctxt->mode, ctxt->modeURI) == 1) {
             ret = list->template;
             priority = list->priority;
             break;
         }
         list = list->next;
@@ -2498,11 +2525,11 @@
            (node->type == XML_COMMENT_NODE)) {
         list = curstyle->elemMatch;
         while ((list != NULL) &&
            ((ret == NULL)  || (list->priority > priority))) {
         if (xsltTestCompMatch(ctxt, list, node,
-                      ctxt->mode, ctxt->modeURI)) {
+                      ctxt->mode, ctxt->modeURI) == 1) {
             ret = list->template;
             priority = list->priority;
             break;
         }
         list = list->next;
@@ -2513,11 +2540,11 @@
     if (keyed) {
         list = curstyle->keyMatch;
         while ((list != NULL) &&
            ((ret == NULL)  || (list->priority > priority))) {
         if (xsltTestCompMatch(ctxt, list, node,
-                      ctxt->mode, ctxt->modeURI)) {
+                      ctxt->mode, ctxt->modeURI) == 1) {
             ret = list->template;
             priority = list->priority;
             break;
         }
         list = list->next;
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/pattern.h b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/pattern.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/pattern.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/pattern.h
@@ -42,10 +42,13 @@
         xsltFreeCompMatchList   (xsltCompMatchPtr comp);
 XSLTPUBFUN int XSLTCALL
         xsltTestCompMatchList   (xsltTransformContextPtr ctxt,
                      xmlNodePtr node,
                      xsltCompMatchPtr comp);
+XSLTPUBFUN void XSLTCALL
+        xsltCompMatchClearCache (xsltTransformContextPtr ctxt,
+                     xsltCompMatchPtr comp);
 XSLTPUBFUN void XSLTCALL
         xsltNormalizeCompSteps  (void *payload,
                      void *data,
                      const xmlChar *name);
 
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/security.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/security.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/security.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/security.c
@@ -383,20 +383,22 @@
     }
     if ((uri->scheme == NULL) ||
     (xmlStrEqual(BAD_CAST uri->scheme, BAD_CAST "file"))) {
 
 #if defined(_WIN32) && !defined(__CYGWIN__)
-    if ((uri->path)&&(uri->path[0]=='/')&&
-        (uri->path[1]!='\0')&&(uri->path[2]==':'))
-    ret = xsltCheckWritePath(sec, ctxt, uri->path+1);
-    else
+        if ((uri->path)&&(uri->path[0]=='/')&&
+            (uri->path[1]!='\0')&&(uri->path[2]==':'))
+            ret = xsltCheckWritePath(sec, ctxt, uri->path+1);
+        else
 #endif
+        {
+            /*
+             * Check if we are allowed to write this file
+             */
+        ret = xsltCheckWritePath(sec, ctxt, uri->path);
+        }
 
-    /*
-     * Check if we are allowed to write this file
-     */
-    ret = xsltCheckWritePath(sec, ctxt, uri->path);
     if (ret <= 0) {
         xmlFreeURI(uri);
         return(ret);
     }
     } else {
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/templates.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/templates.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/templates.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/templates.c
@@ -330,11 +330,11 @@
             while (nsList[i] != NULL)
                 i++;
             nsNr = i;
             }
         }
-        comp = xmlXPathCompile(expr);
+        comp = xmlXPathCtxtCompile(ctxt->xpathCtxt, expr);
                 val = xsltEvalXPathStringNs(ctxt, comp, nsNr, nsList);
         xmlXPathFreeCompExpr(comp);
         xmlFree(expr);
         if (val != NULL) {
             ret = xmlStrcat(ret, val);
@@ -643,33 +643,53 @@
  */
 xmlAttrPtr
 xsltAttrListTemplateProcess(xsltTransformContextPtr ctxt,
                         xmlNodePtr target, xmlAttrPtr attrs)
 {
-    xmlAttrPtr attr, copy, last;
+    xmlAttrPtr attr, copy, last = NULL;
     xmlNodePtr oldInsert, text;
     xmlNsPtr origNs = NULL, copyNs = NULL;
     const xmlChar *value;
     xmlChar *valueAVT;
+    int hasAttr = 0;
 
     if ((ctxt == NULL) || (target == NULL) || (attrs == NULL) ||
         (target->type != XML_ELEMENT_NODE))
     return(NULL);
 
     oldInsert = ctxt->insert;
     ctxt->insert = target;
 
     /*
-    * Instantiate LRE-attributes.
+    * Apply attribute-sets.
     */
-    if (target->properties) {
-    last = target->properties;
-    while (last->next != NULL)
-        last = last->next;
-    } else {
-    last = NULL;
+    attr = attrs;
+    do {
+#ifdef XSLT_REFACTORED
+    if ((attr->psvi == xsltXSLTAttrMarker) &&
+        xmlStrEqual(attr->name, (const xmlChar *)"use-attribute-sets"))
+    {
+        xsltApplyAttributeSet(ctxt, ctxt->node, (xmlNodePtr) attr, NULL);
+    }
+#else
+    if ((attr->ns != NULL) &&
+        xmlStrEqual(attr->name, (const xmlChar *)"use-attribute-sets") &&
+        xmlStrEqual(attr->ns->href, XSLT_NAMESPACE))
+    {
+        xsltApplyAttributeSet(ctxt, ctxt->node, (xmlNodePtr) attr, NULL);
+    }
+#endif
+    attr = attr->next;
+    } while (attr != NULL);
+
+    if (target->properties != NULL) {
+        hasAttr = 1;
     }
+
+    /*
+    * Instantiate LRE-attributes.
+    */
     attr = attrs;
     do {
     /*
     * Skip XSLT attributes.
     */
@@ -701,39 +721,11 @@
         value = xmlDictLookup(ctxt->dict, BAD_CAST "", 0);
     } else
         value = xmlDictLookup(ctxt->dict, BAD_CAST "", 0);
 
     /*
-    * Create a new attribute.
-    */
-    copy = xmlNewDocProp(target->doc, attr->name, NULL);
-    if (copy == NULL) {
-        if (attr->ns) {
-        xsltTransformError(ctxt, NULL, attr->parent,
-            "Internal error: Failed to create attribute '{%s}%s'.\n",
-            attr->ns->href, attr->name);
-        } else {
-        xsltTransformError(ctxt, NULL, attr->parent,
-            "Internal error: Failed to create attribute '%s'.\n",
-            attr->name);
-        }
-        goto error;
-    }
-    /*
-    * Attach it to the target element.
-    */
-    copy->parent = target;
-    if (last == NULL) {
-        target->properties = copy;
-        last = copy;
-    } else {
-        last->next = copy;
-        copy->prev = last;
-        last = copy;
-    }
-    /*
-    * Set the namespace. Avoid lookups of same namespaces.
+    * Get the namespace. Avoid lookups of same namespaces.
     */
     if (attr->ns != origNs) {
         origNs = attr->ns;
         if (attr->ns != NULL) {
 #ifdef XSLT_REFACTORED
@@ -746,11 +738,51 @@
         if (copyNs == NULL)
             goto error;
         } else
         copyNs = NULL;
     }
-    copy->ns = copyNs;
+    /*
+    * Create a new attribute.
+    */
+        if (hasAttr) {
+        copy = xmlSetNsProp(target, copyNs, attr->name, NULL);
+        } else {
+            /*
+            * Avoid checking for duplicate attributes if there aren't
+            * any attribute sets.
+            */
+        copy = xmlNewDocProp(target->doc, attr->name, NULL);
+
+        if (copy != NULL) {
+                copy->ns = copyNs;
+
+                /*
+                * Attach it to the target element.
+                */
+                copy->parent = target;
+                if (last == NULL) {
+                    target->properties = copy;
+                    last = copy;
+                } else {
+                    last->next = copy;
+                    copy->prev = last;
+                    last = copy;
+                }
+            }
+        }
+    if (copy == NULL) {
+        if (attr->ns) {
+        xsltTransformError(ctxt, NULL, attr->parent,
+            "Internal error: Failed to create attribute '{%s}%s'.\n",
+            attr->ns->href, attr->name);
+        } else {
+        xsltTransformError(ctxt, NULL, attr->parent,
+            "Internal error: Failed to create attribute '%s'.\n",
+            attr->name);
+        }
+        goto error;
+    }
 
     /*
     * Set the value.
     */
     text = xmlNewText(NULL);
@@ -801,34 +833,10 @@
 
 next_attribute:
     attr = attr->next;
     } while (attr != NULL);
 
-    /*
-    * Apply attribute-sets.
-    * The creation of such attributes will not overwrite any existing
-    * attribute.
-    */
-    attr = attrs;
-    do {
-#ifdef XSLT_REFACTORED
-    if ((attr->psvi == xsltXSLTAttrMarker) &&
-        xmlStrEqual(attr->name, (const xmlChar *)"use-attribute-sets"))
-    {
-        xsltApplyAttributeSet(ctxt, ctxt->node, (xmlNodePtr) attr, NULL);
-    }
-#else
-    if ((attr->ns != NULL) &&
-        xmlStrEqual(attr->name, (const xmlChar *)"use-attribute-sets") &&
-        xmlStrEqual(attr->ns->href, XSLT_NAMESPACE))
-    {
-        xsltApplyAttributeSet(ctxt, ctxt->node, (xmlNodePtr) attr, NULL);
-    }
-#endif
-    attr = attr->next;
-    } while (attr != NULL);
-
     ctxt->insert = oldInsert;
     return(target->properties);
 
 error:
     ctxt->insert = oldInsert;
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/transform.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/transform.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/transform.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/transform.c
@@ -230,10 +230,12 @@
         ctxt->vars = ctxt->varsTab[ctxt->varsNr - 1];
     else
         ctxt->vars = NULL;
 }
 
+#ifdef WITH_PROFILER
+
 /**
  * profPush:
  * @ctxt: the transformation context
  * @value:  the profiling value to push on the stack
  *
@@ -338,10 +340,12 @@
         templ->templCountTab[templ->templNr] = 1;
         templ->templNr++;
     }
 }
 
+#endif /* WITH_PROFILER */
+
 /**
  * xsltPreCompEval:
  * @ctxt: transform context
  * @node: context node
  * @comp: precompiled expression
@@ -1088,10 +1092,12 @@
         copy->content = cur->content;
     else {
         if ((copy->content = xmlStrdup(cur->content)) == NULL)
         return NULL;
     }
+
+    ctxt->lasttext = NULL;
     } else {
         /*
      * normal processing. keep counters to extend the text node
      * in xsltAddTextString if needed.
      */
@@ -2203,10 +2209,11 @@
 
     ctxt->currentTemplateRule = oldCurTempRule;
     }
 }
 
+#ifdef WITH_DEBUGGER
 static xmlNodePtr
 xsltDebuggerStartSequenceConstructor(xsltTransformContextPtr ctxt,
                      xmlNodePtr contextNode,
                      xmlNodePtr list,
                      xsltTemplatePtr templ,
@@ -2238,10 +2245,11 @@
             debugedNode = ctxt->inst;
         }
     }
     return(debugedNode);
 }
+#endif /* WITH_DEBUGGER */
 
 /**
  * xsltLocalVariablePush:
  * @ctxt: the transformation context
  * @variable: variable to be pushed to the variable stack
@@ -2409,10 +2417,21 @@
     /*
     * Process the sequence constructor.
     */
     cur = list;
     while (cur != NULL) {
+        if (ctxt->opLimit != 0) {
+            if (ctxt->opCount >= ctxt->opLimit) {
+        xsltTransformError(ctxt, NULL, cur,
+            "xsltApplySequenceConstructor: "
+                    "Operation limit exceeded\n");
+            ctxt->state = XSLT_STATE_STOPPED;
+                goto error;
+            }
+            ctxt->opCount += 1;
+        }
+
         ctxt->inst = cur;
 
 #ifdef WITH_DEBUGGER
         switch (ctxt->debugStatus) {
             case XSLT_DEBUG_RUN_RESTART:
@@ -2865,10 +2884,11 @@
                     cur->name));
 #endif
                 /*
                  * Search if there are fallbacks
                  */
+                ctxt->insert = insert;
                 child = cur->children;
                 while (child != NULL) {
                     if ((IS_XSLT_ELEM(child)) &&
                         (IS_XSLT_NAME(child, "fallback")))
             {
@@ -2876,10 +2896,11 @@
                         xsltApplySequenceConstructor(ctxt, contextNode,
                 child->children, NULL);
                     }
                     child = child->next;
                 }
+                ctxt->insert = oldInsert;
 
                 if (!found) {
                     xsltTransformError(ctxt, NULL, cur,
             "xsltApplySequenceConstructor: failed to find extension %s\n",
             cur->name);
@@ -3084,14 +3105,16 @@
               xmlNodePtr list,
               xsltTemplatePtr templ,
               xsltStackElemPtr withParams)
 {
     int oldVarsBase = 0;
-    long start = 0;
     xmlNodePtr cur;
     xsltStackElemPtr tmpParam = NULL;
     xmlDocPtr oldUserFragmentTop;
+#ifdef WITH_PROFILER
+    long start = 0;
+#endif
 
 #ifdef XSLT_REFACTORED
     xsltStyleItemParamPtr iparam;
 #else
     xsltStylePreCompPtr iparam;
@@ -3142,16 +3165,20 @@
     */
     oldVarsBase = ctxt->varsBase;
     ctxt->varsBase = ctxt->varsNr;
 
     ctxt->node = contextNode;
+
+#ifdef WITH_PROFILER
     if (ctxt->profile) {
     templ->nbCalls++;
     start = xsltTimestamp();
     profPush(ctxt, 0);
     profCallgraphAdd(templ, ctxt->templ);
     }
+#endif
+
     /*
     * Push the xsl:template declaration onto the stack.
     */
     templPush(ctxt, templ);
 
@@ -3255,10 +3282,12 @@
 
     /*
     * Pop the xsl:template declaration from the stack.
     */
     templPop(ctxt);
+
+#ifdef WITH_PROFILER
     if (ctxt->profile) {
     long spent, child, total, end;
 
     end = xsltTimestamp();
     child = profPop(ctxt);
@@ -3275,10 +3304,11 @@
 
     templ->time += spent;
     if (ctxt->profNr > 0)
         ctxt->profTab[ctxt->profNr - 1] += total;
     }
+#endif
 
 #ifdef WITH_DEBUGGER
     if ((ctxt->debugStatus != XSLT_DEBUG_NONE) && (addCallResult)) {
         xslDropCall();
     }
@@ -3432,11 +3462,11 @@
          * Trying to handle bug #59212
          * The value of the "select" attribute is an
          * XPath expression.
          * (see http://xml.apache.org/xalan-j/extensionslib.html#redirect)
          */
-        cmp = xmlXPathCompile(URL);
+        cmp = xmlXPathCtxtCompile(ctxt->xpathCtxt, URL);
                 val = xsltEvalXPathString(ctxt, cmp);
         xmlXPathFreeCompExpr(cmp);
         xmlFree(URL);
         URL = val;
         }
@@ -4996,11 +5026,11 @@
                 (xmlStrEqual(val, (xmlChar *) "strip"))) {
                 delNode = cur;
                 break;
             }
             }
-            /* no break on purpose */
+            /* Intentional fall-through */
         case XML_ELEMENT_NODE:
         case XML_DOCUMENT_NODE:
         case XML_HTML_DOCUMENT_NODE:
         case XML_CDATA_SECTION_NODE:
         case XML_PI_NODE:
@@ -5896,12 +5926,20 @@
         return (NULL);
 
     ctxt->initialContextDoc = doc;
     ctxt->initialContextNode = (xmlNodePtr) doc;
 
-    if (profile != NULL)
+    if (profile != NULL) {
+#ifdef WITH_PROFILER
         ctxt->profile = 1;
+#else
+        xsltTransformError(ctxt, NULL, (xmlNodePtr) doc,
+                "xsltApplyStylesheetInternal: "
+                "libxslt compiled without profiler\n");
+        goto error;
+#endif
+    }
 
     if (output != NULL)
         ctxt->outputFile = output;
     else
         ctxt->outputFile = NULL;
@@ -6010,20 +6048,26 @@
     res->charset = XML_CHAR_ENCODING_UTF8;
     if (encoding != NULL)
         res->encoding = xmlStrdup(encoding);
     variables = style->variables;
 
+    ctxt->node = (xmlNodePtr) doc;
+    ctxt->output = res;
+
+    ctxt->xpathCtxt->contextSize = 1;
+    ctxt->xpathCtxt->proximityPosition = 1;
+    ctxt->xpathCtxt->node = NULL; /* TODO: Set the context node here? */
+
     /*
      * Start the evaluation, evaluate the params, the stylesheets globals
      * and start by processing the top node.
      */
     if (xsltNeedElemSpaceHandling(ctxt))
     xsltApplyStripSpaces(ctxt, xmlDocGetRootElement(doc));
     /*
     * Evaluate global params and user-provided params.
     */
-    ctxt->node = (xmlNodePtr) doc;
     if (ctxt->globalVars == NULL)
     ctxt->globalVars = xmlHashCreate(20);
     if (params != NULL) {
         xsltEvalUserParams(ctxt, params);
     }
@@ -6034,18 +6078,13 @@
     xsltEvalGlobalVariables(ctxt);
 
     /* Clean up any unused RVTs. */
     xsltReleaseLocalRVTs(ctxt, NULL);
 
-    ctxt->node = (xmlNodePtr) doc;
-    ctxt->output = res;
     ctxt->insert = (xmlNodePtr) res;
     ctxt->varsBase = ctxt->varsNr - 1;
 
-    ctxt->xpathCtxt->contextSize = 1;
-    ctxt->xpathCtxt->proximityPosition = 1;
-    ctxt->xpathCtxt->node = NULL; /* TODO: Set the context node here? */
     /*
     * Start processing the source tree -----------------------------------
     */
     xsltProcessOneNode(ctxt, ctxt->node, NULL);
     /*
@@ -6171,13 +6210,16 @@
         }
         }
         }
     }
     xmlXPathFreeNodeSet(ctxt->nodeList);
+
+#ifdef WITH_PROFILER
     if (profile != NULL) {
         xsltSaveProfiling(ctxt, profile);
     }
+#endif
 
     /*
      * Be pedantic.
      */
     if ((ctxt != NULL) && (ctxt->state != XSLT_STATE_OK)) {
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/variables.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/variables.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/variables.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/variables.c
@@ -203,11 +203,12 @@
  * Returns 0 in case of success and -1 in case of API or internal errors.
  *
  * This function is unsupported in newer releases of libxslt.
  */
 int
-xsltExtensionInstructionResultFinalize(xsltTransformContextPtr ctxt)
+xsltExtensionInstructionResultFinalize(
+        xsltTransformContextPtr ctxt ATTRIBUTE_UNUSED)
 {
     xmlGenericError(xmlGenericErrorContext,
             "xsltExtensionInstructionResultFinalize is unsupported "
             "in this release of libxslt.\n");
     return(-1);
@@ -228,12 +229,13 @@
  *
  * It isn't necessary to call this function in newer releases of
  * libxslt.
  */
 int
-xsltExtensionInstructionResultRegister(xsltTransformContextPtr ctxt,
-                       xmlXPathObjectPtr obj)
+xsltExtensionInstructionResultRegister(
+        xsltTransformContextPtr ctxt ATTRIBUTE_UNUSED,
+    xmlXPathObjectPtr obj ATTRIBUTE_UNUSED)
 {
     return(0);
 }
 
 /**
@@ -856,11 +858,11 @@
     xsltStackElemPtr oldVar = ctxt->contextVariable;
 
     if ((comp != NULL) && (comp->comp != NULL)) {
         xpExpr = comp->comp;
     } else {
-        xpExpr = xmlXPathCompile(variable->select);
+        xpExpr = xmlXPathCtxtCompile(ctxt->xpathCtxt, variable->select);
     }
     if (xpExpr == NULL)
         return(NULL);
     /*
     * Save context states.
@@ -1097,11 +1099,11 @@
     xmlXPathContextPtr xpctxt = ctxt->xpathCtxt;
 
     if ((comp != NULL) && (comp->comp != NULL)) {
         xpExpr = comp->comp;
     } else {
-        xpExpr = xmlXPathCompile(elem->select);
+        xpExpr = xmlXPathCtxtCompile(ctxt->xpathCtxt, elem->select);
     }
     if (xpExpr == NULL)
         goto error;
 
 
@@ -1548,11 +1550,11 @@
      * Do the evaluation if @eval is non-zero.
      */
 
     result = NULL;
     if (eval != 0) {
-        xpExpr = xmlXPathCompile(value);
+        xpExpr = xmlXPathCtxtCompile(ctxt->xpathCtxt, value);
     if (xpExpr != NULL) {
         xmlDocPtr oldXPDoc;
         xmlNodePtr oldXPContextNode;
         int oldXPProximityPosition, oldXPContextSize, oldXPNsNr;
         xmlNsPtr *oldXPNamespaces;
@@ -1965,11 +1967,11 @@
  * xsltParseStylesheetCallerParam:
  * @ctxt:  the XSLT transformation context
  * @inst:  the xsl:with-param instruction element
  *
  * Processes an xsl:with-param instruction at transformation time.
- * The value is compute, but not recorded.
+ * The value is computed, but not recorded.
  * NOTE that this is also called with an *xsl:param* element
  * from exsltFuncFunctionFunction().
  *
  * Returns the new xsltStackElemPtr or NULL
  */
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xslt.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xslt.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xslt.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xslt.c
@@ -590,14 +590,10 @@
         xmlFree(tmp);
     }
     }
     if (cctxt->tmpList != NULL)
     xsltPointerListFree(cctxt->tmpList);
-#ifdef XSLT_REFACTORED_XPATHCOMP
-    if (cctxt->xpathCtxt != NULL)
-    xmlXPathFreeContext(cctxt->xpathCtxt);
-#endif
     if (cctxt->nsAliases != NULL)
     xsltFreeNsAliasList(cctxt->nsAliases);
 
     if (cctxt->ivars)
     xsltCompilerVarInfoFree(cctxt);
@@ -629,19 +625,10 @@
     ret->errSeverity = XSLT_ERROR_SEVERITY_ERROR;
     ret->tmpList = xsltPointerListCreate(20);
     if (ret->tmpList == NULL) {
     goto internal_err;
     }
-#ifdef XSLT_REFACTORED_XPATHCOMP
-    /*
-    * Create the XPath compilation context in order
-    * to speed up precompilation of XPath expressions.
-    */
-    ret->xpathCtxt = xmlXPathNewContext(NULL);
-    if (ret->xpathCtxt == NULL)
-    goto internal_err;
-#endif
 
     return(ret);
 
 internal_err:
     xsltCompilationCtxtFree(ret);
@@ -759,28 +746,30 @@
 }
 
 #endif
 
 /**
- * xsltNewStylesheet:
+ * xsltNewStylesheetInternal:
+ * @parent:  the parent stylesheet or NULL
  *
  * Create a new XSLT Stylesheet
  *
  * Returns the newly allocated xsltStylesheetPtr or NULL in case of error
  */
-xsltStylesheetPtr
-xsltNewStylesheet(void) {
+static xsltStylesheetPtr
+xsltNewStylesheetInternal(xsltStylesheetPtr parent) {
     xsltStylesheetPtr ret = NULL;
 
     ret = (xsltStylesheetPtr) xmlMalloc(sizeof(xsltStylesheet));
     if (ret == NULL) {
     xsltTransformError(NULL, NULL, NULL,
         "xsltNewStylesheet : malloc failed\n");
     goto internal_err;
     }
     memset(ret, 0, sizeof(xsltStylesheet));
 
+    ret->parent = parent;
     ret->omitXmlDeclaration = -1;
     ret->standalone = -1;
     ret->decimalFormat = xsltNewDecimalFormat(NULL, NULL);
     ret->indent = -1;
     ret->errors = 0;
@@ -797,20 +786,47 @@
 #ifdef WITH_XSLT_DEBUG
     xsltGenericDebug(xsltGenericDebugContext,
     "creating dictionary for stylesheet\n");
 #endif
 
+    if (parent == NULL) {
+        ret->principal = ret;
+
+        ret->xpathCtxt = xmlXPathNewContext(NULL);
+        if (ret->xpathCtxt == NULL) {
+            xsltTransformError(NULL, NULL, NULL,
+                    "xsltNewStylesheet: xmlXPathNewContext failed\n");
+            goto internal_err;
+        }
+        if (xmlXPathContextSetCache(ret->xpathCtxt, 1, -1, 0) == -1)
+            goto internal_err;
+    } else {
+        ret->principal = parent->principal;
+    }
+
     xsltInit();
 
     return(ret);
 
 internal_err:
     if (ret != NULL)
     xsltFreeStylesheet(ret);
     return(NULL);
 }
 
+/**
+ * xsltNewStylesheet:
+ *
+ * Create a new XSLT Stylesheet
+ *
+ * Returns the newly allocated xsltStylesheetPtr or NULL in case of error
+ */
+xsltStylesheetPtr
+xsltNewStylesheet(void) {
+    return xsltNewStylesheetInternal(NULL);
+}
+
 /**
  * xsltAllocateExtra:
  * @style:  an XSLT stylesheet
  *
  * Allocate an extra runtime information slot statically while compiling
@@ -1063,10 +1079,13 @@
     xsltGenericDebug(xsltGenericDebugContext,
                      "freeing dictionary from stylesheet\n");
 #endif
     xmlDictFree(style->dict);
 
+    if (style->xpathCtxt != NULL)
+    xmlXPathFreeContext(style->xpathCtxt);
+
     memset(style, -1, sizeof(xsltStylesheet));
     xmlFree(style);
 }
 
 /************************************************************************
@@ -1347,12 +1366,12 @@
             /*
             * TODO: We'll report additionally an error
             *  via the stylesheet's error handling.
             */
             xsltTransformError(NULL, style, cur,
-                "Attribute 'cdata-section-elements': The value "
-                "'%s' is not a valid QName.\n", element);
+                "Attribute 'cdata-section-elements': "
+                "Not a valid QName.\n");
             style->errors++;
             } else {
             xmlNsPtr ns;
 
             /*
@@ -5477,11 +5496,11 @@
 
 #ifdef XSLT_REFACTORED
 
 /**
  * xsltIncludeComp:
- * @cctxt: the compilation contenxt
+ * @cctxt: the compilation context
  * @node:  the xsl:include node
  *
  * Process the xslt include node on the source node
  */
 static xsltStyleItemIncludePtr
@@ -6530,168 +6549,168 @@
     xsltStylesheetPtr retStyle;
 
     if (doc == NULL)
     return(NULL);
 
-    retStyle = xsltNewStylesheet();
+    retStyle = xsltNewStylesheetInternal(parentStyle);
     if (retStyle == NULL)
     return(NULL);
-    /*
-    * Set the importing stylesheet module; also used to detect recursion.
-    */
-    retStyle->parent = parentStyle;
+
+    if (xsltParseStylesheetUser(retStyle, doc) != 0) {
+        xsltFreeStylesheet(retStyle);
+        return(NULL);
+    }
+
+    return(retStyle);
+}
+
+/**
+ * xsltParseStylesheetUser:
+ * @style: pointer to the stylesheet
+ * @doc:  an xmlDoc parsed XML
+ *
+ * Parse an XSLT stylesheet with a user-provided stylesheet struct.
+ *
+ * Returns 0 if successful, -1 in case of error.
+ */
+int
+xsltParseStylesheetUser(xsltStylesheetPtr style, xmlDocPtr doc) {
+    if ((style == NULL) || (doc == NULL))
+    return(-1);
+
     /*
     * Adjust the string dict.
     */
     if (doc->dict != NULL) {
-        xmlDictFree(retStyle->dict);
-    retStyle->dict = doc->dict;
+        xmlDictFree(style->dict);
+    style->dict = doc->dict;
 #ifdef WITH_XSLT_DEBUG
         xsltGenericDebug(xsltGenericDebugContext,
         "reusing dictionary from %s for stylesheet\n",
         doc->URL);
 #endif
-    xmlDictReference(retStyle->dict);
+    xmlDictReference(style->dict);
     }
 
     /*
     * TODO: Eliminate xsltGatherNamespaces(); we must not restrict
     *  the stylesheet to containt distinct namespace prefixes.
     */
-    xsltGatherNamespaces(retStyle);
+    xsltGatherNamespaces(style);
 
 #ifdef XSLT_REFACTORED
     {
     xsltCompilerCtxtPtr cctxt;
     xsltStylesheetPtr oldCurSheet;
 
-    if (parentStyle == NULL) {
+    if (style->parent == NULL) {
         xsltPrincipalStylesheetDataPtr principalData;
         /*
-        * Principal stylesheet
-        * --------------------
-        */
-        retStyle->principal = retStyle;
-        /*
         * Create extra data for the principal stylesheet.
         */
         principalData = xsltNewPrincipalStylesheetData();
         if (principalData == NULL) {
-        xsltFreeStylesheet(retStyle);
-        return(NULL);
+        return(-1);
         }
-        retStyle->principalData = principalData;
+        style->principalData = principalData;
         /*
         * Create the compilation context
         * ------------------------------
         * (only once; for the principal stylesheet).
         * This is currently the only function where the
         * compilation context is created.
         */
-        cctxt = xsltCompilationCtxtCreate(retStyle);
+        cctxt = xsltCompilationCtxtCreate(style);
         if (cctxt == NULL) {
-        xsltFreeStylesheet(retStyle);
-        return(NULL);
+        return(-1);
         }
-        retStyle->compCtxt = (void *) cctxt;
-        cctxt->style = retStyle;
-        cctxt->dict = retStyle->dict;
+        style->compCtxt = (void *) cctxt;
+        cctxt->style = style;
+        cctxt->dict = style->dict;
         cctxt->psData = principalData;
         /*
         * Push initial dummy node info.
         */
         cctxt->depth = -1;
         xsltCompilerNodePush(cctxt, (xmlNodePtr) doc);
     } else {
         /*
         * Imported stylesheet.
         */
-        retStyle->principal = parentStyle->principal;
-        cctxt = parentStyle->compCtxt;
-        retStyle->compCtxt = cctxt;
+        cctxt = style->parent->compCtxt;
+        style->compCtxt = cctxt;
     }
     /*
     * Save the old and set the current stylesheet structure in the
     * compilation context.
     */
     oldCurSheet = cctxt->style;
-    cctxt->style = retStyle;
+    cctxt->style = style;
 
-    retStyle->doc = doc;
-    xsltParseStylesheetProcess(retStyle, doc);
+    style->doc = doc;
+    xsltParseStylesheetProcess(style, doc);
 
     cctxt->style = oldCurSheet;
-    if (parentStyle == NULL) {
+    if (style->parent == NULL) {
         /*
         * Pop the initial dummy node info.
         */
         xsltCompilerNodePop(cctxt, (xmlNodePtr) doc);
     } else {
         /*
         * Clear the compilation context of imported
         * stylesheets.
         * TODO: really?
         */
-        /* retStyle->compCtxt = NULL; */
+        /* style->compCtxt = NULL; */
     }
-    /*
-    * Free the stylesheet if there were errors.
-    */
-    if (retStyle != NULL) {
-        if (retStyle->errors != 0) {
+
 #ifdef XSLT_REFACTORED_XSLT_NSCOMP
-        /*
-        * Restore all changes made to namespace URIs of ns-decls.
-        */
-        if (cctxt->psData->nsMap)
-            xsltRestoreDocumentNamespaces(cctxt->psData->nsMap, doc);
-#endif
-        /*
-        * Detach the doc from the stylesheet; otherwise the doc
-        * will be freed in xsltFreeStylesheet().
-        */
-        retStyle->doc = NULL;
-        /*
-        * Cleanup the doc if its the main stylesheet.
-        */
-        if (parentStyle == NULL) {
-            xsltCleanupStylesheetTree(doc, xmlDocGetRootElement(doc));
-            if (retStyle->compCtxt != NULL) {
-            xsltCompilationCtxtFree(retStyle->compCtxt);
-            retStyle->compCtxt = NULL;
-            }
+        if (style->errors != 0) {
+            /*
+            * Restore all changes made to namespace URIs of ns-decls.
+            */
+            if (cctxt->psData->nsMap)
+                xsltRestoreDocumentNamespaces(cctxt->psData->nsMap, doc);
         }
+#endif
 
-        xsltFreeStylesheet(retStyle);
-        retStyle = NULL;
+        if (style->parent == NULL) {
+            xsltCompilationCtxtFree(style->compCtxt);
+            style->compCtxt = NULL;
         }
     }
-    }
 
 #else /* XSLT_REFACTORED */
     /*
     * Old behaviour.
     */
-    retStyle->doc = doc;
-    if (xsltParseStylesheetProcess(retStyle, doc) == NULL) {
-        retStyle->doc = NULL;
-        xsltFreeStylesheet(retStyle);
-        retStyle = NULL;
-    }
-    if (retStyle != NULL) {
-    if (retStyle->errors != 0) {
-        retStyle->doc = NULL;
-        if (parentStyle == NULL)
-        xsltCleanupStylesheetTree(doc,
-            xmlDocGetRootElement(doc));
-        xsltFreeStylesheet(retStyle);
-        retStyle = NULL;
-    }
+    style->doc = doc;
+    if (xsltParseStylesheetProcess(style, doc) == NULL) {
+        style->doc = NULL;
+        return(-1);
     }
 #endif /* else of XSLT_REFACTORED */
 
-    return(retStyle);
+    if (style->errors != 0) {
+        /*
+        * Detach the doc from the stylesheet; otherwise the doc
+        * will be freed in xsltFreeStylesheet().
+        */
+        style->doc = NULL;
+        /*
+        * Cleanup the doc if its the main stylesheet.
+        */
+        if (style->parent == NULL)
+            xsltCleanupStylesheetTree(doc, xmlDocGetRootElement(doc));
+        return(-1);
+    }
+
+    if (style->parent == NULL)
+        xsltResolveStylesheetAttributeSet(style);
+
+    return(0);
 }
 
 /**
  * xsltParseStylesheetDoc:
  * @doc:  and xmlDoc parsed XML
@@ -6705,31 +6724,13 @@
  * Returns a new XSLT stylesheet structure.
  */
 
 xsltStylesheetPtr
 xsltParseStylesheetDoc(xmlDocPtr doc) {
-    xsltStylesheetPtr ret;
-
     xsltInitGlobals();
 
-    ret = xsltParseStylesheetImportedDoc(doc, NULL);
-    if (ret == NULL)
-    return(NULL);
-
-    xsltResolveStylesheetAttributeSet(ret);
-#ifdef XSLT_REFACTORED
-    /*
-    * Free the compilation context.
-    * TODO: Check if it's better to move this cleanup to
-    *   xsltParseStylesheetImportedDoc().
-    */
-    if (ret->compCtxt != NULL) {
-    xsltCompilationCtxtFree(XSLT_CCTXT(ret));
-    ret->compCtxt = NULL;
-    }
-#endif
-    return(ret);
+    return(xsltParseStylesheetImportedDoc(doc, NULL));
 }
 
 /**
  * xsltParseStylesheetFile:
  * @filename:  the filename/URL to the stylesheet
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltInternals.h b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltInternals.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltInternals.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltInternals.h
@@ -103,18 +103,10 @@
  * Internal define to enable the pointer-comparison of
  * namespaces of XSLT elements.
  */
 /* #define XSLT_REFACTORED_XSLT_NSCOMP */
 
-/**
- * XSLT_REFACTORED_XPATHCOMP:
- *
- * Internal define to enable the optimization of the
- * compilation of XPath expressions.
- */
-#define XSLT_REFACTORED_XPATHCOMP
-
 #ifdef XSLT_REFACTORED_XSLT_NSCOMP
 
 extern const xmlChar *xsltConstNamespaceNameXSLT;
 
 /**
@@ -476,11 +468,11 @@
  * TODO: This is somehow not nice, since it has a "free" field, which
  *   derived stylesheet-structs do not have.
  */
 struct _xsltElemPreComp {
     xsltElemPreCompPtr next;        /* next item in the global chained
-                       list hold by xsltStylesheet. */
+                       list held by xsltStylesheet. */
     xsltStyleType type;     /* type of the element */
     xsltTransformFunction func; /* handling function */
     xmlNodePtr inst;            /* the node in the stylesheet's tree
                        corresponding to this item */
 
@@ -588,11 +580,11 @@
  * REVISIT TODO: Keep this structure equal to the fields
  *   defined by XSLT_ITEM_COMMON_FIELDS
  */
 struct _xsltStylePreComp {
     xsltElemPreCompPtr next;    /* next item in the global chained
-                   list hold by xsltStylesheet */
+                   list held by xsltStylesheet */
     xsltStyleType type;         /* type of the item */
     xsltTransformFunction func; /* handling function */
     xmlNodePtr inst;        /* the node in the stylesheet's tree
                    corresponding to this item. */
     /* Currently no navigational fields. */
@@ -1344,13 +1336,10 @@
     * the spec can be turned off. This has effect only on special
     * mechanisms like whitespace-stripping in the stylesheet.
     */
     int strict;
     xsltPrincipalStylesheetDataPtr psData;
-#ifdef XSLT_REFACTORED_XPATHCOMP
-    xmlXPathContextPtr xpathCtxt;
-#endif
     xsltStyleItemUknownPtr unknownItem;
     int hasNsAliases; /* Indicator if there was an xsl:namespace-alias. */
     xsltNsAliasPtr nsAliases;
     xsltVarInfoPtr ivars; /* Storage of local in-scope variables/params. */
     xsltVarInfoPtr ivar; /* topmost local variable/param. */
@@ -1640,10 +1629,12 @@
      * Forwards-compatible processing
      */
     int forwards_compatible;
 
     xmlHashTablePtr namedTemplates; /* hash table of named templates */
+
+    xmlXPathContextPtr xpathCtxt;
 };
 
 typedef struct _xsltTransformCache xsltTransformCache;
 typedef xsltTransformCache *xsltTransformCachePtr;
 struct _xsltTransformCache {
@@ -1787,10 +1778,12 @@
     xmlDocPtr localRVTBase; /* Obsolete */
     int keyInitLevel;   /* Needed to catch recursive keys issues */
     int depth;          /* Needed to catch recursions */
     int maxTemplateDepth;
     int maxTemplateVars;
+    unsigned long opLimit;
+    unsigned long opCount;
 };
 
 /**
  * CHECK_STOPPED:
  *
@@ -1869,10 +1862,13 @@
 XSLTPUBFUN xsltStylesheetPtr XSLTCALL
             xsltParseStylesheetDoc  (xmlDocPtr doc);
 XSLTPUBFUN xsltStylesheetPtr XSLTCALL
             xsltParseStylesheetImportedDoc(xmlDocPtr doc,
                         xsltStylesheetPtr style);
+XSLTPUBFUN int XSLTCALL
+            xsltParseStylesheetUser(xsltStylesheetPtr style,
+                        xmlDocPtr doc);
 XSLTPUBFUN xsltStylesheetPtr XSLTCALL
             xsltLoadStylesheetPI    (xmlDocPtr doc);
 XSLTPUBFUN void XSLTCALL
             xsltNumberFormat    (xsltTransformContextPtr ctxt,
                          xsltNumberDataPtr data,
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltconfig.h b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltconfig.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltconfig.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltconfig.h
@@ -18,25 +18,25 @@
 /**
  * LIBXSLT_DOTTED_VERSION:
  *
  * the version string like "1.2.3"
  */
-#define LIBXSLT_DOTTED_VERSION "1.1.33"
+#define LIBXSLT_DOTTED_VERSION "1.1.34"
 
 /**
  * LIBXSLT_VERSION:
  *
  * the version number: 1.2.3 value is 10203
  */
-#define LIBXSLT_VERSION 10133
+#define LIBXSLT_VERSION 10134
 
 /**
  * LIBXSLT_VERSION_STRING:
  *
  * the version number string, 1.2.3 value is "10203"
  */
-#define LIBXSLT_VERSION_STRING "10133"
+#define LIBXSLT_VERSION_STRING "10134"
 
 /**
  * LIBXSLT_VERSION_EXTRA:
  *
  * extra version information, used to show a CVS compilation
@@ -108,10 +108,23 @@
 #ifndef WITH_DEBUGGER
 #define WITH_DEBUGGER
 #endif
 #endif
 
+/**
+ * WITH_PROFILER:
+ *
+ * Activate the compilation of the profiler. Speed penalty
+ * is insignifiant.
+ * On by default unless --without-profiler is passed to configure
+ */
+#if 0
+#ifndef WITH_PROFILER
+#define WITH_PROFILER
+#endif
+#endif
+
 /**
  * WITH_MODULES:
  *
  * Whether module support is configured into libxslt
  * Note: no default module path for win32 platforms
@@ -127,13 +140,10 @@
  * ATTRIBUTE_UNUSED:
  *
  * This macro is used to flag unused function parameters to GCC
  */
 #ifdef __GNUC__
-#ifdef HAVE_ANSIDECL_H
-#include <ansidecl.h>
-#endif
 #ifndef ATTRIBUTE_UNUSED
 #define ATTRIBUTE_UNUSED __attribute__((unused))
 #endif
 #else
 #define ATTRIBUTE_UNUSED
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltconfig.h.in b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltconfig.h.in
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltconfig.h.in
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltconfig.h.in
@@ -108,10 +108,23 @@
 #ifndef WITH_DEBUGGER
 #define WITH_DEBUGGER
 #endif
 #endif
 
+/**
+ * WITH_PROFILER:
+ *
+ * Activate the compilation of the profiler. Speed penalty
+ * is insignifiant.
+ * On by default unless --without-profiler is passed to configure
+ */
+#if @WITH_PROFILER@
+#ifndef WITH_PROFILER
+#define WITH_PROFILER
+#endif
+#endif
+
 /**
  * WITH_MODULES:
  *
  * Whether module support is configured into libxslt
  * Note: no default module path for win32 platforms
@@ -127,13 +140,10 @@
  * ATTRIBUTE_UNUSED:
  *
  * This macro is used to flag unused function parameters to GCC
  */
 #ifdef __GNUC__
-#ifdef HAVE_ANSIDECL_H
-#include <ansidecl.h>
-#endif
 #ifndef ATTRIBUTE_UNUSED
 #define ATTRIBUTE_UNUSED __attribute__((unused))
 #endif
 #else
 #define ATTRIBUTE_UNUSED
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltutils.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltutils.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltutils.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltutils.c
@@ -1576,11 +1576,19 @@
             break;
         }
         xmlOutputBufferWriteString(buf, "?>\n");
     }
     if (result->children != NULL) {
-        xmlNodePtr child = result->children;
+            xmlNodePtr children = result->children;
+        xmlNodePtr child = children;
+
+            /*
+             * Hack to avoid quadratic behavior when scanning
+             * result->children in xmlGetIntSubset called by
+             * xmlNodeDumpOutput.
+             */
+            result->children = NULL;
 
         while (child != NULL) {
         xmlNodeDumpOutput(buf, result, child, 0, (indent == 1),
                       (const char *) encoding);
         if (indent && ((child->type == XML_DTD_NODE) ||
@@ -1589,10 +1597,12 @@
             xmlOutputBufferWriteString(buf, "\n");
         child = child->next;
         }
         if (indent)
             xmlOutputBufferWriteString(buf, "\n");
+
+            result->children = children;
     }
     xmlOutputBufferFlush(buf);
     }
     return(buf->written - base);
 }
@@ -1786,10 +1796,12 @@
 #endif
     (void)xmlOutputBufferClose(buf);
     return 0;
 }
 
+#ifdef WITH_PROFILER
+
 /************************************************************************
  *                                  *
  *      Generating profiling information            *
  *                                  *
  ************************************************************************/
@@ -2263,10 +2275,12 @@
     xmlFree(templates);
 
     return ret;
 }
 
+#endif /* WITH_PROFILER */
+
 /************************************************************************
  *                                  *
  *      Hooks for libxml2 XPath                 *
  *                                  *
  ************************************************************************/
@@ -2286,29 +2300,11 @@
 xsltXPathCompileFlags(xsltStylesheetPtr style, const xmlChar *str, int flags) {
     xmlXPathContextPtr xpathCtxt;
     xmlXPathCompExprPtr ret;
 
     if (style != NULL) {
-#ifdef XSLT_REFACTORED_XPATHCOMP
-    if (XSLT_CCTXT(style)) {
-        /*
-        * Proposed by Jerome Pesenti
-        * --------------------------
-        * For better efficiency we'll reuse the compilation
-        * context's XPath context. For the common stylesheet using
-        * XPath expressions this will reduce compilation time to
-        * about 50%.
-        *
-        * See http://mail.gnome.org/archives/xslt/2006-April/msg00037.html
-        */
-        xpathCtxt = XSLT_CCTXT(style)->xpathCtxt;
-        xpathCtxt->doc = style->doc;
-    } else
-        xpathCtxt = xmlXPathNewContext(style->doc);
-#else
-    xpathCtxt = xmlXPathNewContext(style->doc);
-#endif
+        xpathCtxt = style->principal->xpathCtxt;
     if (xpathCtxt == NULL)
         return NULL;
     xpathCtxt->dict = style->dict;
     } else {
     xpathCtxt = xmlXPathNewContext(NULL);
@@ -2320,17 +2316,13 @@
     /*
     * Compile the expression.
     */
     ret = xmlXPathCtxtCompile(xpathCtxt, str);
 
-#ifdef XSLT_REFACTORED_XPATHCOMP
-    if ((style == NULL) || (! XSLT_CCTXT(style))) {
+    if (style == NULL) {
     xmlXPathFreeContext(xpathCtxt);
     }
-#else
-    xmlXPathFreeContext(xpathCtxt);
-#endif
     /*
      * TODO: there is a lot of optimizations which should be possible
      *       like variable slot precomputations, function precomputations, etc.
      */
 
@@ -2356,10 +2348,27 @@
  *                                  *
  *      Hooks for the debugger                  *
  *                                  *
  ************************************************************************/
 
+int xslDebugStatus;
+
+/**
+ * xsltGetDebuggerStatus:
+ *
+ * Get xslDebugStatus.
+ *
+ * Returns the value of xslDebugStatus.
+ */
+int
+xsltGetDebuggerStatus(void)
+{
+    return(xslDebugStatus);
+}
+
+#ifdef WITH_DEBUGGER
+
 /*
  * There is currently only 3 debugging callback defined
  * Debugger callbacks are disabled by default
  */
 #define XSLT_CALLBACK_NUMBER 3
@@ -2376,12 +2385,10 @@
     NULL, /* handler */
     NULL, /* add */
     NULL  /* drop */
 };
 
-int xslDebugStatus;
-
 /**
  * xsltSetDebuggerStatus:
  * @value : the value to be set
  *
  * This function sets the value of xslDebugStatus.
@@ -2390,23 +2397,10 @@
 xsltSetDebuggerStatus(int value)
 {
     xslDebugStatus = value;
 }
 
-/**
- * xsltGetDebuggerStatus:
- *
- * Get xslDebugStatus.
- *
- * Returns the value of xslDebugStatus.
- */
-int
-xsltGetDebuggerStatus(void)
-{
-    return(xslDebugStatus);
-}
-
 /**
  * xsltSetDebuggerCallbacks:
  * @no : number of callbacks
  * @block : the block of callbacks
  *
@@ -2477,5 +2471,7 @@
 {
     if (xsltDebuggerCurrentCallbacks.drop != NULL)
     xsltDebuggerCurrentCallbacks.drop();
 }
 
+#endif /* WITH_DEBUGGER */
+
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltutils.h b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltutils.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltutils.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/libxslt/xsltutils.h
@@ -78,11 +78,11 @@
       ((n)->type == XML_HTML_DOCUMENT_NODE) ||              \
       ((n)->type == XML_COMMENT_NODE) ||                \
       ((n)->type == XML_PI_NODE)))
 
 /*
- * Our own version of namespaced atributes lookup.
+ * Our own version of namespaced attributes lookup.
  */
 XSLTPUBFUN xmlChar * XSLTCALL
         xsltGetNsProp   (xmlNodePtr node,
                  const xmlChar *name,
                  const xmlChar *nameSpace);
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Makefile.mingw b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Makefile.mingw
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Makefile.mingw
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Makefile.mingw
@@ -53,11 +53,11 @@
 CFLAGS += -I$(BASEDIR) -I$(XSLT_SRCDIR) -I$(INCPREFIX)
 
 # The linker and its options.
 LD = gcc.exe
 LDFLAGS += -Wl,-L,$(BINDIR) -Wl,-L,$(LIBPREFIX)
-LIBS = -lwsock32
+LIBS =
 
 # The archiver and its options.
 AR = ar.exe
 ARFLAGS = -r
 
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Makefile.msvc b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Makefile.msvc
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Makefile.msvc
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Makefile.msvc
@@ -57,11 +57,11 @@
 
 # The linker and its options.
 LD = link.exe
 LDFLAGS = /nologo
 LDFLAGS = $(LDFLAGS) /LIBPATH:$(BINDIR) /LIBPATH:$(LIBPREFIX)
-LIBS = wsock32.lib
+LIBS =
 
 # The archiver and its options.
 AR = lib.exe
 ARFLAGS = /nologo
 
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/libxslt.def.src b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/libxslt.def.src
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/libxslt.def.src
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/libxslt.def.src
@@ -42,10 +42,11 @@
 xsltCheckWrite
 xsltChoose
 xsltCleanupGlobals
 xsltCleanupTemplates
 xsltComment
+xsltCompMatchClearCache
 xsltCompileAttr
 xsltCompilePattern
 xsltComputeSortResult
 xsltCopy
 xsltCopyNamespace
@@ -174,10 +175,11 @@
 xsltParseStylesheetImportedDoc
 xsltParseStylesheetInclude
 xsltParseStylesheetOutput
 xsltParseStylesheetParam
 xsltParseStylesheetProcess
+xsltParseStylesheetUser
 xsltParseStylesheetVariable
 xsltParseTemplateContent
 xsltPointerListAddSize
 xsltPointerListClear
 xsltPointerListCreate
diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/xsltConf.sh.in b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/xsltConf.sh.in
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/xsltConf.sh.in
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/xsltConf.sh.in
@@ -1,7 +1,8 @@
 #
 # Configuration file for using the xslt library
 #
 XSLT_LIBDIR="@XSLT_LIBDIR@"
 XSLT_LIBS="@XSLT_LIBS@"
+XSLT_PRIVATE_LIBS="@XSLT_PRIVATE_LIBS@"
 XSLT_INCLUDEDIR="@XSLT_INCLUDEDIR@"
 MODULE_VERSION="xslt-@VERSION@"
