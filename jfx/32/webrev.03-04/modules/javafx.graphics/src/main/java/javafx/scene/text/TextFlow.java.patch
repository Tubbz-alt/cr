diff a/modules/javafx.graphics/src/main/java/javafx/scene/text/TextFlow.java b/modules/javafx.graphics/src/main/java/javafx/scene/text/TextFlow.java
--- a/modules/javafx.graphics/src/main/java/javafx/scene/text/TextFlow.java
+++ b/modules/javafx.graphics/src/main/java/javafx/scene/text/TextFlow.java
@@ -488,27 +488,20 @@
         return lineSpacing;
     }
 
     /**
      * The size of a tab stop in spaces.
-     * Values less than 1 are treated as 1.
+     * Values less than 1 are treated as 1. This value overrides the
+     * {@code tabSize} of contained {@link javafx.scene.text.Text Text} nodes.
      *
      * @defaultValue {@code 8}
      *
      * @since 14
      */
     private IntegerProperty tabSize;
 
-    public final int getTabSize() {
-        return tabSize == null ? TextLayout.DEFAULT_TAB_SIZE : tabSize.get();
-    }
-
-    public final void setTabSize(int spaces) {
-        tabSizeProperty().set(spaces);
-    }
-
-    final IntegerProperty tabSizeProperty() {
+    public final IntegerProperty tabSizeProperty() {
         if (tabSize == null) {
             tabSize = new StyleableIntegerProperty(TextLayout.DEFAULT_TAB_SIZE) {
                 @Override public Object getBean() { return TextFlow.this; }
                 @Override public String getName() { return "tabSize"; }
                 @Override public CssMetaData getCssMetaData() {
@@ -523,10 +516,18 @@
             };
         }
         return tabSize;
     }
 
+    public final int getTabSize() {
+        return tabSize == null ? TextLayout.DEFAULT_TAB_SIZE : tabSize.get();
+    }
+
+    public final void setTabSize(int spaces) {
+        tabSizeProperty().set(spaces);
+    }
+
     @Override public final double getBaselineOffset() {
         Insets insets = getInsets();
         double top = snapSpaceY(insets.getTop());
         return top - getTextLayout().getBounds().getMinY();
     }
