diff a/modules/javafx.graphics/src/main/java/javafx/scene/text/TextFlow.java b/modules/javafx.graphics/src/main/java/javafx/scene/text/TextFlow.java
--- a/modules/javafx.graphics/src/main/java/javafx/scene/text/TextFlow.java
+++ b/modules/javafx.graphics/src/main/java/javafx/scene/text/TextFlow.java
@@ -485,36 +485,25 @@
                 }
             };
         }
         return lineSpacing;
     }
+
     /**
      * The size of a tab stop in spaces.
-     *
-     * @return the {@code tabSize} property
+     * Values less than 1 are treated as 1.
      *
      * @defaultValue {@code 8}
      *
      * @since 14
      */
     private IntegerProperty tabSize;
 
-    /**
-     * Gets the size of a tab stop in spaces.
-     * @return the size of a tab in spaces
-     * @since 14
-     */
     public final int getTabSize() {
         return tabSize == null ? TextLayout.DEFAULT_TAB_SIZE : tabSize.get();
     }
 
-    /**
-     * Sets the size of a tab stop.
-     * @param spaces the size of a tab in spaces. Defaults to 8.
-     * Minimum is 1, lower values will be clamped to 1.
-     * @since 14
-    */
     public final void setTabSize(int spaces) {
         tabSizeProperty().set(spaces);
     }
 
     final IntegerProperty tabSizeProperty() {
@@ -523,11 +512,10 @@
                 @Override public Object getBean() { return TextFlow.this; }
                 @Override public String getName() { return "tabSize"; }
                 @Override public CssMetaData getCssMetaData() {
                     return StyleableProperties.TAB_SIZE;
                 }
-                @Override public void set(int v) { super.set((v < 1) ? 1 : v); }
                 @Override protected void invalidated() {
                     TextLayout layout = getTextLayout();
                     if (layout.setTabSize(get())) {
                         requestLayout();
                     }
