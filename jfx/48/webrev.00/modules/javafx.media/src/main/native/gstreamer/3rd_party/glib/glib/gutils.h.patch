diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gutils.h b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gutils.h
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gutils.h
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gutils.h
@@ -54,11 +54,11 @@
 GLIB_AVAILABLE_IN_ALL
 const gchar *         g_get_home_dir         (void);
 GLIB_AVAILABLE_IN_ALL
 const gchar *         g_get_tmp_dir          (void);
 GLIB_AVAILABLE_IN_ALL
-const gchar *         g_get_host_name        (void);
+const gchar *         g_get_host_name      (void);
 GLIB_AVAILABLE_IN_ALL
 const gchar *         g_get_prgname          (void);
 GLIB_AVAILABLE_IN_ALL
 void                  g_set_prgname          (const gchar *prgname);
 GLIB_AVAILABLE_IN_ALL
@@ -76,11 +76,11 @@
 const gchar *         g_get_user_cache_dir     (void);
 GLIB_AVAILABLE_IN_ALL
 const gchar * const * g_get_system_data_dirs   (void);
 
 #ifdef G_OS_WIN32
-/* This functions is not part of the public GLib API */
+/* This function is not part of the public GLib API */
 GLIB_AVAILABLE_IN_ALL
 const gchar * const * g_win32_get_system_data_dirs_for_module (void (*address_of_function)(void));
 #endif
 
 #if defined (G_OS_WIN32) && defined (G_CAN_INLINE)
@@ -157,24 +157,24 @@
 
 /* Miscellaneous utility functions
  */
 GLIB_AVAILABLE_IN_ALL
 guint                 g_parse_debug_string (const gchar     *string,
-                        const GDebugKey *keys,
-                        guint            nkeys);
+              const GDebugKey *keys,
+              guint            nkeys);
 
 GLIB_AVAILABLE_IN_ALL
 gint                  g_snprintf           (gchar       *string,
-                        gulong       n,
-                        gchar const *format,
-                        ...) G_GNUC_PRINTF (3, 4);
+              gulong       n,
+              gchar const *format,
+              ...) G_GNUC_PRINTF (3, 4);
 GLIB_AVAILABLE_IN_ALL
 gint                  g_vsnprintf          (gchar       *string,
-                        gulong       n,
-                        gchar const *format,
-                        va_list      args)
-                        G_GNUC_PRINTF(3, 0);
+              gulong       n,
+              gchar const *format,
+              va_list      args)
+              G_GNUC_PRINTF(3, 0);
 
 GLIB_AVAILABLE_IN_ALL
 void                  g_nullify_pointer    (gpointer    *nullify_location);
 
 typedef enum
@@ -192,22 +192,28 @@
 gchar *g_format_size        (guint64          size);
 
 GLIB_DEPRECATED_IN_2_30_FOR(g_format_size)
 gchar *g_format_size_for_display (goffset size);
 
-#ifndef G_DISABLE_DEPRECATED
+#define g_ATEXIT(proc)  (atexit (proc)) GLIB_DEPRECATED_MACRO_IN_2_32
+#define g_memmove(dest,src,len) \
+  G_STMT_START { memmove ((dest), (src), (len)); } G_STMT_END  GLIB_DEPRECATED_MACRO_IN_2_40_FOR(memmove)
+
 /**
  * GVoidFunc:
  *
  * Declares a type of function which takes no arguments
  * and has no return value. It is used to specify the type
  * function passed to g_atexit().
  */
-typedef void (*GVoidFunc) (void);
-#define ATEXIT(proc) g_ATEXIT(proc)
+typedef void (*GVoidFunc) (void) GLIB_DEPRECATED_TYPE_IN_2_32;
+#define ATEXIT(proc) g_ATEXIT(proc) GLIB_DEPRECATED_MACRO_IN_2_32
+
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
 GLIB_DEPRECATED
-void    g_atexit        (GVoidFunc    func);
+void  g_atexit    (GVoidFunc    func);
+G_GNUC_END_IGNORE_DEPRECATIONS
 
 #ifdef G_OS_WIN32
 /* It's a bad idea to wrap atexit() on Windows. If the GLib DLL calls
  * atexit(), the function will be called when the GLib DLL is detached
  * from the program, which is not what the caller wants. The caller
@@ -215,13 +221,11 @@
  * detached, in case the caller, too, is a DLL).
  */
 #if (defined(__MINGW_H) && !defined(_STDLIB_H_)) || (defined(_MSC_VER) && !defined(_INC_STDLIB))
 int atexit (void (*)(void));
 #endif
-#define g_atexit(func) atexit(func)
-#endif
-
+#define g_atexit(func) atexit(func) GLIB_DEPRECATED_MACRO_IN_2_32
 #endif
 
 
 /* Look for an executable in PATH, following execvp() rules */
 GLIB_AVAILABLE_IN_ALL
@@ -309,12 +313,10 @@
 GLIB_AVAILABLE_IN_2_50
 void g_abort (void) G_GNUC_NORETURN G_ANALYZER_NORETURN;
 #endif
 #endif
 
-#ifndef G_DISABLE_DEPRECATED
-
 /*
  * This macro is deprecated. This DllMain() is too complex. It is
  * recommended to write an explicit minimal DLlMain() that just saves
  * the handle to the DLL and then use that handle instead, for
  * instance passing it to
@@ -329,37 +331,34 @@
  *
  * On non-Windows platforms, expands to nothing.
  */
 
 #ifndef G_PLATFORM_WIN32
-# define G_WIN32_DLLMAIN_FOR_DLL_NAME(static, dll_name)
+# define G_WIN32_DLLMAIN_FOR_DLL_NAME(static, dll_name) GLIB_DEPRECATED_MACRO_IN_2_26
 #else
-# define G_WIN32_DLLMAIN_FOR_DLL_NAME(static, dll_name)         \
-static char *dll_name;                          \
-                                    \
-BOOL WINAPI                             \
-DllMain (HINSTANCE hinstDLL,                        \
-     DWORD     fdwReason,                       \
-     LPVOID    lpvReserved)                     \
-{                                   \
-  wchar_t wcbfr[1000];                          \
-  char *tem;                                \
-  switch (fdwReason)                            \
-    {                                   \
-    case DLL_PROCESS_ATTACH:                        \
+# define G_WIN32_DLLMAIN_FOR_DLL_NAME(static, dll_name)     \
+static char *dll_name;              \
+                  \
+BOOL WINAPI               \
+DllMain (HINSTANCE hinstDLL,            \
+   DWORD     fdwReason,           \
+   LPVOID    lpvReserved)           \
+{                 \
+  wchar_t wcbfr[1000];              \
+  char *tem;                \
+  switch (fdwReason)              \
+    {                 \
+    case DLL_PROCESS_ATTACH:            \
       GetModuleFileNameW ((HMODULE) hinstDLL, wcbfr, G_N_ELEMENTS (wcbfr)); \
-      tem = g_utf16_to_utf8 (wcbfr, -1, NULL, NULL, NULL);      \
-      dll_name = g_path_get_basename (tem);             \
-      g_free (tem);                         \
-      break;                                \
-    }                                   \
-                                    \
-  return TRUE;                              \
-}
-
-#endif  /* !G_DISABLE_DEPRECATED */
-
+      tem = g_utf16_to_utf8 (wcbfr, -1, NULL, NULL, NULL);    \
+      dll_name = g_path_get_basename (tem);       \
+      g_free (tem);             \
+      break;                \
+    }                 \
+                  \
+  return TRUE;                \
+} GLIB_DEPRECATED_MACRO_IN_2_26
 #endif /* G_PLATFORM_WIN32 */
 
 G_END_DECLS
 
 #endif /* __G_UTILS_H__ */
