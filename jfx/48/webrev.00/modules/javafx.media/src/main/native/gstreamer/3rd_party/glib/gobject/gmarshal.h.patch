diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gmarshal.h b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gmarshal.h
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gmarshal.h
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gmarshal.h
@@ -1,12 +1,27 @@
-/* Note: This file is no longer generated.  See the comment in gmarshal.list */
+/* GObject - GLib Type, Object, Parameter and Signal Library
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General
+ * Public License along with this library; if not, see <http://www.gnu.org/licenses/>.
+ */
+
 #ifndef __G_MARSHAL_H__
 #define __G_MARSHAL_H__
 
 G_BEGIN_DECLS
 
-/* VOID:VOID (./gmarshal.list:6) */
+/* VOID:VOID */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__VOID (GClosure     *closure,
                                     GValue       *return_value,
                                     guint         n_param_values,
                                     const GValue *param_values,
@@ -19,11 +34,11 @@
                                      va_list   args,
                                      gpointer  marshal_data,
                                      int       n_params,
                                      GType    *param_types);
 
-/* VOID:BOOLEAN (./gmarshal.list:7) */
+/* VOID:BOOLEAN */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__BOOLEAN (GClosure     *closure,
                                        GValue       *return_value,
                                        guint         n_param_values,
                                        const GValue *param_values,
@@ -36,11 +51,11 @@
                                         va_list   args,
                                         gpointer  marshal_data,
                                         int       n_params,
                                         GType    *param_types);
 
-/* VOID:CHAR (./gmarshal.list:8) */
+/* VOID:CHAR */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__CHAR (GClosure     *closure,
                                     GValue       *return_value,
                                     guint         n_param_values,
                                     const GValue *param_values,
@@ -53,11 +68,11 @@
                                      va_list   args,
                                      gpointer  marshal_data,
                                      int       n_params,
                                      GType    *param_types);
 
-/* VOID:UCHAR (./gmarshal.list:9) */
+/* VOID:UCHAR */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__UCHAR (GClosure     *closure,
                                      GValue       *return_value,
                                      guint         n_param_values,
                                      const GValue *param_values,
@@ -70,11 +85,11 @@
                                       va_list   args,
                                       gpointer  marshal_data,
                                       int       n_params,
                                       GType    *param_types);
 
-/* VOID:INT (./gmarshal.list:10) */
+/* VOID:INT */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__INT (GClosure     *closure,
                                    GValue       *return_value,
                                    guint         n_param_values,
                                    const GValue *param_values,
@@ -87,11 +102,11 @@
                                     va_list   args,
                                     gpointer  marshal_data,
                                     int       n_params,
                                     GType    *param_types);
 
-/* VOID:UINT (./gmarshal.list:11) */
+/* VOID:UINT */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__UINT (GClosure     *closure,
                                     GValue       *return_value,
                                     guint         n_param_values,
                                     const GValue *param_values,
@@ -104,11 +119,11 @@
                                      va_list   args,
                                      gpointer  marshal_data,
                                      int       n_params,
                                      GType    *param_types);
 
-/* VOID:LONG (./gmarshal.list:12) */
+/* VOID:LONG */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__LONG (GClosure     *closure,
                                     GValue       *return_value,
                                     guint         n_param_values,
                                     const GValue *param_values,
@@ -121,11 +136,11 @@
                                      va_list   args,
                                      gpointer  marshal_data,
                                      int       n_params,
                                      GType    *param_types);
 
-/* VOID:ULONG (./gmarshal.list:13) */
+/* VOID:ULONG */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__ULONG (GClosure     *closure,
                                      GValue       *return_value,
                                      guint         n_param_values,
                                      const GValue *param_values,
@@ -138,11 +153,11 @@
                                       va_list   args,
                                       gpointer  marshal_data,
                                       int       n_params,
                                       GType    *param_types);
 
-/* VOID:ENUM (./gmarshal.list:14) */
+/* VOID:ENUM */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__ENUM (GClosure     *closure,
                                     GValue       *return_value,
                                     guint         n_param_values,
                                     const GValue *param_values,
@@ -155,11 +170,11 @@
                                      va_list   args,
                                      gpointer  marshal_data,
                                      int       n_params,
                                      GType    *param_types);
 
-/* VOID:FLAGS (./gmarshal.list:15) */
+/* VOID:FLAGS */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__FLAGS (GClosure     *closure,
                                      GValue       *return_value,
                                      guint         n_param_values,
                                      const GValue *param_values,
@@ -172,11 +187,11 @@
                                       va_list   args,
                                       gpointer  marshal_data,
                                       int       n_params,
                                       GType    *param_types);
 
-/* VOID:FLOAT (./gmarshal.list:16) */
+/* VOID:FLOAT */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__FLOAT (GClosure     *closure,
                                      GValue       *return_value,
                                      guint         n_param_values,
                                      const GValue *param_values,
@@ -189,11 +204,11 @@
                                       va_list   args,
                                       gpointer  marshal_data,
                                       int       n_params,
                                       GType    *param_types);
 
-/* VOID:DOUBLE (./gmarshal.list:17) */
+/* VOID:DOUBLE */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__DOUBLE (GClosure     *closure,
                                       GValue       *return_value,
                                       guint         n_param_values,
                                       const GValue *param_values,
@@ -206,11 +221,11 @@
                                        va_list   args,
                                        gpointer  marshal_data,
                                        int       n_params,
                                        GType    *param_types);
 
-/* VOID:STRING (./gmarshal.list:18) */
+/* VOID:STRING */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__STRING (GClosure     *closure,
                                       GValue       *return_value,
                                       guint         n_param_values,
                                       const GValue *param_values,
@@ -223,11 +238,11 @@
                                        va_list   args,
                                        gpointer  marshal_data,
                                        int       n_params,
                                        GType    *param_types);
 
-/* VOID:PARAM (./gmarshal.list:19) */
+/* VOID:PARAM */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__PARAM (GClosure     *closure,
                                      GValue       *return_value,
                                      guint         n_param_values,
                                      const GValue *param_values,
@@ -240,11 +255,11 @@
                                       va_list   args,
                                       gpointer  marshal_data,
                                       int       n_params,
                                       GType    *param_types);
 
-/* VOID:BOXED (./gmarshal.list:20) */
+/* VOID:BOXED */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__BOXED (GClosure     *closure,
                                      GValue       *return_value,
                                      guint         n_param_values,
                                      const GValue *param_values,
@@ -257,11 +272,11 @@
                                       va_list   args,
                                       gpointer  marshal_data,
                                       int       n_params,
                                       GType    *param_types);
 
-/* VOID:POINTER (./gmarshal.list:21) */
+/* VOID:POINTER */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__POINTER (GClosure     *closure,
                                        GValue       *return_value,
                                        guint         n_param_values,
                                        const GValue *param_values,
@@ -274,11 +289,11 @@
                                         va_list   args,
                                         gpointer  marshal_data,
                                         int       n_params,
                                         GType    *param_types);
 
-/* VOID:OBJECT (./gmarshal.list:22) */
+/* VOID:OBJECT */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__OBJECT (GClosure     *closure,
                                       GValue       *return_value,
                                       guint         n_param_values,
                                       const GValue *param_values,
@@ -291,11 +306,11 @@
                                        va_list   args,
                                        gpointer  marshal_data,
                                        int       n_params,
                                        GType    *param_types);
 
-/* VOID:VARIANT (./gmarshal.list:23) */
+/* VOID:VARIANT */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__VARIANT (GClosure     *closure,
                                        GValue       *return_value,
                                        guint         n_param_values,
                                        const GValue *param_values,
@@ -308,11 +323,11 @@
                                         va_list   args,
                                         gpointer  marshal_data,
                                         int       n_params,
                                         GType    *param_types);
 
-/* VOID:UINT,POINTER (./gmarshal.list:26) */
+/* VOID:UINT,POINTER */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_VOID__UINT_POINTER (GClosure     *closure,
                                             GValue       *return_value,
                                             guint         n_param_values,
                                             const GValue *param_values,
@@ -325,11 +340,11 @@
                                              va_list   args,
                                              gpointer  marshal_data,
                                              int       n_params,
                                              GType    *param_types);
 
-/* BOOL:FLAGS (./gmarshal.list:27) */
+/* BOOL:FLAGS */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_BOOLEAN__FLAGS (GClosure     *closure,
                                         GValue       *return_value,
                                         guint         n_param_values,
                                         const GValue *param_values,
@@ -341,13 +356,30 @@
                                          gpointer  instance,
                                          va_list   args,
                                          gpointer  marshal_data,
                                          int       n_params,
                                          GType    *param_types);
+
+/**
+ * g_cclosure_marshal_BOOL__FLAGS:
+ * @closure: A #GClosure.
+ * @return_value: A #GValue to store the return value. May be %NULL
+ *   if the callback of closure doesn't return a value.
+ * @n_param_values: The length of the @param_values array.
+ * @param_values: An array of #GValues holding the arguments
+ *   on which to invoke the callback of closure.
+ * @invocation_hint: The invocation hint given as the last argument to
+ *   g_closure_invoke().
+ * @marshal_data: Additional data specified when registering the
+ *   marshaller, see g_closure_set_marshal() and
+ *   g_closure_set_meta_marshal()
+ *
+ * An old alias for g_cclosure_marshal_BOOLEAN__FLAGS().
+ */
 #define g_cclosure_marshal_BOOL__FLAGS  g_cclosure_marshal_BOOLEAN__FLAGS
 
-/* STRING:OBJECT,POINTER (./gmarshal.list:28) */
+/* STRING:OBJECT,POINTER */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_STRING__OBJECT_POINTER (GClosure     *closure,
                                                 GValue       *return_value,
                                                 guint         n_param_values,
                                                 const GValue *param_values,
@@ -360,11 +392,11 @@
                                                  va_list   args,
                                                  gpointer  marshal_data,
                                                  int       n_params,
                                                  GType    *param_types);
 
-/* BOOL:BOXED,BOXED (./gmarshal.list:29) */
+/* BOOL:BOXED,BOXED */
 GLIB_AVAILABLE_IN_ALL
 void g_cclosure_marshal_BOOLEAN__BOXED_BOXED (GClosure     *closure,
                                               GValue       *return_value,
                                               guint         n_param_values,
                                               const GValue *param_values,
@@ -376,10 +408,27 @@
                                                gpointer  instance,
                                                va_list   args,
                                                gpointer  marshal_data,
                                                int       n_params,
                                                GType    *param_types);
-#define g_cclosure_marshal_BOOL__BOXED_BOXED    g_cclosure_marshal_BOOLEAN__BOXED_BOXED
+
+/**
+ * g_cclosure_marshal_BOOL__BOXED_BOXED:
+ * @closure: A #GClosure.
+ * @return_value: A #GValue to store the return value. May be %NULL
+ *   if the callback of closure doesn't return a value.
+ * @n_param_values: The length of the @param_values array.
+ * @param_values: An array of #GValues holding the arguments
+ *   on which to invoke the callback of closure.
+ * @invocation_hint: The invocation hint given as the last argument to
+ *   g_closure_invoke().
+ * @marshal_data: Additional data specified when registering the
+ *   marshaller, see g_closure_set_marshal() and
+ *   g_closure_set_meta_marshal()
+ *
+ * An old alias for g_cclosure_marshal_BOOLEAN__BOXED_BOXED().
+ */
+#define g_cclosure_marshal_BOOL__BOXED_BOXED  g_cclosure_marshal_BOOLEAN__BOXED_BOXED
 
 G_END_DECLS
 
 #endif /* __G_MARSHAL_H__ */
