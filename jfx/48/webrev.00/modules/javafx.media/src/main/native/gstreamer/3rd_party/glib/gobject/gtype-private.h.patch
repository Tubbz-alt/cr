diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gtype-private.h b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gtype-private.h
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gtype-private.h
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gtype-private.h
@@ -42,11 +42,13 @@
 #define GOBJECT_IF_DEBUG(debug_type, code_block)
 #endif  /* G_ENABLE_DEBUG */
 
 G_BEGIN_DECLS
 
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
 extern GTypeDebugFlags _g_type_debug_flags;
+G_GNUC_END_IGNORE_DEPRECATIONS
 
 typedef struct _GRealClosure  GRealClosure;
 struct _GRealClosure
 {
   GClosureMarshal meta_marshal;
@@ -77,20 +79,20 @@
 void            _g_type_boxed_init      (GType          type,
                                          GBoxedCopyFunc copy_func,
                                          GBoxedFreeFunc free_func);
 
 gboolean    _g_closure_is_void (GClosure       *closure,
-                gpointer        instance);
+        gpointer        instance);
 gboolean    _g_closure_supports_invoke_va (GClosure       *closure);
 void        _g_closure_set_va_marshal (GClosure       *closure,
-                       GVaClosureMarshal marshal);
+               GVaClosureMarshal marshal);
 void        _g_closure_invoke_va (GClosure       *closure,
-                  GValue /*out*/ *return_value,
-                  gpointer        instance,
-                  va_list         args,
-                  int             n_params,
-                  GType          *param_types);
+          GValue /*out*/ *return_value,
+          gpointer        instance,
+          va_list         args,
+          int             n_params,
+          GType          *param_types);
 
 /**
  * _G_DEFINE_TYPE_EXTENDED_WITH_PRELUDE:
  *
  * See also G_DEFINE_TYPE_EXTENDED().  This macro is generally only
@@ -98,10 +100,10 @@
  * object types that may be initialized in distinct threads.  See:
  * https://bugzilla.gnome.org/show_bug.cgi?id=674885
  *
  * Currently private.
  */
-#define _G_DEFINE_TYPE_EXTENDED_WITH_PRELUDE(TN, t_n, T_P, _f_, _P_, _C_)       _G_DEFINE_TYPE_EXTENDED_BEGIN_PRE (TN, t_n, T_P) {_P_;} _G_DEFINE_TYPE_EXTENDED_BEGIN_REGISTER (TN, t_n, T_P, _f_){_C_;} _G_DEFINE_TYPE_EXTENDED_END()
+#define _G_DEFINE_TYPE_EXTENDED_WITH_PRELUDE(TN, t_n, T_P, _f_, _P_, _C_)     _G_DEFINE_TYPE_EXTENDED_BEGIN_PRE (TN, t_n, T_P) {_P_;} _G_DEFINE_TYPE_EXTENDED_BEGIN_REGISTER (TN, t_n, T_P, _f_){_C_;} _G_DEFINE_TYPE_EXTENDED_END()
 
 G_END_DECLS
 
 #endif /* __G_TYPE_PRIVATE_H__ */
