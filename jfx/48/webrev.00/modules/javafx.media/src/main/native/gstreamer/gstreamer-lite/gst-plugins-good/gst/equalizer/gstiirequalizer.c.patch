diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/equalizer/gstiirequalizer.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/equalizer/gstiirequalizer.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/equalizer/gstiirequalizer.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/equalizer/gstiirequalizer.c
@@ -340,11 +340,11 @@
     };
     type =
         g_type_register_static (GST_TYPE_OBJECT, "GstIirEqualizerBand",
         &type_info, 0);
 #ifdef GSTREAMER_LITE
-     }
+  }
      G_UNLOCK(type_init_mutex);
 #endif // GSTREAMER_LITE
   }
   return (type);
 }
@@ -911,24 +911,24 @@
 {
   GstIirEqualizer *equ = GST_IIR_EQUALIZER (audio);
 
   switch (GST_AUDIO_INFO_FORMAT (info)) {
     case GST_AUDIO_FORMAT_S16:
-          equ->history_size = history_size_gint16;
-          equ->process = gst_iir_equ_process_gint16;
-          break;
+      equ->history_size = history_size_gint16;
+      equ->process = gst_iir_equ_process_gint16;
+      break;
     case GST_AUDIO_FORMAT_F32:
-          equ->history_size = history_size_gfloat;
-          equ->process = gst_iir_equ_process_gfloat;
-          break;
+      equ->history_size = history_size_gfloat;
+      equ->process = gst_iir_equ_process_gfloat;
+      break;
     case GST_AUDIO_FORMAT_F64:
-          equ->history_size = history_size_gdouble;
-          equ->process = gst_iir_equ_process_gdouble;
-          break;
-        default:
-          return FALSE;
-      }
+      equ->history_size = history_size_gdouble;
+      equ->process = gst_iir_equ_process_gdouble;
+      break;
+    default:
+      return FALSE;
+  }
 
   alloc_history (equ, info);
   return TRUE;
 }
 
