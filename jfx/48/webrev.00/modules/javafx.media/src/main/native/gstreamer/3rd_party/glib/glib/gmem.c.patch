diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gmem.c b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gmem.c
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gmem.c
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gmem.c
@@ -97,11 +97,11 @@
       gpointer mem;
 
       mem = malloc (n_bytes);
       TRACE (GLIB_MEM_ALLOC((void*) mem, (unsigned int) n_bytes, 0, 0));
       if (mem)
-    return mem;
+  return mem;
 
       g_error ("%s: failed to allocate %"G_GSIZE_FORMAT" bytes",
                G_STRLOC, n_bytes);
     }
 
@@ -127,11 +127,11 @@
       gpointer mem;
 
       mem = calloc (1, n_bytes);
       TRACE (GLIB_MEM_ALLOC((void*) mem, (unsigned int) n_bytes, 1, 0));
       if (mem)
-    return mem;
+  return mem;
 
       g_error ("%s: failed to allocate %"G_GSIZE_FORMAT" bytes",
                G_STRLOC, n_bytes);
     }
 
@@ -153,27 +153,26 @@
  *
  * Returns: the new address of the allocated memory
  */
 gpointer
 g_realloc (gpointer mem,
-       gsize    n_bytes)
+     gsize    n_bytes)
 {
   gpointer newmem;
 
   if (G_LIKELY (n_bytes))
     {
       newmem = realloc (mem, n_bytes);
       TRACE (GLIB_MEM_REALLOC((void*) newmem, (void*)mem, (unsigned int) n_bytes, 0));
       if (newmem)
-    return newmem;
+  return newmem;
 
       g_error ("%s: failed to allocate %"G_GSIZE_FORMAT" bytes",
                G_STRLOC, n_bytes);
     }
 
-  if (mem)
-    free (mem);
+  free (mem);
 
   TRACE (GLIB_MEM_REALLOC((void*) NULL, (void*)mem, 0, 0));
 
   return NULL;
 }
@@ -188,12 +187,11 @@
  * against %NULL before calling this function.
  */
 void
 g_free (gpointer mem)
 {
-  if (G_LIKELY (mem))
-    free (mem);
+  free (mem);
   TRACE(GLIB_MEM_FREE((void*) mem));
 }
 
 /**
  * g_clear_pointer: (skip)
@@ -293,21 +291,20 @@
  *
  * Returns: the allocated memory, or %NULL.
  */
 gpointer
 g_try_realloc (gpointer mem,
-           gsize    n_bytes)
+         gsize    n_bytes)
 {
   gpointer newmem;
 
   if (G_LIKELY (n_bytes))
     newmem = realloc (mem, n_bytes);
   else
     {
       newmem = NULL;
-      if (mem)
-    free (mem);
+      free (mem);
     }
 
   TRACE (GLIB_MEM_REALLOC((void*) newmem, (void*)mem, (unsigned int) n_bytes, 1));
 
   return newmem;
@@ -327,11 +324,11 @@
  * Since: 2.24
  * Returns: a pointer to the allocated memory
  */
 gpointer
 g_malloc_n (gsize n_blocks,
-        gsize n_block_bytes)
+      gsize n_block_bytes)
 {
   if (SIZE_OVERFLOWS (n_blocks, n_block_bytes))
     {
       g_error ("%s: overflow allocating %"G_GSIZE_FORMAT"*%"G_GSIZE_FORMAT" bytes",
                G_STRLOC, n_blocks, n_block_bytes);
@@ -351,11 +348,11 @@
  * Since: 2.24
  * Returns: a pointer to the allocated memory
  */
 gpointer
 g_malloc0_n (gsize n_blocks,
-         gsize n_block_bytes)
+       gsize n_block_bytes)
 {
   if (SIZE_OVERFLOWS (n_blocks, n_block_bytes))
     {
       g_error ("%s: overflow allocating %"G_GSIZE_FORMAT"*%"G_GSIZE_FORMAT" bytes",
                G_STRLOC, n_blocks, n_block_bytes);
@@ -376,12 +373,12 @@
  * Since: 2.24
  * Returns: the new address of the allocated memory
  */
 gpointer
 g_realloc_n (gpointer mem,
-         gsize    n_blocks,
-         gsize    n_block_bytes)
+       gsize    n_blocks,
+       gsize    n_block_bytes)
 {
   if (SIZE_OVERFLOWS (n_blocks, n_block_bytes))
     {
       g_error ("%s: overflow allocating %"G_GSIZE_FORMAT"*%"G_GSIZE_FORMAT" bytes",
                G_STRLOC, n_blocks, n_block_bytes);
@@ -401,11 +398,11 @@
  * Since: 2.24
  * Returns: the allocated memory, or %NULL.
  */
 gpointer
 g_try_malloc_n (gsize n_blocks,
-        gsize n_block_bytes)
+    gsize n_block_bytes)
 {
   if (SIZE_OVERFLOWS (n_blocks, n_block_bytes))
     return NULL;
 
   return g_try_malloc (n_blocks * n_block_bytes);
@@ -422,11 +419,11 @@
  * Since: 2.24
  * Returns: the allocated memory, or %NULL
  */
 gpointer
 g_try_malloc0_n (gsize n_blocks,
-         gsize n_block_bytes)
+     gsize n_block_bytes)
 {
   if (SIZE_OVERFLOWS (n_blocks, n_block_bytes))
     return NULL;
 
   return g_try_malloc0 (n_blocks * n_block_bytes);
@@ -444,12 +441,12 @@
  * Since: 2.24
  * Returns: the allocated memory, or %NULL.
  */
 gpointer
 g_try_realloc_n (gpointer mem,
-         gsize    n_blocks,
-         gsize    n_block_bytes)
+     gsize    n_blocks,
+     gsize    n_block_bytes)
 {
   if (SIZE_OVERFLOWS (n_blocks, n_block_bytes))
     return NULL;
 
   return g_try_realloc (mem, n_blocks * n_block_bytes);
@@ -489,11 +486,11 @@
  */
 void
 g_mem_set_vtable (GMemVTable *vtable)
 {
   g_warning (G_STRLOC ": custom memory allocation vtable not supported");
-    }
+}
 
 
 /**
  * glib_mem_profiler_table:
  *
@@ -515,6 +512,6 @@
  */
 void
 g_mem_profile (void)
 {
   g_warning (G_STRLOC ": memory profiling not supported");
-    }
+}
