diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/grefcount.c b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/grefcount.c
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/grefcount.c
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/grefcount.c
@@ -94,11 +94,11 @@
   g_return_if_fail (rc != NULL);
 
   /* Non-atomic refcounting is implemented using the negative range
    * of signed integers:
    *
-   * G_MININT                 Z¯< 0 > Z⁺                G_MAXINT
+   * G_MININT                 Z-< 0 > Z+                G_MAXINT
    * |----------------------------|----------------------------|
    *
    * Acquiring a reference moves us towards MININT, and releasing a
    * reference moves us towards 0.
    */
@@ -197,11 +197,11 @@
 
 /**
  * g_atomic_ref_count_init:
  * @arc: the address of an atomic reference count variable
  *
- * Atomically initializes a reference count variable.
+ * Initializes a reference count variable.
  *
  * Since: 2.58
  */
 void
 (g_atomic_ref_count_init) (gatomicrefcount *arc)
@@ -209,17 +209,17 @@
   g_return_if_fail (arc != NULL);
 
   /* Atomic refcounting is implemented using the positive range
    * of signed integers:
    *
-   * G_MININT                 Z¯< 0 > Z⁺                G_MAXINT
+   * G_MININT                 Z-< 0 > Z+                G_MAXINT
    * |----------------------------|----------------------------|
    *
    * Acquiring a reference moves us towards MAXINT, and releasing a
    * reference moves us towards 0.
    */
-  g_atomic_int_set (arc, 1);
+  *arc = 1;
 }
 
 /**
  * g_atomic_ref_count_inc:
  * @arc: the address of an atomic reference count variable
