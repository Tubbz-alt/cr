diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/libs/gst/controller/gsttriggercontrolsource.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/libs/gst/controller/gsttriggercontrolsource.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/libs/gst/controller/gsttriggercontrolsource.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/libs/gst/controller/gsttriggercontrolsource.c
@@ -34,10 +34,13 @@
  * gst_trigger_control_source_new(), bind it to a #GParamSpec and set some
  * control points by calling gst_timed_value_control_source_set().
  *
  * All functions are MT-safe.
  */
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
 
 #include <glib-object.h>
 #include <gst/gst.h>
 
 #include "gsttriggercontrolsource.h"
@@ -174,11 +177,12 @@
 #define _do_init \
   GST_DEBUG_CATEGORY_INIT (GST_CAT_DEFAULT, "trigger control source", 0, \
     "timeline value trigger control source")
 
 G_DEFINE_TYPE_WITH_CODE (GstTriggerControlSource, gst_trigger_control_source,
-    GST_TYPE_TIMED_VALUE_CONTROL_SOURCE, _do_init);
+    GST_TYPE_TIMED_VALUE_CONTROL_SOURCE, G_ADD_PRIVATE (GstTriggerControlSource)
+    _do_init);
 
 /**
  * gst_trigger_control_source_new:
  *
  * This returns a new, unbound #GstTriggerControlSource.
@@ -200,13 +204,11 @@
 static void
 gst_trigger_control_source_init (GstTriggerControlSource * self)
 {
   GstControlSource *csource = (GstControlSource *) self;
 
-  self->priv =
-      G_TYPE_INSTANCE_GET_PRIVATE (self, GST_TYPE_TRIGGER_CONTROL_SOURCE,
-      GstTriggerControlSourcePrivate);
+  self->priv = gst_trigger_control_source_get_instance_private (self);
 
   csource->get_value = (GstControlSourceGetValue) interpolate_trigger_get;
   csource->get_value_array = (GstControlSourceGetValueArray)
       interpolate_trigger_get_value_array;
 }
@@ -248,12 +250,10 @@
 static void
 gst_trigger_control_source_class_init (GstTriggerControlSourceClass * klass)
 {
   GObjectClass *gobject_class = G_OBJECT_CLASS (klass);
 
-  g_type_class_add_private (klass, sizeof (GstTriggerControlSourcePrivate));
-
   gobject_class->set_property = gst_trigger_control_source_set_property;
   gobject_class->get_property = gst_trigger_control_source_get_property;
 
   g_object_class_install_property (gobject_class, PROP_TOLERANCE,
       g_param_spec_int64 ("tolerance", "Tolerance",
