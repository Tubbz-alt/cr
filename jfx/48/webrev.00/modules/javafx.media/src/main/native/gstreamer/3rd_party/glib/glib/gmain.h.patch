diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gmain.h b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gmain.h
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gmain.h
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gmain.h
@@ -28,11 +28,11 @@
 
 G_BEGIN_DECLS
 
 typedef enum /*< flags >*/
 {
-  G_IO_IN   GLIB_SYSDEF_POLLIN,
+  G_IO_IN GLIB_SYSDEF_POLLIN,
   G_IO_OUT  GLIB_SYSDEF_POLLOUT,
   G_IO_PRI  GLIB_SYSDEF_POLLPRI,
   G_IO_ERR  GLIB_SYSDEF_POLLERR,
   G_IO_HUP  GLIB_SYSDEF_POLLHUP,
   G_IO_NVAL GLIB_SYSDEF_POLLNVAL
@@ -390,13 +390,13 @@
                                   gint         *timeout_,
                                   GPollFD      *fds,
                                   gint          n_fds);
 GLIB_AVAILABLE_IN_ALL
 gboolean     g_main_context_check    (GMainContext *context,
-                                  gint          max_priority,
-                                  GPollFD      *fds,
-                                  gint          n_fds);
+                                      gint          max_priority,
+                                      GPollFD      *fds,
+                                      gint          n_fds);
 GLIB_AVAILABLE_IN_ALL
 void     g_main_context_dispatch (GMainContext *context);
 
 GLIB_AVAILABLE_IN_ALL
 void     g_main_context_set_poll_func (GMainContext *context,
@@ -530,25 +530,27 @@
                                      gpointer              callback_data,
                                      GSourceCallbackFuncs *callback_funcs);
 
 GLIB_AVAILABLE_IN_ALL
 void     g_source_add_poll            (GSource        *source,
-                       GPollFD        *fd);
+               GPollFD        *fd);
 GLIB_AVAILABLE_IN_ALL
 void     g_source_remove_poll         (GSource        *source,
-                       GPollFD        *fd);
+               GPollFD        *fd);
 
 GLIB_AVAILABLE_IN_ALL
 void     g_source_add_child_source    (GSource        *source,
-                       GSource        *child_source);
+               GSource        *child_source);
 GLIB_AVAILABLE_IN_ALL
 void     g_source_remove_child_source (GSource        *source,
-                       GSource        *child_source);
+               GSource        *child_source);
 
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
 GLIB_DEPRECATED_IN_2_28_FOR(g_source_get_time)
 void     g_source_get_current_time (GSource        *source,
                                     GTimeVal       *timeval);
+G_GNUC_END_IGNORE_DEPRECATIONS
 
 GLIB_AVAILABLE_IN_ALL
 gint64   g_source_get_time         (GSource        *source);
 
  /* void g_source_connect_closure (GSource        *source,
@@ -568,12 +570,15 @@
 GSource *g_timeout_source_new_seconds (guint interval);
 #endif // GSTREAMER_LITE
 
 /* Miscellaneous functions
  */
-GLIB_AVAILABLE_IN_ALL
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
+GLIB_DEPRECATED_IN_2_62_FOR(g_get_real_time)
 void   g_get_current_time                 (GTimeVal       *result);
+G_GNUC_END_IGNORE_DEPRECATIONS
+
 GLIB_AVAILABLE_IN_ALL
 gint64 g_get_monotonic_time               (void);
 GLIB_AVAILABLE_IN_ALL
 gint64 g_get_real_time                    (void);
 
@@ -614,11 +619,12 @@
     if (_handle_id > 0)                                    \
       {                                                    \
         *_tag_ptr = 0;                                     \
         clear_func (_handle_id);                           \
       }                                                    \
-  } G_STMT_END
+  } G_STMT_END                                             \
+  GLIB_AVAILABLE_MACRO_IN_2_56
 
 /* Idles, child watchers and timeouts */
 GLIB_AVAILABLE_IN_ALL
 guint    g_timeout_add_full         (gint            priority,
                                      guint           interval,
