diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/isomp4/properties.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/isomp4/properties.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/isomp4/properties.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/isomp4/properties.c
@@ -64,25 +64,25 @@
   }
   *offset += size;
   return size;
 }
 
-#define INT_ARRAY_COPY_FUNC_FAST(name, datatype)            \
-guint64 prop_copy_ ## name ## _array (datatype *prop, guint size,   \
-    guint8 ** buffer, guint64 * bsize, guint64 * offset) {      \
+#define INT_ARRAY_COPY_FUNC_FAST(name, datatype)      \
+guint64 prop_copy_ ## name ## _array (datatype *prop, guint size, \
+    guint8 ** buffer, guint64 * bsize, guint64 * offset) {    \
   return copy_func (prop, sizeof (datatype) * size, buffer, bsize, offset);\
 }
 
-#define INT_ARRAY_COPY_FUNC(name, datatype)                 \
-guint64 prop_copy_ ## name ## _array (datatype *prop, guint size,   \
-    guint8 ** buffer, guint64 * bsize, guint64 * offset) {      \
-  guint i;                              \
-                                    \
-  for (i = 0; i < size; i++) {                      \
-    prop_copy_ ## name (prop[i], buffer, bsize, offset);        \
-  }                                 \
-  return sizeof (datatype) * size;                  \
+#define INT_ARRAY_COPY_FUNC(name, datatype)         \
+guint64 prop_copy_ ## name ## _array (datatype *prop, guint size, \
+    guint8 ** buffer, guint64 * bsize, guint64 * offset) {    \
+  guint i;                \
+                  \
+  for (i = 0; i < size; i++) {            \
+    prop_copy_ ## name (prop[i], buffer, bsize, offset);    \
+  }                 \
+  return sizeof (datatype) * size;          \
 }
 
 /* INTEGERS */
 guint64
 prop_copy_uint8 (guint8 prop, guint8 ** buffer, guint64 * size,
