diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstsample.h b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstsample.h
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstsample.h
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstsample.h
@@ -77,10 +77,22 @@
 GstBufferList *      gst_sample_get_buffer_list (GstSample *sample);
 
 GST_API
 void                 gst_sample_set_buffer_list (GstSample *sample, GstBufferList *buffer_list);
 
+GST_API
+void                 gst_sample_set_buffer    (GstSample *sample, GstBuffer *buffer);
+
+GST_API
+void                 gst_sample_set_caps      (GstSample *sample, GstCaps *caps);
+
+GST_API
+void                 gst_sample_set_segment   (GstSample * sample, const GstSegment *segment);
+
+GST_API
+gboolean             gst_sample_set_info      (GstSample *sample, GstStructure *info);
+
 /* refcounting */
 /**
  * gst_sample_ref:
  * @sample: a #GstSample
  *
@@ -106,10 +118,49 @@
 gst_sample_unref (GstSample * sample)
 {
   gst_mini_object_unref (GST_MINI_OBJECT_CAST (sample));
 }
 
+/**
+ * gst_sample_is_writable:
+ * @sample: A #GstSample
+ *
+ * Tests if you can safely set the buffer and / or buffer list of @sample.
+ *
+ * Since: 1.16
+ */
+#define         gst_sample_is_writable(sample)     gst_mini_object_is_writable (GST_MINI_OBJECT_CAST (sample))
+
+/**
+ * gst_sample_make_writable:
+ * @sample: (transfer full): A #GstSample
+ *
+ * Returns a writable copy of @sample. If the source sample is
+ * already writable, this will simply return the same sample.
+ *
+ * Use this function to ensure that a sample can be safely modified before
+ * making changes to it, for example before calling gst_sample_set_buffer()
+ *
+ * If the reference count of the source sample @sample is exactly one, the caller
+ * is the sole owner and this function will return the sample object unchanged.
+ *
+ * If there is more than one reference on the object, a copy will be made using
+ * gst_sample_copy(). The passed-in @sample will be unreffed in that case, and the
+ * caller will now own a reference to the new returned sample object.
+ *
+ * In short, this function unrefs the sample in the argument and refs the sample
+ * that it returns. Don't access the argument after calling this function unless
+ * you have an additional reference to it.
+ *
+ * Returns: (transfer full): a writable sample which may or may not be the
+ *     same as @sample
+ *
+ * Since: 1.16
+ */
+#define         gst_sample_make_writable(sample)   GST_SAMPLE_CAST (gst_mini_object_make_writable (GST_MINI_OBJECT_CAST (sample)))
+
+
 /* copy sample */
 /**
  * gst_sample_copy:
  * @buf: a #GstSample.
  *
