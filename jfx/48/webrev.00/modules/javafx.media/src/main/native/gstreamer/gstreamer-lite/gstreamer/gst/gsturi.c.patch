diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gsturi.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gsturi.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gsturi.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gsturi.c
@@ -955,11 +955,11 @@
  * SECTION:gsturi
  * @title: GstUri
  * @short_description: URI parsing and manipulation.
  *
  * A #GstUri object can be used to parse and split a URI string into its
- * constituant parts. Two #GstUri objects can be joined to make a new #GstUri
+ * constituent parts. Two #GstUri objects can be joined to make a new #GstUri
  * using the algorithm described in RFC3986.
  */
 
 /* Definition for GstUri object */
 struct _GstUri
@@ -1012,10 +1012,14 @@
   g_list_free_full (uri->path, g_free);
   if (uri->query)
     g_hash_table_unref (uri->query);
   g_free (uri->fragment);
 
+#ifdef USE_POISONING
+  memset (uri, 0xff, sizeof (*uri));
+#endif
+
   g_slice_free1 (sizeof (*uri), uri);
 }
 
 static GHashTable *
 _gst_uri_copy_query_table (GHashTable * orig)
@@ -2241,12 +2245,12 @@
  * gst_uri_get_path:
  * @uri: The #GstUri to get the path from.
  *
  * Extract the path string from the URI object.
  *
- * Returns: (transfer full): (nullable): The path from the URI. Once finished
- *                                       with the string should be g_free()'d.
+ * Returns: (transfer full) (nullable): The path from the URI. Once finished
+ *                                      with the string should be g_free()'d.
  *
  * Since: 1.6
  */
 gchar *
 gst_uri_get_path (const GstUri * uri)
@@ -2594,11 +2598,11 @@
  *
  * Set the query table to use in the URI. The old table is unreferenced and a
  * reference to the new one is used instead. A value if %NULL for @query_table
  * will remove the query string from the URI.
  *
- * Returns: %TRUE if the new table was sucessfully used for the query table.
+ * Returns: %TRUE if the new table was successfully used for the query table.
  *
  * Since: 1.6
  */
 gboolean
 gst_uri_set_query_table (GstUri * uri, GHashTable * query_table)
@@ -2628,11 +2632,11 @@
  *
  * This inserts or replaces a key in the query table. A @query_value of %NULL
  * indicates that the key has no associated value, but will still be present in
  * the query string.
  *
- * Returns: %TRUE if the query table was sucessfully updated.
+ * Returns: %TRUE if the query table was successfully updated.
  *
  * Since: 1.6
  */
 gboolean
 gst_uri_set_query_value (GstUri * uri, const gchar * query_key,
@@ -2803,11 +2807,11 @@
  * @uri: (nullable): The #GstUri to get the fragment table from.
  *
  * Get the media fragment table from the URI, as defined by "Media Fragments URI 1.0".
  * Hash table returned by this API is a list of "key-value" pairs, and the each
  * pair is generated by splitting "URI fragment" per "&" sub-delims, then "key"
- * and "value" are splitted by "=" sub-delims. The "key" returned by this API may
+ * and "value" are split by "=" sub-delims. The "key" returned by this API may
  * be undefined keyword by standard.
  * A value may be %NULL to indicate that the key should appear in the fragment
  * string in the URI, but does not have a value. Free the returned #GHashTable
  * with #g_hash_table_unref() when it is no longer required.
  * Modifying this hash table does not affect the fragment in the URI.
