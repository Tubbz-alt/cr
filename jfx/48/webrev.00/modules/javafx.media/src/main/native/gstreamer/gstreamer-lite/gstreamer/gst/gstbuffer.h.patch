diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstbuffer.h b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstbuffer.h
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstbuffer.h
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstbuffer.h
@@ -210,17 +210,17 @@
  *                                 stream, for example to reduce bandwidth.
  * @GST_BUFFER_FLAG_DELTA_UNIT:    this unit cannot be decoded independently.
  * @GST_BUFFER_FLAG_TAG_MEMORY:    this flag is set when memory of the buffer
  *                                 is added/removed
  * @GST_BUFFER_FLAG_SYNC_AFTER:    Elements which write to disk or permanent
- *               storage should ensure the data is synced after
- *               writing the contents of this buffer. (Since 1.6)
+ *         storage should ensure the data is synced after
+ *         writing the contents of this buffer. (Since: 1.6)
  * @GST_BUFFER_FLAG_NON_DROPPABLE: This buffer is important and should not be dropped.
  *                                 This can be used to mark important buffers, e.g. to flag
  *                                 RTP packets carrying keyframes or codec setup data for RTP
  *                                 Forward Error Correction purposes, or to prevent still video
- *                                 frames from being dropped by elements due to QoS. (Since 1.14)
+ *                                 frames from being dropped by elements due to QoS. (Since: 1.14)
  * @GST_BUFFER_FLAG_LAST:          additional media specific flags can be added starting from
  *                                 this flag.
  *
  * A set of buffer flags used to describe properties of a #GstBuffer.
  */
@@ -299,10 +299,12 @@
 GstBuffer * gst_buffer_new_wrapped_full    (GstMemoryFlags flags, gpointer data, gsize maxsize,
                                             gsize offset, gsize size, gpointer user_data,
                                             GDestroyNotify notify);
 GST_API
 GstBuffer * gst_buffer_new_wrapped         (gpointer data, gsize size);
+GST_API
+GstBuffer * gst_buffer_new_wrapped_bytes   (GBytes * bytes);
 
 /* memory blocks */
 
 GST_API
 guint       gst_buffer_n_memory             (GstBuffer *buffer);
@@ -444,10 +446,29 @@
 gst_buffer_unref (GstBuffer * buf)
 {
   gst_mini_object_unref (GST_MINI_OBJECT_CAST (buf));
 }
 
+/**
+ * gst_clear_buffer: (skip)
+ * @buf_ptr: a pointer to a #GstBuffer reference
+ *
+ * Clears a reference to a #GstBuffer.
+ *
+ * @buf_ptr must not be %NULL.
+ *
+ * If the reference is %NULL then this function does nothing. Otherwise, the
+ * reference count of the buffer is decreased and the pointer is set to %NULL.
+ *
+ * Since: 1.16
+ */
+static inline void
+gst_clear_buffer (GstBuffer ** buf_ptr)
+{
+  gst_clear_mini_object ((GstMiniObject **) buf_ptr);
+}
+
 /* copy buffer */
 /**
  * gst_buffer_copy:
  * @buf: a #GstBuffer.
  *
@@ -481,11 +502,11 @@
  * @GST_BUFFER_COPY_MERGE: flag indicating that buffer memory should be
  *   merged
  * @GST_BUFFER_COPY_META: flag indicating that buffer meta should be
  *   copied
  * @GST_BUFFER_COPY_DEEP: flag indicating that memory should always be
- *   copied instead of reffed (Since 1.2)
+ *   copied instead of reffed (Since: 1.2)
  *
  * A set of flags that can be provided to the gst_buffer_copy_into()
  * function to specify which items should be copied.
  */
 typedef enum {
