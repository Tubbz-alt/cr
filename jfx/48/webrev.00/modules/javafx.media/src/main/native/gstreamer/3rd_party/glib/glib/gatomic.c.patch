diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gatomic.c b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gatomic.c
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gatomic.c
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gatomic.c
@@ -1,7 +1,7 @@
 /*
- * Copyright ï¿½ 2011 Ryan Lortie
+ * Copyright (C) 2011 Ryan Lortie
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
  * License as published by the Free Software Foundation; either
  * version 2.1 of the License, or (at your option) any later version.
@@ -88,11 +88,11 @@
  * without risking recursion.
  */
 
 #ifdef G_ATOMIC_LOCK_FREE
 
-/* if G_ATOMIC_LOCK_FREE was defined by ./configure then we MUST
+/* if G_ATOMIC_LOCK_FREE was defined by `meson configure` then we MUST
  * implement the atomic operations in a lock-free manner.
  */
 
 #if defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4)
 
@@ -667,11 +667,11 @@
   return InterlockedXor (atomic, val);
 #endif
 }
 #else
 
-/* This error occurs when ./configure decided that we should be capable
+/* This error occurs when `meson configure` decided that we should be capable
  * of lock-free atomics but we find at compile-time that we are not.
  */
 #error G_ATOMIC_LOCK_FREE defined, but incapable of lock-free atomics.
 
 #endif /* defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4) */
