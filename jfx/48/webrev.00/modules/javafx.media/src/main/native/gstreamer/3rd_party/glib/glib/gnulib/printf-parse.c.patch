diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gnulib/printf-parse.c b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gnulib/printf-parse.c
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gnulib/printf-parse.c
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gnulib/printf-parse.c
@@ -1,7 +1,7 @@
 /* Formatted output to strings.
-   Copyright (C) 1999-2000, 2002-2003, 2006-2016 Free Software Foundation, Inc.
+   Copyright (C) 1999-2000, 2002-2003, 2006-2019 Free Software Foundation, Inc.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation; either version 2.1, or (at your option)
    any later version.
@@ -10,11 +10,11 @@
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.
 
    You should have received a copy of the GNU Lesser General Public License along
-   with this program; if not, see <http://www.gnu.org/licenses/>.  */
+   with this program; if not, see <https://www.gnu.org/licenses/>.  */
 
 /* This file can be parametrized with the following macros:
      CHAR_T             The element type of the format string.
      CHAR_T_ONLY_ASCII  Set to 1 to enable verification that all characters
                         in the format string are ASCII.
@@ -25,21 +25,21 @@
      PRINTF_PARSE       Function that parses a format string.
                         Depends on CHAR_T.
      STATIC             Set to 'static' to declare the function static.
      ENABLE_UNISTDIO    Set to 1 to enable the unistdio extensions.  */
 
-#include <config.h>
+#ifndef PRINTF_PARSE
+# include <config.h>
+#endif
 
 #include "g-gnulib.h"
 
 /* Specification.  */
 #ifndef PRINTF_PARSE
 # include "printf-parse.h"
 #endif
 
-#include "xsize.h"
-
 /* Default parameters.  */
 #ifndef PRINTF_PARSE
 # define PRINTF_PARSE printf_parse
 # define CHAR_T char
 # define DIRECTIVE char_directive
@@ -56,15 +56,11 @@
 # endif
 # if HAVE_INTTYPES_H_WITH_UINTMAX
 #  include <inttypes.h>
 # endif
 #else
-# if !defined (_MSC_VER) || (_MSC_VER >= 1600)
-#  include <stdint.h>
-# else
-typedef signed __int64 intmax_t;
-# endif
+# include <stdint.h>
 #endif
 
 /* malloc(), realloc(), free().  */
 #include <stdlib.h>
 
@@ -72,10 +68,13 @@
 #include <string.h>
 
 /* errno.  */
 #include <errno.h>
 
+/* Checked size_t computations.  */
+#include "xsize.h"
+
 #if CHAR_T_ONLY_ASCII
 /* c_isascii().  */
 # include "c-ctype.h"
 #endif
 
@@ -420,11 +419,11 @@
                           flags += 8;
                         }
                       cp++;
                     }
 #endif
-#if (defined _WIN32 || defined __WIN32__) && ! defined __CYGWIN__
+#if defined _WIN32 && ! defined __CYGWIN__
                   /* On native Windows, PRIdMAX is defined as "I64d".
                      We cannot change it to "lld" because PRIdMAX must also
                      be understood by the system's printf routines.  */
                   else if (*cp == 'I' && cp[1] == '6' && cp[2] == '4')
                     {
