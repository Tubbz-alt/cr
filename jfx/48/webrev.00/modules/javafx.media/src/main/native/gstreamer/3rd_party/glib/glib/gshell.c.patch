diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gshell.c b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gshell.c
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gshell.c
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gshell.c
@@ -219,11 +219,11 @@
   /* could speed this up a lot by appending chunks of text at a
    * time.
    */
   while (*p)
     {
-      /* Replace literal ' with a close ', a \', and a open ' */
+      /* Replace literal ' with a close ', a \', and an open ' */
       if (*p == '\'')
         g_string_append (dest, "'\\''");
       else
         g_string_append_c (dest, *p);
 
@@ -528,11 +528,11 @@
               current_quote = *p;
               break;
 
             case '#':
               if (p == command_line)
-            { /* '#' was the first char */
+          { /* '#' was the first char */
                   current_quote = *p;
                   break;
                 }
               switch(*(p-1))
                 {
@@ -542,11 +542,11 @@
                     current_quote = *p;
                     break;
                   default:
                     ensure_token (&current_token);
                     g_string_append_c (current_token, *p);
-            break;
+        break;
                 }
               break;
 
             default:
               /* Combines rules 4) and 6) - if we have a token, append to it,
@@ -560,13 +560,13 @@
 
       /* We need to count consecutive backslashes mod 2,
        * to detect escaped doublequotes.
        */
       if (*p != '\\')
-    quoted = FALSE;
+  quoted = FALSE;
       else
-    quoted = !quoted;
+  quoted = !quoted;
 
       ++p;
     }
 
   delimit_token (&current_token, &retval);
