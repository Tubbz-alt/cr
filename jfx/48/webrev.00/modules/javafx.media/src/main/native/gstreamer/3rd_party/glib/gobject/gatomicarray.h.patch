diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gatomicarray.h b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gatomicarray.h
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gatomicarray.h
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/gobject/gatomicarray.h
@@ -32,27 +32,27 @@
   volatile gpointer data;               /* elements - atomic */
 };
 
 void     _g_atomic_array_init   (GAtomicArray *array);
 gpointer _g_atomic_array_copy   (GAtomicArray *array,
-                 gsize         header_size,
-                 gsize         additional_element_size);
+         gsize         header_size,
+         gsize         additional_element_size);
 void     _g_atomic_array_update (GAtomicArray *array,
-                 gpointer      new_data);
+         gpointer      new_data);
 
 #define  G_ATOMIC_ARRAY_GET_LOCKED(_array, _type) ((_type *)((_array)->data))
 
-#define G_ATOMIC_ARRAY_DO_TRANSACTION(_array, _type, _C_) G_STMT_START {    \
-    volatile gpointer *_datap  = &(_array)->data;               \
-    _type *transaction_data, *__check;                      \
-                                        \
-    __check = g_atomic_pointer_get (_datap);                    \
-    do {                                    \
-      transaction_data = __check;                       \
-      {_C_;}                                    \
-      __check = g_atomic_pointer_get (_datap);                  \
-    } while (transaction_data != __check);                  \
+#define G_ATOMIC_ARRAY_DO_TRANSACTION(_array, _type, _C_) G_STMT_START {  \
+    volatile gpointer *_datap  = &(_array)->data;       \
+    _type *transaction_data, *__check;            \
+                    \
+    __check = g_atomic_pointer_get (_datap);          \
+    do {                  \
+      transaction_data = __check;           \
+      {_C_;}                  \
+      __check = g_atomic_pointer_get (_datap);          \
+    } while (transaction_data != __check);          \
   } G_STMT_END
 
 G_END_DECLS
 
 #endif  /* __G_ATOMIC_ARRAY_H__ */
