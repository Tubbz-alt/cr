diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/garray.h b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/garray.h
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/garray.h
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/garray.h
@@ -32,13 +32,13 @@
 #include <glib/gtypes.h>
 
 G_BEGIN_DECLS
 
 typedef struct _GBytes          GBytes;
-typedef struct _GArray      GArray;
+typedef struct _GArray    GArray;
 typedef struct _GByteArray  GByteArray;
-typedef struct _GPtrArray   GPtrArray;
+typedef struct _GPtrArray GPtrArray;
 
 struct _GArray
 {
   gchar *data;
   guint len;
@@ -66,59 +66,66 @@
 #define g_array_insert_val(a,i,v) g_array_insert_vals (a, i, &(v), 1)
 #define g_array_index(a,t,i)      (((t*) (void *) (a)->data) [(i)])
 
 GLIB_AVAILABLE_IN_ALL
 GArray* g_array_new               (gboolean          zero_terminated,
-                   gboolean          clear_,
-                   guint             element_size);
+           gboolean          clear_,
+           guint             element_size);
 GLIB_AVAILABLE_IN_ALL
 GArray* g_array_sized_new         (gboolean          zero_terminated,
-                   gboolean          clear_,
-                   guint             element_size,
-                   guint             reserved_size);
+           gboolean          clear_,
+           guint             element_size,
+           guint             reserved_size);
+GLIB_AVAILABLE_IN_2_62
+GArray* g_array_copy              (GArray           *array);
 GLIB_AVAILABLE_IN_ALL
 gchar*  g_array_free              (GArray           *array,
-                   gboolean          free_segment);
+           gboolean          free_segment);
 GLIB_AVAILABLE_IN_ALL
 GArray *g_array_ref               (GArray           *array);
 GLIB_AVAILABLE_IN_ALL
 void    g_array_unref             (GArray           *array);
 GLIB_AVAILABLE_IN_ALL
 guint   g_array_get_element_size  (GArray           *array);
 GLIB_AVAILABLE_IN_ALL
 GArray* g_array_append_vals       (GArray           *array,
-                   gconstpointer     data,
-                   guint             len);
+           gconstpointer     data,
+           guint             len);
 GLIB_AVAILABLE_IN_ALL
 GArray* g_array_prepend_vals      (GArray           *array,
-                   gconstpointer     data,
-                   guint             len);
+           gconstpointer     data,
+           guint             len);
 GLIB_AVAILABLE_IN_ALL
 GArray* g_array_insert_vals       (GArray           *array,
-                   guint             index_,
-                   gconstpointer     data,
-                   guint             len);
+           guint             index_,
+           gconstpointer     data,
+           guint             len);
 GLIB_AVAILABLE_IN_ALL
 GArray* g_array_set_size          (GArray           *array,
-                   guint             length);
+           guint             length);
 GLIB_AVAILABLE_IN_ALL
 GArray* g_array_remove_index      (GArray           *array,
-                   guint             index_);
+           guint             index_);
 GLIB_AVAILABLE_IN_ALL
 GArray* g_array_remove_index_fast (GArray           *array,
-                   guint             index_);
+           guint             index_);
 GLIB_AVAILABLE_IN_ALL
 GArray* g_array_remove_range      (GArray           *array,
-                   guint             index_,
-                   guint             length);
+           guint             index_,
+           guint             length);
 GLIB_AVAILABLE_IN_ALL
 void    g_array_sort              (GArray           *array,
-                   GCompareFunc      compare_func);
+           GCompareFunc      compare_func);
 GLIB_AVAILABLE_IN_ALL
 void    g_array_sort_with_data    (GArray           *array,
-                   GCompareDataFunc  compare_func,
-                   gpointer          user_data);
+           GCompareDataFunc  compare_func,
+           gpointer          user_data);
+GLIB_AVAILABLE_IN_2_62
+gboolean g_array_binary_search    (GArray           *array,
+                                   gconstpointer     target,
+                                   GCompareFunc      compare_func,
+                                   guint            *out_match_index);
 GLIB_AVAILABLE_IN_ALL
 void    g_array_set_clear_func    (GArray           *array,
                                    GDestroyNotify    clear_func);
 
 /* Resizable pointer array.  This interface is much less complicated
@@ -128,68 +135,80 @@
 #define    g_ptr_array_index(array,index_) ((array)->pdata)[index_]
 GLIB_AVAILABLE_IN_ALL
 GPtrArray* g_ptr_array_new                (void);
 GLIB_AVAILABLE_IN_ALL
 GPtrArray* g_ptr_array_new_with_free_func (GDestroyNotify    element_free_func);
+GLIB_AVAILABLE_IN_2_62
+GPtrArray *g_ptr_array_copy               (GPtrArray        *array,
+                                           GCopyFunc         func,
+                                           gpointer          user_data);
 GLIB_AVAILABLE_IN_ALL
 GPtrArray* g_ptr_array_sized_new          (guint             reserved_size);
 GLIB_AVAILABLE_IN_ALL
 GPtrArray* g_ptr_array_new_full           (guint             reserved_size,
-                       GDestroyNotify    element_free_func);
+             GDestroyNotify    element_free_func);
 GLIB_AVAILABLE_IN_ALL
 gpointer*  g_ptr_array_free               (GPtrArray        *array,
-                       gboolean          free_seg);
+             gboolean          free_seg);
 GLIB_AVAILABLE_IN_ALL
 GPtrArray* g_ptr_array_ref                (GPtrArray        *array);
 GLIB_AVAILABLE_IN_ALL
 void       g_ptr_array_unref              (GPtrArray        *array);
 GLIB_AVAILABLE_IN_ALL
 void       g_ptr_array_set_free_func      (GPtrArray        *array,
                                            GDestroyNotify    element_free_func);
 GLIB_AVAILABLE_IN_ALL
 void       g_ptr_array_set_size           (GPtrArray        *array,
-                       gint              length);
+             gint              length);
 GLIB_AVAILABLE_IN_ALL
 gpointer   g_ptr_array_remove_index       (GPtrArray        *array,
-                       guint             index_);
+             guint             index_);
 GLIB_AVAILABLE_IN_ALL
 gpointer   g_ptr_array_remove_index_fast  (GPtrArray        *array,
-                       guint             index_);
+             guint             index_);
 GLIB_AVAILABLE_IN_2_58
 gpointer   g_ptr_array_steal_index        (GPtrArray        *array,
                                            guint             index_);
 GLIB_AVAILABLE_IN_2_58
 gpointer   g_ptr_array_steal_index_fast   (GPtrArray        *array,
                                            guint             index_);
 GLIB_AVAILABLE_IN_ALL
 gboolean   g_ptr_array_remove             (GPtrArray        *array,
-                       gpointer          data);
+             gpointer          data);
 GLIB_AVAILABLE_IN_ALL
 gboolean   g_ptr_array_remove_fast        (GPtrArray        *array,
-                       gpointer          data);
+             gpointer          data);
 GLIB_AVAILABLE_IN_ALL
 GPtrArray *g_ptr_array_remove_range       (GPtrArray        *array,
-                       guint             index_,
-                       guint             length);
+             guint             index_,
+             guint             length);
 GLIB_AVAILABLE_IN_ALL
 void       g_ptr_array_add                (GPtrArray        *array,
-                       gpointer          data);
+             gpointer          data);
+GLIB_AVAILABLE_IN_2_62
+void g_ptr_array_extend                   (GPtrArray        *array_to_extend,
+                                           GPtrArray        *array,
+                                           GCopyFunc         func,
+                                           gpointer          user_data);
+GLIB_AVAILABLE_IN_2_62
+void g_ptr_array_extend_and_steal         (GPtrArray        *array_to_extend,
+                                           GPtrArray        *array);
 GLIB_AVAILABLE_IN_2_40
 void       g_ptr_array_insert             (GPtrArray        *array,
                                            gint              index_,
                                            gpointer          data);
 GLIB_AVAILABLE_IN_ALL
 void       g_ptr_array_sort               (GPtrArray        *array,
-                       GCompareFunc      compare_func);
+             GCompareFunc      compare_func);
 GLIB_AVAILABLE_IN_ALL
 void       g_ptr_array_sort_with_data     (GPtrArray        *array,
-                       GCompareDataFunc  compare_func,
-                       gpointer          user_data);
+             GCompareDataFunc  compare_func,
+             gpointer          user_data);
 GLIB_AVAILABLE_IN_ALL
 void       g_ptr_array_foreach            (GPtrArray        *array,
-                       GFunc             func,
-                       gpointer          user_data);
+             GFunc             func,
+             gpointer          user_data);
 GLIB_AVAILABLE_IN_2_54
 gboolean   g_ptr_array_find               (GPtrArray        *haystack,
                                            gconstpointer     needle,
                                            guint            *index_);
 GLIB_AVAILABLE_IN_2_54
@@ -210,44 +229,44 @@
                                             gsize             len);
 GLIB_AVAILABLE_IN_ALL
 GByteArray* g_byte_array_sized_new         (guint             reserved_size);
 GLIB_AVAILABLE_IN_ALL
 guint8*     g_byte_array_free              (GByteArray       *array,
-                        gboolean          free_segment);
+              gboolean          free_segment);
 GLIB_AVAILABLE_IN_ALL
 GBytes*     g_byte_array_free_to_bytes     (GByteArray       *array);
 GLIB_AVAILABLE_IN_ALL
 GByteArray *g_byte_array_ref               (GByteArray       *array);
 GLIB_AVAILABLE_IN_ALL
 void        g_byte_array_unref             (GByteArray       *array);
 GLIB_AVAILABLE_IN_ALL
 GByteArray* g_byte_array_append            (GByteArray       *array,
-                        const guint8     *data,
-                        guint             len);
+              const guint8     *data,
+              guint             len);
 GLIB_AVAILABLE_IN_ALL
 GByteArray* g_byte_array_prepend           (GByteArray       *array,
-                        const guint8     *data,
-                        guint             len);
+              const guint8     *data,
+              guint             len);
 GLIB_AVAILABLE_IN_ALL
 GByteArray* g_byte_array_set_size          (GByteArray       *array,
-                        guint             length);
+              guint             length);
 GLIB_AVAILABLE_IN_ALL
 GByteArray* g_byte_array_remove_index      (GByteArray       *array,
-                        guint             index_);
+              guint             index_);
 GLIB_AVAILABLE_IN_ALL
 GByteArray* g_byte_array_remove_index_fast (GByteArray       *array,
-                        guint             index_);
+              guint             index_);
 GLIB_AVAILABLE_IN_ALL
 GByteArray* g_byte_array_remove_range      (GByteArray       *array,
-                        guint             index_,
-                        guint             length);
+              guint             index_,
+              guint             length);
 GLIB_AVAILABLE_IN_ALL
 void        g_byte_array_sort              (GByteArray       *array,
-                        GCompareFunc      compare_func);
+              GCompareFunc      compare_func);
 GLIB_AVAILABLE_IN_ALL
 void        g_byte_array_sort_with_data    (GByteArray       *array,
-                        GCompareDataFunc  compare_func,
-                        gpointer          user_data);
+              GCompareDataFunc  compare_func,
+              gpointer          user_data);
 
 G_END_DECLS
 
 #endif /* __G_ARRAY_H__ */
