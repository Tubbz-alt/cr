diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/plugins/elements/gstqueue.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/plugins/elements/gstqueue.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/plugins/elements/gstqueue.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/plugins/elements/gstqueue.c
@@ -937,11 +937,11 @@
       /* make sure it pauses, this should happen since we sent
        * flush_start downstream. */
 #ifdef GSTREAMER_LITE
       // Pause task on pad only if it is linked
       if (gst_pad_is_linked (queue->srcpad)) {
-          gst_pad_pause_task (queue->srcpad);
+        gst_pad_pause_task (queue->srcpad);
       }
 #else // GSTREAMER_LITE
       gst_pad_pause_task (queue->srcpad);
 #endif // GSTREAMER_LITE
       GST_CAT_LOG_OBJECT (queue_dataflow, queue, "loop stopped");
@@ -1024,11 +1024,11 @@
                 queue->unexpected = FALSE;
               }
 
               break;
             default:
-          goto out_eos;
+              goto out_eos;
           }
         }
 
         gst_queue_locked_enqueue_event (queue, event);
         GST_QUEUE_MUTEX_UNLOCK (queue);
@@ -1081,11 +1081,11 @@
         qitem.size = 0;
         gst_queue_array_push_tail_struct (queue->queue, &qitem);
         GST_QUEUE_SIGNAL_ADD (queue);
         while (queue->srcresult == GST_FLOW_OK &&
             queue->last_handled_query != query)
-        g_cond_wait (&queue->query_handled, &queue->qlock);
+          g_cond_wait (&queue->query_handled, &queue->qlock);
         queue->last_handled_query = NULL;
         if (queue->srcresult != GST_FLOW_OK)
           goto out_flushing;
         res = queue->last_query;
         GST_QUEUE_MUTEX_UNLOCK (queue);
@@ -1207,16 +1207,16 @@
   if (!is_list) {
     GstClockTime duration, timestamp;
     GstBuffer *buffer = GST_BUFFER_CAST (obj);
 
     timestamp = GST_BUFFER_DTS_OR_PTS (buffer);
-  duration = GST_BUFFER_DURATION (buffer);
+    duration = GST_BUFFER_DURATION (buffer);
 
-  GST_CAT_LOG_OBJECT (queue_dataflow, queue, "received buffer %p of size %"
-      G_GSIZE_FORMAT ", time %" GST_TIME_FORMAT ", duration %"
-      GST_TIME_FORMAT, buffer, gst_buffer_get_size (buffer),
-      GST_TIME_ARGS (timestamp), GST_TIME_ARGS (duration));
+    GST_CAT_LOG_OBJECT (queue_dataflow, queue, "received buffer %p of size %"
+        G_GSIZE_FORMAT ", time %" GST_TIME_FORMAT ", duration %"
+        GST_TIME_FORMAT, buffer, gst_buffer_get_size (buffer),
+        GST_TIME_ARGS (timestamp), GST_TIME_ARGS (duration));
   } else {
     GST_CAT_LOG_OBJECT (queue_dataflow, queue,
         "received buffer list %p with %u buffers", obj,
         gst_buffer_list_length (GST_BUFFER_LIST_CAST (obj)));
   }
@@ -1274,18 +1274,18 @@
   }
 
   if (queue->tail_needs_discont) {
     if (!is_list) {
       GstBuffer *buffer = GST_BUFFER_CAST (obj);
-    GstBuffer *subbuffer = gst_buffer_make_writable (buffer);
+      GstBuffer *subbuffer = gst_buffer_make_writable (buffer);
 
-    if (subbuffer) {
-      buffer = subbuffer;
-      GST_BUFFER_FLAG_SET (buffer, GST_BUFFER_FLAG_DISCONT);
-    } else {
-      GST_DEBUG_OBJECT (queue, "Could not mark buffer as DISCONT");
-    }
+      if (subbuffer) {
+        buffer = subbuffer;
+        GST_BUFFER_FLAG_SET (buffer, GST_BUFFER_FLAG_DISCONT);
+      } else {
+        GST_DEBUG_OBJECT (queue, "Could not mark buffer as DISCONT");
+      }
 
       obj = GST_MINI_OBJECT_CAST (buffer);
     } else {
       GstBufferList *buffer_list = GST_BUFFER_LIST_CAST (obj);
 
@@ -1376,28 +1376,28 @@
 next:
   is_list = GST_IS_BUFFER_LIST (data);
 
   if (GST_IS_BUFFER (data) || is_list) {
     if (!is_list) {
-    GstBuffer *buffer;
+      GstBuffer *buffer;
 
-    buffer = GST_BUFFER_CAST (data);
+      buffer = GST_BUFFER_CAST (data);
 
-    if (queue->head_needs_discont) {
-      GstBuffer *subbuffer = gst_buffer_make_writable (buffer);
+      if (queue->head_needs_discont) {
+        GstBuffer *subbuffer = gst_buffer_make_writable (buffer);
 
-      if (subbuffer) {
-        buffer = subbuffer;
-        GST_BUFFER_FLAG_SET (buffer, GST_BUFFER_FLAG_DISCONT);
-      } else {
-        GST_DEBUG_OBJECT (queue, "Could not mark buffer as DISCONT");
+        if (subbuffer) {
+          buffer = subbuffer;
+          GST_BUFFER_FLAG_SET (buffer, GST_BUFFER_FLAG_DISCONT);
+        } else {
+          GST_DEBUG_OBJECT (queue, "Could not mark buffer as DISCONT");
+        }
+        queue->head_needs_discont = FALSE;
       }
-      queue->head_needs_discont = FALSE;
-    }
 
-    GST_QUEUE_MUTEX_UNLOCK (queue);
-    result = gst_pad_push (queue->srcpad, buffer);
+      GST_QUEUE_MUTEX_UNLOCK (queue);
+      result = gst_pad_push (queue->srcpad, buffer);
     } else {
       GstBufferList *buffer_list;
 
       buffer_list = GST_BUFFER_LIST_CAST (data);
 
@@ -1567,16 +1567,16 @@
   {
     gboolean eos = queue->eos;
     GstFlowReturn ret = queue->srcresult;
 
 #ifdef GSTREAMER_LITE
-      // Pause task on pad only if it is linked
-      if (gst_pad_is_linked (queue->srcpad)) {
-          gst_pad_pause_task (queue->srcpad);
-      }
-#else // GSTREAMER_LITE
+    // Pause task on pad only if it is linked
+    if (gst_pad_is_linked (queue->srcpad)) {
       gst_pad_pause_task (queue->srcpad);
+    }
+#else // GSTREAMER_LITE
+    gst_pad_pause_task (queue->srcpad);
 #endif // GSTREAMER_LITE
 
     GST_CAT_LOG_OBJECT (queue_dataflow, queue,
         "pause task, reason:  %s", gst_flow_get_name (ret));
     if (ret == GST_FLOW_FLUSHING) {
