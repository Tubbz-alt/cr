diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-base/gst-libs/gst/audio/audio-format.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-base/gst-libs/gst/audio/audio-format.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-base/gst-libs/gst/audio/audio-format.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-base/gst-libs/gst/audio/audio-format.c
@@ -114,18 +114,18 @@
 #endif
 
 #define MAKE_ORC_PACK_UNPACK(fmt,fmt_t)                         \
 static void unpack_ ##fmt (const GstAudioFormatInfo *info,      \
     GstAudioPackFlags flags, gpointer dest,                     \
-    const gpointer data, gint length) {                         \
+    gconstpointer data, gint length) {                          \
   if (flags & GST_AUDIO_PACK_FLAG_TRUNCATE_RANGE)               \
     audio_orc_unpack_ ##fmt_t (dest, data, length);             \
   else                                                          \
     audio_orc_unpack_ ##fmt (dest, data, length);               \
 }                                                               \
 static void pack_ ##fmt (const GstAudioFormatInfo *info,        \
-    GstAudioPackFlags flags, const gpointer src,                \
+    GstAudioPackFlags flags, gconstpointer src,                 \
     gpointer data, gint length) {                               \
   audio_orc_pack_ ##fmt (data, src, length);                    \
 }
 
 #define PACK_S8 GST_AUDIO_FORMAT_S32, unpack_s8, pack_s8
@@ -163,25 +163,25 @@
 #define READ24_FROM_LE(p) (p[0] | (p[1] << 8) | (p[2] << 16))
 #define READ24_FROM_BE(p) (p[2] | (p[1] << 8) | (p[0] << 16))
 #define MAKE_PACK_UNPACK(name, stride, sign, scale, READ_FUNC, WRITE_FUNC)     \
 static void unpack_ ##name (const GstAudioFormatInfo *info,             \
     GstAudioPackFlags flags, gpointer dest,                             \
-    const gpointer data, gint length)                                   \
+    gconstpointer data, gint length)                                    \
 {                                                                       \
   guint32 *d = dest;                                                    \
-  guint8 *s = data;                                                     \
+  const guint8 *s = data;                                               \
   for (;length; length--) {                                             \
     *d++ = (((gint32) READ_FUNC (s)) << scale) ^ (sign);                \
     s += stride;                                                        \
   }                                                                     \
 }                                                                       \
 static void pack_ ##name (const GstAudioFormatInfo *info,               \
-    GstAudioPackFlags flags, const gpointer src,                        \
+    GstAudioPackFlags flags, gconstpointer src,                         \
     gpointer data, gint length)                                         \
 {                                                                       \
   gint32 tmp;                                                           \
-  guint32 *s = src;                                                     \
+  const guint32 *s = src;                                               \
   guint8 *d = data;                                                     \
   for (;length; length--) {                                             \
     tmp = (*s++ ^ (sign)) >> scale;                                     \
     WRITE_FUNC (d, tmp);                                                \
     d += stride;                                                        \
