diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstpadtemplate.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstpadtemplate.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstpadtemplate.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstpadtemplate.c
@@ -259,29 +259,29 @@
       if (*(str + 1) != 's' && *(str + 1) != 'd' && *(str + 1) != 'u') {
         g_warning
             ("invalid name template %s: conversion specification must be of"
             " type '%%d', '%%u' or '%%s' for GST_PAD_REQUEST padtemplate",
             name);
-      return FALSE;
-    }
+        return FALSE;
+      }
 
       if (*(str + 1) == 's' && (*(str + 2) != '\0' || has_s)) {
         g_warning
             ("invalid name template %s: conversion specification of type '%%s'"
             "only can be used once in the GST_PAD_REQUEST padtemplate at the "
             "very end and not allowed any other characters with '%%s'", name);
-      return FALSE;
-    }
+        return FALSE;
+      }
 
       if (*(str + 1) == 's') {
         has_s = TRUE;
       }
 
       underscore = strchr (str, '_');
       str = strchr (str + 1, '%');
 
-      if (str && (!underscore || (underscore && str < underscore))) {
+      if (str && (!underscore || str < underscore)) {
         g_warning
             ("invalid name template %s: each of conversion specifications "
             "must be separated by an underscore", name);
       return FALSE;
     }
@@ -331,11 +331,11 @@
  * @pad_template: the static pad template
  * @pad_type: The #GType of the pad to create
  *
  * Converts a #GstStaticPadTemplate into a #GstPadTemplate with a type.
  *
- * Returns: (transfer floating): a new #GstPadTemplate.
+ * Returns: (transfer floating) (nullable): a new #GstPadTemplate.
  *
  * Since: 1.14
  */
 GstPadTemplate *
 gst_pad_template_new_from_static_pad_template_with_gtype (GstStaticPadTemplate *
@@ -408,11 +408,11 @@
  * @pad_type: The #GType of the pad to create
  *
  * Creates a new pad template with a name according to the given template
  * and with the given arguments.
  *
- * Returns: (transfer floating): a new #GstPadTemplate.
+ * Returns: (transfer floating) (nullable): a new #GstPadTemplate.
  *
  * Since: 1.14
  */
 GstPadTemplate *
 gst_pad_template_new_with_gtype (const gchar * name_template,
