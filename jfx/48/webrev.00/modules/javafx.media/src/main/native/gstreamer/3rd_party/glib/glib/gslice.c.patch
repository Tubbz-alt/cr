diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gslice.c b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gslice.c
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gslice.c
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/gslice.c
@@ -43,10 +43,11 @@
 #include "gstrfuncs.h"
 #include "gutils.h"
 #include "gtrashstack.h"
 #include "gtestutils.h"
 #include "gthread.h"
+#include "gthreadprivate.h"
 #include "glib_trace.h"
 #include "gprintf.h"
 
 #include "gvalgrind.h"
 
@@ -518,18 +519,17 @@
       if G_UNLIKELY (sys_page_size == 0)
         g_slice_init_nomessage ();
       g_mutex_unlock (&init_mutex);
 
       n_magazines = MAX_SLAB_INDEX (allocator);
-      tmem = g_malloc0 (sizeof (ThreadMemory) + sizeof (Magazine) * 2 * n_magazines);
+      tmem = g_private_set_alloc0 (&private_thread_memory, sizeof (ThreadMemory) + sizeof (Magazine) * 2 * n_magazines);
 #ifdef GSTREAMER_LITE
       if (tmem == NULL)
-          return NULL;
+        return NULL;
 #endif // GSTREAMER_LITE
       tmem->magazine1 = (Magazine*) (tmem + 1);
       tmem->magazine2 = &tmem->magazine1[n_magazines];
-      g_private_set (&private_thread_memory, tmem);
     }
   return tmem;
 }
 
 static inline ChunkLink*
@@ -602,13 +602,12 @@
 static inline void
 magazine_cache_update_stamp (void)
 {
   if (allocator->stamp_counter >= MAX_STAMP_COUNTER)
     {
-      GTimeVal tv;
-      g_get_current_time (&tv);
-      allocator->last_stamp = tv.tv_sec * 1000 + tv.tv_usec / 1000; /* milli seconds */
+      gint64 now_us = g_get_real_time ();
+      allocator->last_stamp = now_us / 1000; /* milli seconds */
       allocator->stamp_counter = 0;
     }
   else
     allocator->stamp_counter++;
 }
@@ -647,11 +646,12 @@
 {
   /* g_mutex_lock (allocator->mutex); done by caller */
   /* trim magazine cache from tail */
   ChunkLink *current = magazine_chain_prev (allocator->magazines[ix]);
   ChunkLink *trash = NULL;
-  while (ABS (stamp - magazine_chain_uint_stamp (current)) >= allocator->config.working_set_msecs)
+  while (!G_APPROX_VALUE(stamp, magazine_chain_uint_stamp (current),
+                         allocator->config.working_set_msecs))
     {
       /* unlink */
       ChunkLink *prev = magazine_chain_prev (current);
       ChunkLink *next = magazine_chain_next (current);
       magazine_chain_next (prev) = next;
@@ -1415,11 +1415,13 @@
  * define HAVE_VALLOC                   1 // if free(valloc(3)) works, <stdlib.h> or <malloc.h>
  * if none is provided, we implement malloc(3)-based alloc-only page alignment
  */
 
 #if !(HAVE_POSIX_MEMALIGN || HAVE_MEMALIGN || HAVE_VALLOC)
+G_GNUC_BEGIN_IGNORE_DEPRECATIONS
 static GTrashStack *compat_valloc_trash = NULL;
+G_GNUC_END_IGNORE_DEPRECATIONS
 #endif
 
 static gpointer
 allocator_memalign (gsize alignment,
                     gsize memsize)
