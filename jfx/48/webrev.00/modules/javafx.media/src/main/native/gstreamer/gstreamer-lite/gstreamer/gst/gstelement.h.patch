diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstelement.h b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstelement.h
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstelement.h
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstelement.h
@@ -26,11 +26,11 @@
 
 #include <glib.h>
 
 G_BEGIN_DECLS
 
-/* gstelement.h and gstelementfactory.h include eachother */
+/* gstelement.h and gstelementfactory.h include each other */
 typedef struct _GstElement GstElement;
 typedef struct _GstElementClass GstElementClass;
 
 /* gstmessage.h needs State */
 /**
@@ -228,18 +228,18 @@
  *   * The sink forgets all negotiated formats
  *   * Elements remove all sometimes pads
  * @GST_STATE_CHANGE_READY_TO_NULL    : state change from READY to NULL.
  *   * Elements close devices
  *   * Elements reset any internal state.
- * @GST_STATE_CHANGE_NULL_TO_NULL       : state change from NULL to NULL. (Since 1.14)
+ * @GST_STATE_CHANGE_NULL_TO_NULL       : state change from NULL to NULL. (Since: 1.14)
  * @GST_STATE_CHANGE_READY_TO_READY     : state change from READY to READY,
  * This might happen when going to PAUSED asynchronously failed, in that case
- * elements should make sure they are in a proper, coherent READY state. (Since 1.14)
+ * elements should make sure they are in a proper, coherent READY state. (Since: 1.14)
  * @GST_STATE_CHANGE_PAUSED_TO_PAUSED   : state change from PAUSED to PAUSED.
  * This might happen when elements were in PLAYING state and 'lost state',
- * they should make sure to go back to real 'PAUSED' state (prerolling for example). (Since 1.14)
- * @GST_STATE_CHANGE_PLAYING_TO_PLAYING : state change from PLAYING to PLAYING. (Since 1.14)
+ * they should make sure to go back to real 'PAUSED' state (prerolling for example). (Since: 1.14)
+ * @GST_STATE_CHANGE_PLAYING_TO_PLAYING : state change from PLAYING to PLAYING. (Since: 1.14)
  *
  * These are the different state changes an element goes through.
  * %GST_STATE_NULL &rArr; %GST_STATE_PLAYING is called an upwards state change
  * and %GST_STATE_PLAYING &rArr; %GST_STATE_NULL a downwards state change.
  */
@@ -687,11 +687,11 @@
 {
   GstObjectClass         parent_class;
 
   /*< public >*/
   /* the element metadata */
-  gpointer       metadata;
+  gpointer     metadata;
 
   /* factory that the element was created from */
   GstElementFactory     *elementfactory;
 
   /* templates for our pads */
@@ -899,11 +899,11 @@
 GST_API
 GstPad*                 gst_element_get_request_pad     (GstElement *element, const gchar *name);
 
 GST_API
 GstPad*                 gst_element_request_pad         (GstElement *element, GstPadTemplate *templ,
-                             const gchar * name, const GstCaps *caps);
+               const gchar * name, const GstCaps *caps);
 GST_API
 void                    gst_element_release_request_pad (GstElement *element, GstPad *pad);
 
 GST_API
 GstIterator *           gst_element_iterate_pads        (GstElement * element);
