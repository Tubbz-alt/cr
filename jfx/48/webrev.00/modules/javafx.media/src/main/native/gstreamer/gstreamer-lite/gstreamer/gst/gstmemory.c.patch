diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstmemory.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstmemory.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstmemory.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstmemory.c
@@ -93,10 +93,11 @@
   }
 
   allocator = mem->allocator;
 
   gst_allocator_free (allocator, mem);
+
   gst_object_unref (allocator);
 }
 
 /**
  * gst_memory_init: (skip)
@@ -301,11 +302,11 @@
   info->maxsize = mem->maxsize - mem->offset;
 
   if (mem->allocator->mem_map_full)
     info->data = mem->allocator->mem_map_full (mem, info, mem->maxsize);
   else
-  info->data = mem->allocator->mem_map (mem, mem->maxsize, flags);
+    info->data = mem->allocator->mem_map (mem, mem->maxsize, flags);
 
   if (G_UNLIKELY (info->data == NULL))
     goto error;
 
   info->data = info->data + mem->offset;
@@ -319,11 +320,11 @@
     memset (info, 0, sizeof (GstMapInfo));
     return FALSE;
   }
 error:
   {
-    /* something went wrong, restore the orginal state again
+    /* something went wrong, restore the original state again
      * it is up to the subclass to log an error if needed. */
     GST_CAT_INFO (GST_CAT_MEMORY, "mem %p: subclass map failed", mem);
     gst_memory_unlock (mem, (GstLockFlags) flags);
     memset (info, 0, sizeof (GstMapInfo));
     return FALSE;
@@ -345,11 +346,11 @@
   g_return_if_fail (info->memory == mem);
 
   if (mem->allocator->mem_unmap_full)
     mem->allocator->mem_unmap_full (mem, info);
   else
-  mem->allocator->mem_unmap (mem);
+    mem->allocator->mem_unmap (mem);
   gst_memory_unlock (mem, (GstLockFlags) info->flags);
 }
 
 /**
  * gst_memory_copy:
