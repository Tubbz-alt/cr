diff a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/grand.h b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/grand.h
--- a/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/grand.h
+++ b/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/glib/grand.h
@@ -46,54 +46,54 @@
 
 GLIB_AVAILABLE_IN_ALL
 GRand*  g_rand_new_with_seed  (guint32  seed);
 GLIB_AVAILABLE_IN_ALL
 GRand*  g_rand_new_with_seed_array (const guint32 *seed,
-                    guint seed_length);
+            guint seed_length);
 GLIB_AVAILABLE_IN_ALL
 GRand*  g_rand_new            (void);
 GLIB_AVAILABLE_IN_ALL
 void    g_rand_free           (GRand   *rand_);
 GLIB_AVAILABLE_IN_ALL
 GRand*  g_rand_copy           (GRand   *rand_);
 GLIB_AVAILABLE_IN_ALL
 void    g_rand_set_seed       (GRand   *rand_,
-                   guint32  seed);
+             guint32  seed);
 GLIB_AVAILABLE_IN_ALL
-void    g_rand_set_seed_array (GRand   *rand_,
-                               const guint32 *seed,
-                               guint    seed_length);
+void  g_rand_set_seed_array (GRand   *rand_,
+             const guint32 *seed,
+             guint    seed_length);
 
 #define g_rand_boolean(rand_) ((g_rand_int (rand_) & (1 << 15)) != 0)
 
 GLIB_AVAILABLE_IN_ALL
 guint32 g_rand_int            (GRand   *rand_);
 GLIB_AVAILABLE_IN_ALL
 gint32  g_rand_int_range      (GRand   *rand_,
-                   gint32   begin,
-                   gint32   end);
+             gint32   begin,
+             gint32   end);
 GLIB_AVAILABLE_IN_ALL
 gdouble g_rand_double         (GRand   *rand_);
 GLIB_AVAILABLE_IN_ALL
 gdouble g_rand_double_range   (GRand   *rand_,
-                   gdouble  begin,
-                   gdouble  end);
+             gdouble  begin,
+             gdouble  end);
 GLIB_AVAILABLE_IN_ALL
 void    g_random_set_seed     (guint32  seed);
 
 #define g_random_boolean() ((g_random_int () & (1 << 15)) != 0)
 
 GLIB_AVAILABLE_IN_ALL
 guint32 g_random_int          (void);
 GLIB_AVAILABLE_IN_ALL
 gint32  g_random_int_range    (gint32   begin,
-                   gint32   end);
+             gint32   end);
 GLIB_AVAILABLE_IN_ALL
 gdouble g_random_double       (void);
 GLIB_AVAILABLE_IN_ALL
 gdouble g_random_double_range (gdouble  begin,
-                   gdouble  end);
+             gdouble  end);
 
 
 G_END_DECLS
 
 #endif /* __G_RAND_H__ */
