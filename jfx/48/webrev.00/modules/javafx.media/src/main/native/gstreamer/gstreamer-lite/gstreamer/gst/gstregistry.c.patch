diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstregistry.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstregistry.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstregistry.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gstregistry.c
@@ -267,21 +267,19 @@
     registry, const char *name);
 static GstPlugin *gst_registry_lookup_bn_locked (GstRegistry * registry,
     const char *basename);
 
 #define gst_registry_parent_class parent_class
-G_DEFINE_TYPE (GstRegistry, gst_registry, GST_TYPE_OBJECT);
+G_DEFINE_TYPE_WITH_PRIVATE (GstRegistry, gst_registry, GST_TYPE_OBJECT);
 
 static void
 gst_registry_class_init (GstRegistryClass * klass)
 {
   GObjectClass *gobject_class;
 
   gobject_class = (GObjectClass *) klass;
 
-  g_type_class_add_private (klass, sizeof (GstRegistryPrivate));
-
   /**
    * GstRegistry::plugin-added:
    * @registry: the registry that emitted the signal
    * @plugin: the plugin that has been added
    *
@@ -310,13 +308,11 @@
 }
 
 static void
 gst_registry_init (GstRegistry * registry)
 {
-  registry->priv =
-      G_TYPE_INSTANCE_GET_PRIVATE (registry, GST_TYPE_REGISTRY,
-      GstRegistryPrivate);
+  registry->priv = gst_registry_get_instance_private (registry);
   registry->priv->feature_hash = g_hash_table_new (g_str_hash, g_str_equal);
   registry->priv->basename_hash = g_hash_table_new (g_str_hash, g_str_equal);
 }
 
 static void
@@ -740,14 +736,14 @@
 
   for (i = 0; i < n_plugins; ++i) {
     if (filter == NULL || filter (plugins[i], user_data)) {
       list = g_list_prepend (list, gst_object_ref (plugins[i]));
 
-        if (first)
-          break;
-  }
+      if (first)
+        break;
     }
+  }
 
   for (i = 0; i < n_plugins; ++i)
     gst_object_unref (plugins[i]);
 
   return list;
@@ -918,14 +914,14 @@
 
   for (i = 0; i < n_features; ++i) {
     if (filter == NULL || filter (features[i], user_data)) {
       list = g_list_prepend (list, gst_object_ref (features[i]));
 
-        if (first)
-          break;
-  }
+      if (first)
+        break;
     }
+  }
 
   for (i = 0; i < n_features; ++i)
     gst_object_unref (features[i]);
 
   return list;
@@ -1917,11 +1913,11 @@
 
   /* GST_PLUGIN_PATH specifies a list of directories to scan for
    * additional plugins.  These take precedence over the system plugins */
   plugin_path = g_getenv ("GST_PLUGIN_PATH_1_0");
   if (plugin_path == NULL)
-  plugin_path = g_getenv ("GST_PLUGIN_PATH");
+    plugin_path = g_getenv ("GST_PLUGIN_PATH");
   if (plugin_path) {
     char **list;
     int i;
 
     GST_DEBUG ("GST_PLUGIN_PATH set to %s", plugin_path);
@@ -1937,11 +1933,11 @@
   /* GST_PLUGIN_SYSTEM_PATH specifies a list of plugins that are always
    * loaded by default.  If not set, this defaults to the system-installed
    * path, and the plugins installed in the user's home directory */
   plugin_path = g_getenv ("GST_PLUGIN_SYSTEM_PATH_1_0");
   if (plugin_path == NULL)
-  plugin_path = g_getenv ("GST_PLUGIN_SYSTEM_PATH");
+    plugin_path = g_getenv ("GST_PLUGIN_SYSTEM_PATH");
   if (plugin_path == NULL) {
     char *home_plugins;
 
     GST_DEBUG ("GST_PLUGIN_SYSTEM_PATH not set");
 
@@ -1963,15 +1959,12 @@
 
       base_dir =
           g_win32_get_package_installation_directory_of_module
           (_priv_gst_dll_handle);
 
-      dir = g_build_filename (base_dir,
-#ifdef _DEBUG
-          "debug"
-#endif
-          "lib", "gstreamer-" GST_API_VERSION, NULL);
+      dir = g_build_filename (base_dir, GST_PLUGIN_SUBDIR,
+          "gstreamer-" GST_API_VERSION, NULL);
       GST_DEBUG ("scanning DLL dir %s", dir);
 
       changed |= gst_registry_scan_path_internal (&context, dir);
 
       g_free (dir);
@@ -2038,11 +2031,11 @@
 
   default_registry = gst_registry_get ();
 
   registry_file = g_strdup (g_getenv ("GST_REGISTRY_1_0"));
   if (registry_file == NULL)
-  registry_file = g_strdup (g_getenv ("GST_REGISTRY"));
+    registry_file = g_strdup (g_getenv ("GST_REGISTRY"));
   if (registry_file == NULL) {
     registry_file = g_build_filename (g_get_user_cache_dir (),
         "gstreamer-" GST_API_VERSION, "registry." TARGET_CPU ".bin", NULL);
   }
 
@@ -2153,19 +2146,19 @@
 {
   gboolean res;
 
 #ifndef GST_DISABLE_REGISTRY
   if (!_priv_gst_disable_registry) {
-  GError *err = NULL;
+    GError *err = NULL;
 
-  res = ensure_current_registry (&err);
-  if (err) {
-    GST_WARNING ("registry update failed: %s", err->message);
-    g_error_free (err);
-  } else {
-    GST_LOG ("registry update succeeded");
-  }
+    res = ensure_current_registry (&err);
+    if (err) {
+      GST_WARNING ("registry update failed: %s", err->message);
+      g_error_free (err);
+    } else {
+      GST_LOG ("registry update succeeded");
+    }
   } else {
     GST_INFO ("registry update disabled by environment");
     res = TRUE;
   }
 
