diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gsttaglist.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gsttaglist.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gsttaglist.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gstreamer/gst/gsttaglist.c
@@ -469,17 +469,17 @@
 
   return ret;
 }
 
 /**
- * gst_tag_register:
+ * gst_tag_register: (skip)
  * @name: the name or identifier string
  * @flag: a flag describing the type of tag info
  * @type: the type this data is in
  * @nick: human-readable name
  * @blurb: a human-readable description about this tag
- * @func: (allow-none) (scope call): function for merging multiple values of this tag, or %NULL
+ * @func: (allow-none): function for merging multiple values of this tag, or %NULL
  *
  * Registers a new tag type for the use with GStreamer's type system. If a type
  * with that name is already registered, that one is used.
  * The old registration may have used a different type however. So don't rely
  * on your supplied values.
@@ -513,17 +513,17 @@
   gst_tag_register_static (g_intern_string (name), flag, type,
       g_intern_string (nick), g_intern_string (blurb), func);
 }
 
 /**
- * gst_tag_register_static:
+ * gst_tag_register_static: (skip)
  * @name: the name or identifier string (string constant)
  * @flag: a flag describing the type of tag info
  * @type: the type this data is in
  * @nick: human-readable name or short description (string constant)
  * @blurb: a human-readable description for this tag (string constant)
- * @func: (allow-none) (scope call): function for merging multiple values of this tag, or %NULL
+ * @func: (allow-none): function for merging multiple values of this tag, or %NULL
  *
  * Registers a new tag type for the use with GStreamer's type system.
  *
  * Same as gst_tag_register(), but @name, @nick, and @blurb must be
  * static strings or inlined strings, as they will not be copied. (GStreamer
@@ -612,11 +612,11 @@
   GstTagInfo *info;
 
   g_return_val_if_fail (tag != NULL, NULL);
   info = gst_tag_lookup (tag);
   if (!info) {
-    GST_WARNING ("Uknown tag: %s", tag);
+    GST_WARNING ("Unknown tag: %s", tag);
 
     return tag;
   }
 
   return info->nick;
@@ -717,10 +717,14 @@
   GST_CAT_TRACE (GST_CAT_TAGS, "freeing taglist %p", list);
 #endif
 
   gst_structure_free (GST_TAG_LIST_STRUCTURE (list));
 
+#ifdef USE_POISONING
+  memset (list, 0xff, sizeof (GstTagListImpl));
+#endif
+
   g_slice_free1 (sizeof (GstTagListImpl), list);
 }
 
 static GstTagList *
 __gst_tag_list_copy (const GstTagList * list)
@@ -1297,11 +1301,11 @@
     G_VALUE_COLLECT_INIT (&value, info->type, var_args, 0, &error);
     if (error) {
       g_warning ("%s: %s", G_STRLOC, error);
       g_free (error);
       /* we purposely leak the value here, it might not be
-       * in a sane state if an error condition occoured
+       * in a sane state if an error condition occurred
        */
       return;
     }
     /* Facilitate GstBuffer -> GstSample transition */
     if (G_UNLIKELY (info->type == GST_TYPE_SAMPLE &&
