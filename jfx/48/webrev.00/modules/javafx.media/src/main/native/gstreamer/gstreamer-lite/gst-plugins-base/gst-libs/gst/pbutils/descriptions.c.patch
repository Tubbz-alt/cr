diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-base/gst-libs/gst/pbutils/descriptions.c b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-base/gst-libs/gst/pbutils/descriptions.c
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-base/gst-libs/gst/pbutils/descriptions.c
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-base/gst-libs/gst/pbutils/descriptions.c
@@ -189,10 +189,11 @@
   {"video/sp5x", "Sunplus JPEG 5.x", FLAG_VIDEO, ""},
   {"video/vivo", "Vivo", FLAG_VIDEO, ""},
   {"video/x-4xm", "4X Technologies Video", FLAG_VIDEO, ""},
   {"video/x-apple-video", "Apple video", FLAG_VIDEO, ""},
   {"video/x-aasc", "Autodesk Animator", FLAG_VIDEO, ""},
+  {"video/x-av1", "AV1", FLAG_VIDEO, ""},
   {"video/x-camtasia", "TechSmith Camtasia", FLAG_VIDEO, ""},
   {"video/x-cavs", "Chinese AVS (CAVS)", FLAG_VIDEO, ""},
   {"video/x-cdxa", "RIFF/CDXA (VCD)", AV_CONTAINER, ""},
   {"video/x-cinepak", "Cinepak Video", FLAG_VIDEO, ""},
   {"video/x-cirrus-logic-accupak", "Cirrus Logipak AccuPak", FLAG_VIDEO, ""},
@@ -282,10 +283,12 @@
   {"application/x-subtitle-sami", N_("Sami subtitle format"), FLAG_SUB, ""},
   {"application/x-subtitle-tmplayer", N_("TMPlayer subtitle format"), FLAG_SUB,
       ""},
   {"application/x-teletext", "Teletext", 0, ""},
   {"application/x-kate", "Kate", 0, ""},
+  {"closedcaption/x-cea-608", N_("CEA 608 Closed Caption"), FLAG_SUB, ""},
+  {"closedcaption/x-cea-708", N_("CEA 708 Closed Caption"), FLAG_SUB, ""},
   {"subtitle/x-kate", N_("Kate subtitle format"), FLAG_SUB, ""},
   {"application/x-subtitle-vtt", N_("WebVTT subtitle format"), FLAG_SUB, ""},
   {"subpicture/x-dvb", "DVB subtitles", FLAG_SUB, ""},
   {"subpicture/x-pgs", "PGS subtitles", FLAG_SUB, ""},
   {"subpicture/x-xsub", "XSUB subtitles", FLAG_SUB, ""},
@@ -500,21 +503,21 @@
         subs = "4:2:0";
       } else if (w_sub == 4 && h_sub == 1) {
         subs = "4:1:1";
       } else {
         subs = "";
-    }
+      }
 
       n_semi = GST_VIDEO_FORMAT_INFO_HAS_ALPHA (finfo) ? 3 : 2;
 
       if (GST_VIDEO_FORMAT_INFO_N_PLANES (finfo) == 1) {
         ret = g_strdup_printf (_("Uncompressed packed YUV %s"), subs);
       } else if (GST_VIDEO_FORMAT_INFO_N_PLANES (finfo) == n_semi) {
         ret = g_strdup_printf (_("Uncompressed semi-planar YUV %s"), subs);
-    } else {
+      } else {
         ret = g_strdup_printf (_("Uncompressed planar YUV %s"), subs);
-    }
+      }
     } else if (GST_VIDEO_FORMAT_INFO_IS_RGB (finfo)) {
       gboolean alpha, palette;
       gint bits;
 
       alpha = GST_VIDEO_FORMAT_INFO_HAS_ALPHA (finfo);
@@ -575,11 +578,11 @@
     /* profile */
     profile = gst_structure_get_string (s, "profile");
     if (profile != NULL)
       profile = pbutils_desc_get_h264_profile_name_from_nick (profile);
     if (profile == NULL)
-    return g_strdup (ret);
+      return g_strdup (ret);
     return g_strdup_printf ("%s (%s Profile)", ret, profile);
   } else if (strcmp (info->type, "video/x-h265") == 0) {
     const gchar *profile = gst_structure_get_string (s, "profile");
 
     if (profile != NULL)
@@ -836,11 +839,11 @@
             profile = NULL;
         }
         if (profile != NULL)
           return g_strdup_printf ("MPEG-%d Video (%s Profile)", ver, profile);
         else
-        return g_strdup_printf ("MPEG-%d Video", ver);
+          return g_strdup_printf ("MPEG-%d Video", ver);
       }
     }
     GST_WARNING ("Missing mpegversion field in mpeg video caps "
         "%" GST_PTR_FORMAT, caps);
     return g_strdup ("MPEG Video");
@@ -871,11 +874,11 @@
         return g_strdup ("TechSmith Screen Capture 1");
       case 2:
         return g_strdup ("TechSmith Screen Capture 2");
       default:
         break;
-  }
+    }
     GST_WARNING ("Unexpected version in %" GST_PTR_FORMAT, caps);
     return g_strdup ("TechSmith Screen Capture");
   }
   return NULL;
 }
