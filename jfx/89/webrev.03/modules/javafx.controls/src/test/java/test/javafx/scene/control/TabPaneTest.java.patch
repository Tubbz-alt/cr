diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TabPaneTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TabPaneTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TabPaneTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TabPaneTest.java
@@ -461,10 +461,27 @@
 
         tabPane.setTabDragPolicy(TabPane.TabDragPolicy.FIXED);
         assertSame(TabPane.TabDragPolicy.FIXED, tabPane.getTabDragPolicy());
     }
 
+    @Test public void tabDragPolicyReorderAndAsymmetricMouseEvent() {
+        tabPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);
+        tabPane.getTabs().add(tab1);
+        tabPane.getTabs().add(tab2);
+        root.getChildren().add(tabPane);
+        show();
+
+        root.layout();
+
+        double xval = (tabPane.localToScene(tabPane.getLayoutBounds())).getMinX();
+        double yval = (tabPane.localToScene(tabPane.getLayoutBounds())).getMinY();
+
+        SceneHelper.processMouseEvent(scene,
+            MouseEventGenerator.generateMouseEvent(MouseEvent.MOUSE_RELEASED, xval+75, yval+20));
+        tk.firePulse();
+    }
+
     @Test public void setRotateGraphicAndSeeValueIsReflectedInModel() {
         tabPane.setRotateGraphic(true);
         assertTrue(tabPane.rotateGraphicProperty().getValue());
     }
 
