diff a/modules/javafx.graphics/src/main/native-font/coretext.c b/modules/javafx.graphics/src/main/native-font/coretext.c
--- a/modules/javafx.graphics/src/main/native-font/coretext.c
+++ b/modules/javafx.graphics/src/main/native-font/coretext.c
@@ -386,11 +386,19 @@
     (JNIEnv *env, jclass that, jlong arg0, jdouble arg1, jobject arg2)
 {
     CGAffineTransform _arg2, *lparg2=NULL;
     jlong rc = 0;
     if (arg2) if ((lparg2 = getCGAffineTransformFields(env, arg2, &_arg2)) == NULL) goto fail;
-    rc = (jlong)CTFontCreateWithName((CFStringRef)arg0, (CGFloat)arg1, (CGAffineTransform*)lparg2);
+    CFStringRef fontName = (CFStringRef)arg0;
+    if (CFStringGetCharacterAtIndex(fontName, 0) == '.') {
+        bool bold = CFStringFind(fontName, CFSTR("bold"), kCFCompareCaseInsensitive).location != kCFNotFound;
+        CTFontRef font = CTFontCreateUIFontForLanguage(bold ? kCTFontUIFontEmphasizedSystem : kCTFontUIFontSystem, 0.0, NULL);
+        rc = (jlong) CTFontCreateCopyWithAttributes(font, (CGFloat)arg1, (CGAffineTransform*)lparg2, NULL);
+        CFRelease(font);
+    } else {
+        rc = (jlong) CTFontCreateWithName(fontName, (CGFloat)arg1, (CGAffineTransform*)lparg2);
+    }
 fail:
     /* In only */
 //    if (arg2 && lparg2) setCGAffineTransformFields(env, arg2, lparg2);
     return rc;
 }
