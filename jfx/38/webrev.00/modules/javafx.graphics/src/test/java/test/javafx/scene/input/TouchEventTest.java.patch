diff a/modules/javafx.graphics/src/test/java/test/javafx/scene/input/TouchEventTest.java b/modules/javafx.graphics/src/test/java/test/javafx/scene/input/TouchEventTest.java
--- a/modules/javafx.graphics/src/test/java/test/javafx/scene/input/TouchEventTest.java
+++ b/modules/javafx.graphics/src/test/java/test/javafx/scene/input/TouchEventTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -1530,31 +1530,10 @@
         ((StubScene) SceneHelper.getPeer(scene)).getListener().touchEventNext(
                 TouchPoint.State.PRESSED, 1, 110, 110, 110, 110);
         ((StubScene) SceneHelper.getPeer(scene)).getListener().touchEventEnd();
     }
 
-    // Reenable once indirect events are used
-    @Ignore("For now we've decided to ingore indirect events completely.")
-    @Test(expected=RuntimeException.class)
-    public void shouldThrowREOnLostIndirectRelease() {
-        Scene scene = createScene();
-        Rectangle rect =
-                (Rectangle) scene.getRoot().getChildrenUnmodifiable().get(0);
-
-        ((StubScene) SceneHelper.getPeer(scene)).getListener().touchEventBegin(
-                System.currentTimeMillis(), 1, false, false, false, false, false);
-        ((StubScene) SceneHelper.getPeer(scene)).getListener().touchEventNext(
-                TouchPoint.State.PRESSED, 1368, 110, 110, 110, 110);
-        ((StubScene) SceneHelper.getPeer(scene)).getListener().touchEventEnd();
-
-        ((StubScene) SceneHelper.getPeer(scene)).getListener().touchEventBegin(
-                System.currentTimeMillis(), 1, false, false, false, false, false);
-        ((StubScene) SceneHelper.getPeer(scene)).getListener().touchEventNext(
-                TouchPoint.State.PRESSED, 1, 110, 110, 110, 110);
-        ((StubScene) SceneHelper.getPeer(scene)).getListener().touchEventEnd();
-    }
-
     private Scene createScene() {
         final Group root = new Group();
 
         final Scene scene = new Scene(root, 400, 400);
 
