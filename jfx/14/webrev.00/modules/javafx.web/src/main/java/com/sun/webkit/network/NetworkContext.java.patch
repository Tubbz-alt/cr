diff a/modules/javafx.web/src/main/java/com/sun/webkit/network/NetworkContext.java b/modules/javafx.web/src/main/java/com/sun/webkit/network/NetworkContext.java
--- a/modules/javafx.web/src/main/java/com/sun/webkit/network/NetworkContext.java
+++ b/modules/javafx.web/src/main/java/com/sun/webkit/network/NetworkContext.java
@@ -60,28 +60,41 @@
     /**
      * The default value of the "http.maxConnections" system property.
      */
     private static final int DEFAULT_HTTP_MAX_CONNECTIONS = 5;
 
+    /**
+     * The default value of the maximum concurrent connections for
+     * new gen HTTP2 client
+     */
+    private static final int DEFAULT_HTTP2_MAX_CONNECTIONS = 20;
+
     /**
      * The buffer size for the shared pool of byte buffers.
      */
     private static final int BYTE_BUFFER_SIZE = 1024 * 40;
 
+
+    /**
+     * Can use HTTP2Loader
+     */
+    private static final boolean useHTTP2Loader;
     static {
         threadPool = new ThreadPoolExecutor(
                 THREAD_POOL_SIZE,
                 THREAD_POOL_SIZE,
                 THREAD_POOL_KEEP_ALIVE_TIME,
+
+        useHTTP2Loader = AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.valueOf(System.getProperty("com.sun.webkit.useHTTP2Loader", "true")));
     }
 
     /**
      * The shared pool of byte buffers.
      */
@@ -115,11 +128,11 @@
     }
 
     /**
      * Starts an asynchronous load or executes a synchronous one.
      */
-    private static URLLoader fwkLoad(WebPage webPage,
+    private static URLLoaderBase fwkLoad(WebPage webPage,
                                      boolean asynchronous,
                                      String url,
                                      String method,
                                      String headers,
                                      FormDataElement[] formDataElements,
@@ -141,10 +154,26 @@
                     formDataElements != null
                             ? Arrays.asList(formDataElements) : "[null]",
                     data,
                     Util.formatHeaders(headers)));
         }
+
+        if (useHTTP2Loader) {
+            final URLLoaderBase loader = HTTP2Loader.create(
+                webPage,
+                byteBufferPool,
+                asynchronous,
+                url,
+                method,
+                headers,
+                formDataElements,
+                data);
+            if (loader != null) {
+                return loader;
+            }
+        }
+
         URLLoader loader = new URLLoader(
                 webPage,
                 byteBufferPool,
                 asynchronous,
                 url,
@@ -182,10 +211,14 @@
         // Our implementation employs HttpURLConnection for all
         // HTTP exchanges, so return the value of the "http.maxConnections"
         // system property.
         int propValue = AccessController.doPrivileged(
                 (PrivilegedAction<Integer>) () -> Integer.getInteger("http.maxConnections", -1));
+
+        if (useHTTP2Loader) {
+            return propValue >= 0 ? propValue : DEFAULT_HTTP2_MAX_CONNECTIONS;
+        }
         return propValue >= 0 ? propValue : DEFAULT_HTTP_MAX_CONNECTIONS;
     }
 
     /**
      * Thread factory for URL loader threads.
