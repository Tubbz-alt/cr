diff a/build.gradle b/build.gradle
--- a/build.gradle
+++ b/build.gradle
@@ -2509,10 +2509,11 @@
     dependencies {
         testCompile project(":graphics").sourceSets.test.output
         testCompile project(":base").sourceSets.test.output
         compile project(':base')
         compile project(':graphics')
+        testCompile "de.sandec:JMemoryBuddy:0.1.3"
     }
 
     test {
         def cssDir = file("$buildDir/classes/java/main/${moduleName}/javafx")
         jvmArgs "-Djavafx.toolkit=test.com.sun.javafx.pgstub.StubToolkit",
diff a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ProgressIndicatorSkin.java b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ProgressIndicatorSkin.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ProgressIndicatorSkin.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ProgressIndicatorSkin.java
@@ -28,18 +28,20 @@
 import com.sun.javafx.scene.NodeHelper;
 import com.sun.javafx.scene.control.skin.Utils;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
+import java.util.function.Consumer;
 
 import javafx.animation.Animation;
 import javafx.animation.KeyFrame;
 import javafx.animation.KeyValue;
 import javafx.animation.Timeline;
 import javafx.beans.property.BooleanProperty;
 import javafx.beans.property.IntegerProperty;
 import javafx.beans.property.ObjectProperty;
+import javafx.beans.value.ObservableValue;
 import javafx.beans.value.WritableValue;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
 import javafx.geometry.NodeOrientation;
 import javafx.geometry.VPos;
@@ -53,10 +55,11 @@
 import javafx.scene.paint.Color;
 import javafx.scene.paint.Paint;
 import javafx.scene.shape.Arc;
 import javafx.scene.shape.ArcType;
 import javafx.scene.shape.Circle;
+import javafx.scene.text.Font;
 import javafx.scene.text.Text;
 import javafx.scene.text.TextBoundsType;
 import javafx.scene.transform.Scale;
 import javafx.util.Duration;
 import javafx.css.CssMetaData;
@@ -322,11 +325,14 @@
      **************************************************************************/
 
     void initialize() {
         boolean isIndeterminate = control.isIndeterminate();
         if (isIndeterminate) {
-            // clean up determinateIndicator
+            // clean up the old determinateIndicator
+            if(determinateIndicator != null) {
+                determinateIndicator.unregisterListener();
+            }
             determinateIndicator = null;
 
             // create spinner
             spinner = new IndeterminateSpinner(spinEnabled.get(), progressColor.get());
             getChildren().setAll(spinner);
@@ -539,10 +545,14 @@
 
             getChildren().setAll(indicator, progress, text, tick);
             updateProgress(control.getProgress());
         }
 
+        private void unregisterListener() {
+            unregisterChangeListeners(text.fontProperty());
+        }
+
         private void setFillOverride(Paint fillOverride) {
             if (fillOverride instanceof Color) {
                 Color c = (Color)fillOverride;
                 progress.setStyle("-fx-background-color: rgba("+((int)(255*c.getRed()))+","+((int)(255*c.getGreen()))+","+((int)(255*c.getBlue()))+","+c.getOpacity()+");");
             } else {
diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ProgressIndicatorSkinTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ProgressIndicatorSkinTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ProgressIndicatorSkinTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ProgressIndicatorSkinTest.java
@@ -25,20 +25,24 @@
 
 package test.javafx.scene.control.skin;
 
 import static org.junit.Assert.assertEquals;
 
+import de.sandec.jmemorybuddy.JMemoryBuddy;
 import javafx.beans.value.ObservableValue;
+import javafx.scene.Node;
 import javafx.scene.control.ProgressIndicator;
 import javafx.scene.Group;
+import javafx.scene.layout.StackPane;
 import javafx.scene.paint.Color;
 import javafx.scene.Scene;
 import javafx.scene.control.skin.ProgressIndicatorSkin;
 import javafx.scene.control.skin.ProgressIndicatorSkinShim;
 import javafx.scene.paint.Paint;
 import javafx.stage.Stage;
 
+import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 
 /**
  */
@@ -81,6 +85,30 @@
 
         public Paint getProgressColor() {
             return ProgressIndicatorSkinShim.getProgressColor(this);
         }
     }
+
+
+    @Test
+    public void memoryTest() {
+        ProgressIndicator indicator = new ProgressIndicator(-1);
+        JMemoryBuddy.memoryTest((checker) -> {
+            indicator.setSkin(new ProgressIndicatorSkin(indicator));
+            Scene scene = new Scene(indicator);
+            Stage stage = new Stage();
+            stage.setScene(scene);
+            stage.show();
+
+            indicator.setProgress(1.0);
+            Assert.assertTrue("size was: " + indicator.getChildrenUnmodifiable().size(), indicator.getChildrenUnmodifiable().size() == 1);
+
+            Node detIndicator = indicator.getChildrenUnmodifiable().get(0);
+            System.out.println(detIndicator.getClass().getSimpleName());
+            checker.assertCollectable(detIndicator);
+            indicator.setProgress(-1.0);
+            indicator.setProgress(1.0);
+
+            indicator.test_getRemoved().clear();
+        });
+    }
 }
diff a/modules/javafx.graphics/src/main/java/javafx/scene/Parent.java b/modules/javafx.graphics/src/main/java/javafx/scene/Parent.java
--- a/modules/javafx.graphics/src/main/java/javafx/scene/Parent.java
+++ b/modules/javafx.graphics/src/main/java/javafx/scene/Parent.java
@@ -1924,11 +1924,11 @@
     }
 
     /**
      * Note: The only user of this method is in unit test: Parent_structure_sync_Test.
      */
-    List<Node> test_getRemoved() {
+    public List<Node> test_getRemoved() {
         return removed;
     }
 
     /**
      * Note: The only user of this method is in unit test:
