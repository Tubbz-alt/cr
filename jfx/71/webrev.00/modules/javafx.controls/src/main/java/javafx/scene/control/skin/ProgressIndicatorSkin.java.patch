diff a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ProgressIndicatorSkin.java b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ProgressIndicatorSkin.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ProgressIndicatorSkin.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ProgressIndicatorSkin.java
@@ -28,18 +28,20 @@
 import com.sun.javafx.scene.NodeHelper;
 import com.sun.javafx.scene.control.skin.Utils;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
+import java.util.function.Consumer;
 
 import javafx.animation.Animation;
 import javafx.animation.KeyFrame;
 import javafx.animation.KeyValue;
 import javafx.animation.Timeline;
 import javafx.beans.property.BooleanProperty;
 import javafx.beans.property.IntegerProperty;
 import javafx.beans.property.ObjectProperty;
+import javafx.beans.value.ObservableValue;
 import javafx.beans.value.WritableValue;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
 import javafx.geometry.NodeOrientation;
 import javafx.geometry.VPos;
@@ -53,10 +55,11 @@
 import javafx.scene.paint.Color;
 import javafx.scene.paint.Paint;
 import javafx.scene.shape.Arc;
 import javafx.scene.shape.ArcType;
 import javafx.scene.shape.Circle;
+import javafx.scene.text.Font;
 import javafx.scene.text.Text;
 import javafx.scene.text.TextBoundsType;
 import javafx.scene.transform.Scale;
 import javafx.util.Duration;
 import javafx.css.CssMetaData;
@@ -322,11 +325,14 @@
      **************************************************************************/
 
     void initialize() {
         boolean isIndeterminate = control.isIndeterminate();
         if (isIndeterminate) {
-            // clean up determinateIndicator
+            // clean up the old determinateIndicator
+            if(determinateIndicator != null) {
+                determinateIndicator.unregisterListener();
+            }
             determinateIndicator = null;
 
             // create spinner
             spinner = new IndeterminateSpinner(spinEnabled.get(), progressColor.get());
             getChildren().setAll(spinner);
@@ -490,10 +496,11 @@
         private StackPane tick;
         private Arc arcShape;
         private Circle indicatorCircle;
         private double doneTextWidth;
         private double doneTextHeight;
+        private Consumer<ObservableValue<?>> fontListener = null;
 
         public DeterminateIndicator(ProgressIndicator control, ProgressIndicatorSkin s, Paint fillOverride) {
 
             getStyleClass().add("determinate-indicator");
 
@@ -504,14 +511,15 @@
 
             text = new Text((control.getProgress() >= 1) ? (DONE) : ("" + intProgress + "%"));
             text.setTextOrigin(VPos.TOP);
             text.getStyleClass().setAll("text", "percentage");
 
-            registerChangeListener(text.fontProperty(), o -> {
+            fontListener = o -> {
                 doneTextWidth = Utils.computeTextWidth(text.getFont(), DONE, 0);
                 doneTextHeight = Utils.computeTextHeight(text.getFont(), DONE, 0, TextBoundsType.LOGICAL_VERTICAL_CENTER);
-            });
+            };
+            registerChangeListener(text.fontProperty(), (Consumer<ObservableValue<?>>) fontListener);
 
             // The circular background for the progress pie piece
             indicator = new StackPane();
             indicator.setScaleShape(false);
             indicator.setCenterShape(false);
@@ -539,10 +547,14 @@
 
             getChildren().setAll(indicator, progress, text, tick);
             updateProgress(control.getProgress());
         }
 
+        private void unregisterListener() {
+            unregisterChangeListeners(text.fontProperty());
+        }
+
         private void setFillOverride(Paint fillOverride) {
             if (fillOverride instanceof Color) {
                 Color c = (Color)fillOverride;
                 progress.setStyle("-fx-background-color: rgba("+((int)(255*c.getRed()))+","+((int)(255*c.getGreen()))+","+((int)(255*c.getBlue()))+","+c.getOpacity()+");");
             } else {
