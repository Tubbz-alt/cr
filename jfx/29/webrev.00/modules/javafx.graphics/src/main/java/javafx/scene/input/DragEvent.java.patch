diff a/modules/javafx.graphics/src/main/java/javafx/scene/input/DragEvent.java b/modules/javafx.graphics/src/main/java/javafx/scene/input/DragEvent.java
--- a/modules/javafx.graphics/src/main/java/javafx/scene/input/DragEvent.java
+++ b/modules/javafx.graphics/src/main/java/javafx/scene/input/DragEvent.java
@@ -49,11 +49,11 @@
  * at this moment.
  * <p>
  * Drag entered/exited events behave similarly to mouse entered/exited
  * events, please see {@code MouseEvent} overview.
  *
- * <h3>Drag sources: initiating a drag and drop gesture</h3>
+ * <h2>Drag sources: initiating a drag and drop gesture</h2>
  *
  * When a drag gesture is detected, an application can decide whether to
  * start a drag and drop gesture or continue with a press-drag-release gesture.
  * <p>
  * The default drag detection mechanism uses mouse movements with a pressed
@@ -93,11 +93,11 @@
         event.consume();
     }
 });
  * </pre>
  *
- * <br><h3>Potential drop targets</h3>
+ * <br><h2>Potential drop targets</h2>
  *
  * <p>
  * After the drag and drop gesture has been started, any object
  * ({@code Node}, {@code Scene}) over which the mouse is dragged is
  * a potential drop target.
@@ -181,11 +181,11 @@
         event.consume();
     }
 });
  * </pre>
  *
- * <h3>Drag sources: finalizing drag and drop gesture</h3>
+ * <h2>Drag sources: finalizing drag and drop gesture</h2>
  *
  * <p>
  * After the gesture has been finished, whether by successful or unsuccessful
  * data transfer or being canceled, the {@code DRAG_DONE} event is sent to
  * the gesture source. The {@code getTransferMode()} method of the event
