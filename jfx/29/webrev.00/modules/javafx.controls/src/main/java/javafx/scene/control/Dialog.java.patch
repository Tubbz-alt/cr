diff a/modules/javafx.controls/src/main/java/javafx/scene/control/Dialog.java b/modules/javafx.controls/src/main/java/javafx/scene/control/Dialog.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/Dialog.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/Dialog.java
@@ -150,11 +150,11 @@
  * <p>There is no better or worse option of the three listed above, so developers
  * are encouraged to work to their own style preferences. The purpose of showing
  * the above is to help introduce developers to the {@link Optional} API, which
  * is new in Java 8 and may be foreign to many developers.
  *
- * <h3>Dialog Validation / Intercepting Button Actions</h3>
+ * <h2>Dialog Validation / Intercepting Button Actions</h2>
  *
  * <p>In some circumstances it is desirable to prevent a dialog from closing
  * until some aspect of the dialog becomes internally consistent (e.g. a form
  * inside the dialog has all fields in a valid state). To do this, users of the
  * dialogs API should become familiar with the
@@ -173,11 +173,11 @@
  *     if (!validateAndStore()) {
  *         event.consume();
  *     }
  * });}</pre>
  *
- * <h3>Dialog Closing Rules</h3>
+ * <h2>Dialog Closing Rules</h2>
  *
  * <p>It is important to understand what happens when a Dialog is closed, and
  * also how a Dialog can be closed, especially in abnormal closing situations
  * (such as when the 'X' button is clicked in a dialogs title bar, or when
  * operating system specific keyboard shortcuts (such as alt-F4 on Windows)
