diff a/modules/javafx.controls/src/main/java/javafx/scene/control/Pagination.java b/modules/javafx.controls/src/main/java/javafx/scene/control/Pagination.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/Pagination.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/Pagination.java
@@ -49,36 +49,36 @@
  * <p>
  * A Pagination control is used for navigation between pages of a single content,
  * which has been divided into smaller parts.
  * </p>
  *
- * <h3>Styling the page indicators</h3>
+ * <h2>Styling the page indicators</h2>
  * <p>
  * The control can be customized to display numeric page indicators or bullet style indicators by
  * setting the style class {@link #STYLE_CLASS_BULLET}.  The
  * {@link #maxPageIndicatorCountProperty() maxPageIndicatorCountProperty} can be used to change
  * the maximum number of page indicators.  The property value can also be changed
  * via CSS using -fx-max-page-indicator-count.
  *</p>
  *
- * <h3>Page count</h3>
+ * <h2>Page count</h2>
  * <p>
  * The {@link #pageCountProperty() pageCountProperty} controls the number of
  * pages this pagination control has.  If the page count is
  * not known {@link #INDETERMINATE} should be used as the page count.
  * </p>
  *
- * <h3>Page factory</h3>
+ * <h2>Page factory</h2>
  * <p>
  * The {@link #pageFactoryProperty() pageFactoryProperty} is a callback function
  * that is called when a page has been selected by the application or
  * the user.  The function is required for the functionality of the pagination
  * control.  The callback function should load and return the contents of the selected page.
  * Null should be returned if the selected page index does not exist.
  * </p>
  *
- * <h3>Creating a Pagination control:</h3>
+ * <h2>Creating a Pagination control:</h2>
  * <p>
  * A simple example of how to create a pagination control with ten pages and
  * each page containing text.
  * </p>
  *
