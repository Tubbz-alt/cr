diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/unicode/smpdtfmt.h b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/unicode/smpdtfmt.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/unicode/smpdtfmt.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/unicode/smpdtfmt.h
@@ -47,10 +47,11 @@
 class MessageFormat;
 class FieldPositionHandler;
 class TimeZoneFormat;
 class SharedNumberFormat;
 class SimpleDateFormatMutableNFs;
+class DateIntervalFormat;
 
 namespace number {
 class LocalizedNumberFormatter;
 }
 
@@ -1145,11 +1146,11 @@
 
     /**
      * Overrides base class method and
      * This method clears per field NumberFormat instances
      * previously set by {@see adoptNumberFormat(const UnicodeString&, NumberFormat*, UErrorCode)}
-     * @param adoptNF the NumbeferFormat used
+     * @param formatToAdopt the NumbeferFormat used
      * @stable ICU 54
      */
     void adoptNumberFormat(NumberFormat *formatToAdopt);
 
     /**
@@ -1160,11 +1161,11 @@
      * 1 symbol field is enough for multiple symbol field (so "y" will override "yy", "yyy")
      * If the field is not numeric, then override has no effect (like "MMM" will use abbreviation, not numerical field)
      * Per field NumberFormat can also be cleared in {@see DateFormat::setNumberFormat(const NumberFormat& newNumberFormat)}
      *
      * @param fields  the fields to override(like y)
-     * @param adoptNF the NumbeferFormat used
+     * @param formatToAdopt the NumbeferFormat used
      * @param status  Receives a status code, which will be U_ZERO_ERROR
      *                if the operation succeeds.
      * @stable ICU 54
      */
     void adoptNumberFormat(const UnicodeString& fields, NumberFormat *formatToAdopt, UErrorCode &status);
@@ -1215,10 +1216,11 @@
     const Locale& getSmpFmtLocale(void) const;
 #endif  /* U_HIDE_INTERNAL_API */
 
 private:
     friend class DateFormat;
+    friend class DateIntervalFormat;
 
     void initializeDefaultCentury(void);
 
     void initializeBooleanAttributes(void);
 
@@ -1595,10 +1597,11 @@
      */
     UDate                fDefaultCenturyStart;
 
     UBool                fHasMinute;
     UBool                fHasSecond;
+    UBool                fHasHanYearChar; // pattern contains the Han year character \u5E74
 
     /**
      * Sets fHasMinutes and fHasSeconds.
      */
     void                 parsePattern();
