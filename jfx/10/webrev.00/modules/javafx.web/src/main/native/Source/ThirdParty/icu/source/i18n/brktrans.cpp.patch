diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/brktrans.cpp b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/brktrans.cpp
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/brktrans.cpp
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/brktrans.cpp
@@ -8,10 +8,12 @@
 *   Date        Name        Description
 *   05/11/2008  Andy Heninger  Port from Java
 **********************************************************************
 */
 
+#include <utility>
+
 #include "unicode/utypes.h"
 
 #if  !UCONFIG_NO_TRANSLITERATION && !UCONFIG_NO_BREAK_ITERATION
 
 #include "unicode/brkiter.h"
@@ -77,12 +79,12 @@
         LocalPointer<UVector32> boundaries;
 
         {
             Mutex m;
             BreakTransliterator *nonConstThis = const_cast<BreakTransliterator *>(this);
-            boundaries.moveFrom(nonConstThis->cachedBoundaries);
-            bi.moveFrom(nonConstThis->cachedBI);
+            boundaries = std::move(nonConstThis->cachedBoundaries);
+            bi = std::move(nonConstThis->cachedBI);
         }
         if (bi.isNull()) {
             bi.adoptInstead(BreakIterator::createWordInstance(Locale::getEnglish(), status));
         }
         if (boundaries.isNull()) {
@@ -143,14 +145,14 @@
         // Return break iterator & boundaries vector to the cache.
         {
             Mutex m;
             BreakTransliterator *nonConstThis = const_cast<BreakTransliterator *>(this);
             if (nonConstThis->cachedBI.isNull()) {
-                nonConstThis->cachedBI.moveFrom(bi);
+                nonConstThis->cachedBI = std::move(bi);
             }
             if (nonConstThis->cachedBoundaries.isNull()) {
-                nonConstThis->cachedBoundaries.moveFrom(boundaries);
+                nonConstThis->cachedBoundaries = std::move(boundaries);
             }
         }
 
         // TODO:  do something with U_FAILURE(status);
         //        (need to look at transliterators overall, not just here.)
