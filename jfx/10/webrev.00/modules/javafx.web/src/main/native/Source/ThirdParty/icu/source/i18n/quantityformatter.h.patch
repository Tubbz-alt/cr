diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/quantityformatter.h b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/quantityformatter.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/quantityformatter.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/quantityformatter.h
@@ -25,10 +25,16 @@
 class PluralRules;
 class NumberFormat;
 class Formattable;
 class FieldPosition;
 
+namespace number {
+namespace impl {
+class NumberStringBuilder;
+}
+}
+
 /**
  * A plural aware formatter that is good for expressing a single quantity and
  * a unit.
  * <p>
  * First use the add() methods to add a pattern for each plural variant.
@@ -109,21 +115,44 @@
             FieldPosition &pos,
             UErrorCode &status) const;
 
     /**
      * Selects the standard plural form for the number/formatter/rules.
+     * TODO(13591): Remove this method.
      */
     static StandardPlural::Form selectPlural(
             const Formattable &number,
             const NumberFormat &fmt,
             const PluralRules &rules,
+    /**
+     * Formats a quantity and selects its plural form. The output is appended
+     * to a NumberStringBuilder in order to retain field information.
+     *
+     * @param quantity The number to format.
+     * @param fmt The formatter to use to format the number.
+     * @param rules The rules to use to select the plural form of the
+     *              formatted number.
+     * @param output Where to append the result of the format operation.
+     * @param pluralForm Output variable populated with the plural form of the
+     *                   formatted number.
+     * @param status Set if an error occurs.
+     */
+    static void formatAndSelect(
+            double quantity,
+            const NumberFormat& fmt,
+            const PluralRules& rules,
+            number::impl::NumberStringBuilder& output,
+            StandardPlural::Form& pluralForm,
+            UErrorCode& status);
+
     /**
      * Formats the pattern with the value and adjusts the FieldPosition.
+     * TODO: Remove?
      */
     static UnicodeString &format(
             const SimpleFormatter &pattern,
             const UnicodeString &value,
             UnicodeString &appendTo,
