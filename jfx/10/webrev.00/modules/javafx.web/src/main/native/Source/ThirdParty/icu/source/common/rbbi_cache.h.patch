diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/rbbi_cache.h b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/rbbi_cache.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/rbbi_cache.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/rbbi_cache.h
@@ -93,11 +93,11 @@
                             } else {
                                 fBufIdx = modChunkSize(fBufIdx + 1);
                                 fTextIdx = fBI->fPosition = fBoundaries[fBufIdx];
                                 fBI->fRuleStatusIndex = fStatuses[fBufIdx];
                             }
-                };
+                }
 
 
     void        nextOL();
     void        previous(UErrorCode &status);
 
@@ -176,11 +176,11 @@
     UBool                   seek(int32_t startPosition);
 
     void dumpCache();
 
   private:
-    static inline int32_t   modChunkSize(int index) { return index & (CACHE_SIZE - 1); };
+    static inline int32_t   modChunkSize(int index) { return index & (CACHE_SIZE - 1); }
 
     static constexpr int32_t CACHE_SIZE = 128;
     static_assert((CACHE_SIZE & (CACHE_SIZE-1)) == 0, "CACHE_SIZE must be power of two.");
 
     RuleBasedBreakIterator *fBI;
