diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/islamcal.cpp b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/islamcal.cpp
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/islamcal.cpp
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/islamcal.cpp
@@ -52,11 +52,10 @@
 #endif
 
 
 // --- The cache --
 // cache of months
-static UMutex astroLock = U_MUTEX_INITIALIZER;  // pod bay door lock
 static icu::CalendarCache *gMonthCache = NULL;
 static icu::CalendarAstronomer *gIslamicCalendarAstro = NULL;
 
 U_CDECL_BEGIN
 static UBool calendar_islamic_cleanup(void) {
@@ -221,13 +220,11 @@
         break;
     case UMALQURA:
         sType = "islamic-umalqura";
         break;
     default:
-        U_ASSERT(false); // out of range
-        sType = "islamic";  // "islamic" is used as the generic type
-        break;
+        UPRV_UNREACHABLE; // out of range
     }
     return sType;
 }
 
 Calendar* IslamicCalendar::clone() const {
@@ -471,10 +468,11 @@
 */
 double IslamicCalendar::moonAge(UDate time, UErrorCode &status)
 {
     double age = 0;
 
+    static UMutex astroLock = U_MUTEX_INITIALIZER;      // pod bay door lock
     umtx_lock(&astroLock);
     if(gIslamicCalendarAstro == NULL) {
         gIslamicCalendarAstro = new CalendarAstronomer();
         if (gIslamicCalendarAstro == NULL) {
             status = U_MEMORY_ALLOCATION_ERROR;
@@ -673,12 +671,11 @@
                 }
                 year = y;
                 month = m;
             }
     } else { // invalid 'civil'
-      U_ASSERT(false); // should not get here, out of range
-      year=month=0;
+      UPRV_UNREACHABLE; // should not get here, out of range
     }
 
     dayOfMonth = (days - monthStart(year, month)) + 1;
 
     // Now figure out the day of the year.
