diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_skeletons.h b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_skeletons.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_skeletons.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_skeletons.h
@@ -120,11 +120,12 @@
  *
  * @param skeletonString
  *            A number skeleton string, possibly not in its shortest form.
  * @return An UnlocalizedNumberFormatter with behavior defined by the given skeleton string.
  */
-UnlocalizedNumberFormatter create(const UnicodeString& skeletonString, UErrorCode& status);
+UnlocalizedNumberFormatter create(
+    const UnicodeString& skeletonString, UParseError* perror, UErrorCode& status);
 
 /**
  * Create a skeleton string corresponding to the given NumberFormatter.
  *
  * @param macros
@@ -136,11 +137,11 @@
 /**
  * Converts from a skeleton string to a MacroProps. This method contains the primary parse loop.
  *
  * Internal: use the create() endpoint instead of this function.
  */
-MacroProps parseSkeleton(const UnicodeString& skeletonString, UErrorCode& status);
+MacroProps parseSkeleton(const UnicodeString& skeletonString, int32_t& errOffset, UErrorCode& status);
 
 /**
  * Given that the current segment represents a stem, parse it and save the result.
  *
  * @return The next state after parsing this stem, corresponding to what subset of options to expect.
@@ -172,11 +173,11 @@
 
 Precision precision(skeleton::StemEnum stem);
 
 UNumberFormatRoundingMode roundingMode(skeleton::StemEnum stem);
 
-UGroupingStrategy groupingStrategy(skeleton::StemEnum stem);
+UNumberGroupingStrategy groupingStrategy(skeleton::StemEnum stem);
 
 UNumberUnitWidth unitWidth(skeleton::StemEnum stem);
 
 UNumberSignDisplay signDisplay(skeleton::StemEnum stem);
 
@@ -190,11 +191,11 @@
  */
 namespace enum_to_stem_string {
 
 void roundingMode(UNumberFormatRoundingMode value, UnicodeString& sb);
 
-void groupingStrategy(UGroupingStrategy value, UnicodeString& sb);
+void groupingStrategy(UNumberGroupingStrategy value, UnicodeString& sb);
 
 void unitWidth(UNumberUnitWidth value, UnicodeString& sb);
 
 void signDisplay(UNumberSignDisplay value, UnicodeString& sb);
 
