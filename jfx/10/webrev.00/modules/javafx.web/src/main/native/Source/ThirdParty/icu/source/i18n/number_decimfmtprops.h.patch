diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_decimfmtprops.h b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_decimfmtprops.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_decimfmtprops.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_decimfmtprops.h
@@ -19,14 +19,20 @@
 
 // Export an explicit template instantiation of the LocalPointer that is used as a
 // data member of CurrencyPluralInfoWrapper.
 // (When building DLLs for Windows this is required.)
 #if U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN
+#if defined(_MSC_VER)
 // Ignore warning 4661 as LocalPointerBase does not use operator== or operator!=
-#pragma warning(suppress: 4661)
+#pragma warning(push)
+#pragma warning(disable: 4661)
+#endif
 template class U_I18N_API LocalPointerBase<CurrencyPluralInfo>;
 template class U_I18N_API LocalPointer<CurrencyPluralInfo>;
+#if defined(_MSC_VER)
+#pragma warning(pop)
+#endif
 #endif
 
 namespace number {
 namespace impl {
 
@@ -147,10 +153,15 @@
      * Checks for equality to the default DecimalFormatProperties, but ignores the prescribed set of
      * options for fast-path formatting.
      */
     bool equalsDefaultExceptFastFormat() const;
 
+    /**
+     * Returns the default DecimalFormatProperties instance.
+     */
+    static const DecimalFormatProperties& getDefault();
+
   private:
     bool _equals(const DecimalFormatProperties& other, bool ignoreForFastFormat) const;
 };
 
 } // namespace impl
