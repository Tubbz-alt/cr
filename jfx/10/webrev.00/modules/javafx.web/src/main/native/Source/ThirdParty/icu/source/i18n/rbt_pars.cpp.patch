diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/rbt_pars.cpp b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/rbt_pars.cpp
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/rbt_pars.cpp
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/rbt_pars.cpp
@@ -192,13 +192,13 @@
     // Note that we cannot use data.lookupSet() because the
     // set array has not been constructed yet.
     const UnicodeFunctor* set = NULL;
     int32_t i = ch - data->variablesBase;
     if (i >= 0 && i < variablesVector->size()) {
-        int32_t i = ch - data->variablesBase;
-        set = (i < variablesVector->size()) ?
-            (UnicodeFunctor*) variablesVector->elementAt(i) : 0;
+        int32_t j = ch - data->variablesBase;
+        set = (j < variablesVector->size()) ?
+            (UnicodeFunctor*) variablesVector->elementAt(j) : 0;
     }
     return set;
 }
 
 /**
@@ -1106,21 +1106,21 @@
                 data->variables[j] =
                     static_cast<UnicodeFunctor *>(variablesVector.elementAt(j));
             }
 
             data->variableNames.removeAll();
-            int32_t pos = UHASH_FIRST;
-            const UHashElement* he = variableNames.nextElement(pos);
+            int32_t p = UHASH_FIRST;
+            const UHashElement* he = variableNames.nextElement(p);
             while (he != NULL) {
                 UnicodeString* tempus = (UnicodeString*)(((UnicodeString*)(he->value.pointer))->clone());
                 if (tempus == NULL) {
                     status = U_MEMORY_ALLOCATION_ERROR;
                     return;
                 }
                 data->variableNames.put(*((UnicodeString*)(he->key.pointer)),
                     tempus, status);
-                he = variableNames.nextElement(pos);
+                he = variableNames.nextElement(p);
             }
         }
         variablesVector.removeAllElements();   // keeps them from getting deleted when we succeed
 
         // Index the rules
