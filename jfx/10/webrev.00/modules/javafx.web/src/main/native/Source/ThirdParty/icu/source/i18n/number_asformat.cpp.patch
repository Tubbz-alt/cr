diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_asformat.cpp b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_asformat.cpp
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_asformat.cpp
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/number_asformat.cpp
@@ -60,16 +60,16 @@
         return appendTo;
     }
     // always return first occurrence:
     pos.setBeginIndex(0);
     pos.setEndIndex(0);
-    bool found = data.string.nextFieldPosition(pos, status);
+    bool found = data.getStringRef().nextFieldPosition(pos, status);
     if (found && appendTo.length() != 0) {
         pos.setBeginIndex(pos.getBeginIndex() + appendTo.length());
         pos.setEndIndex(pos.getEndIndex() + appendTo.length());
     }
-    appendTo.append(data.string.toTempUnicodeString());
+    appendTo.append(data.getStringRef().toTempUnicodeString());
     return appendTo;
 }
 
 UnicodeString& LocalizedNumberFormatterAsFormat::format(const Formattable& obj, UnicodeString& appendTo,
                                                         FieldPositionIterator* posIter,
@@ -82,14 +82,14 @@
     }
     fFormatter.formatImpl(&data, status);
     if (U_FAILURE(status)) {
         return appendTo;
     }
-    appendTo.append(data.string.toTempUnicodeString());
+    appendTo.append(data.getStringRef().toTempUnicodeString());
     if (posIter != nullptr) {
         FieldPositionIteratorHandler fpih(posIter, status);
-        data.string.getAllFieldPositions(fpih, status);
+        data.getStringRef().getAllFieldPositions(fpih, status);
     }
     return appendTo;
 }
 
 void LocalizedNumberFormatterAsFormat::parseObject(const UnicodeString&, Formattable&,
