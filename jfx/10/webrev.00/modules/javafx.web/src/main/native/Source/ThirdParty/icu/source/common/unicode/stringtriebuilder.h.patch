diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/unicode/stringtriebuilder.h b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/unicode/stringtriebuilder.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/unicode/stringtriebuilder.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/unicode/stringtriebuilder.h
@@ -24,12 +24,14 @@
  * \file
  * \brief C++ API: Builder API for trie builders
  */
 
 // Forward declaration.
+/// \cond
 struct UHashtable;
 typedef struct UHashtable UHashtable;
+/// \endcond
 
 /**
  * Build options for BytesTrieBuilder and CharsTrieBuilder.
  * @stable ICU 4.8
  */
@@ -62,11 +64,11 @@
  */
 class U_COMMON_API StringTrieBuilder : public UObject {
 public:
 #ifndef U_HIDE_INTERNAL_API
     /** @internal */
-    static UBool hashNode(const void *node);
+    static int32_t hashNode(const void *node);
     /** @internal */
     static UBool equalNodes(const void *left, const void *right);
 #endif  /* U_HIDE_INTERNAL_API */
 
 protected:
@@ -186,11 +188,14 @@
     /** @internal */
     UHashtable *nodes;
 
     // Do not conditionalize the following with #ifndef U_HIDE_INTERNAL_API,
     // it is needed for layout of other objects.
-    /** @internal */
+    /**
+     * @internal
+     * \cond
+     */
     class Node : public UObject {
     public:
         Node(int32_t initialHash) : hash(initialHash), offset(0) {}
         inline int32_t hashCode() const { return hash; }
         // Handles node==NULL.
@@ -389,11 +394,13 @@
         virtual void write(StringTrieBuilder &builder);
     protected:
         int32_t length;
         Node *next;  // A branch sub-node.
     };
+
 #endif  /* U_HIDE_INTERNAL_API */
+    /// \endcond
 
     /** @internal */
     virtual Node *createLinearMatchNode(int32_t i, int32_t unitIndex, int32_t length,
                                         Node *nextNode) const = 0;
 
