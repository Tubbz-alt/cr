diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/alphaindex.cpp b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/alphaindex.cpp
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/alphaindex.cpp
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/alphaindex.cpp
@@ -509,12 +509,12 @@
         if (!current.startsWith(BASE, BASE_LENGTH) &&
                 hasMultiplePrimaryWeights(*collatorPrimaryOnly_, variableTop, current,
                                           ces, errorCode) &&
                 current.charAt(current.length() - 1) != 0xFFFF /* !current.endsWith("\uffff") */) {
             // "AE-ligature" or "Sch" etc.
-            for (int32_t i = bucketList->size() - 2;; --i) {
-                Bucket *singleBucket = getBucket(*bucketList, i);
+            for (int32_t j = bucketList->size() - 2;; --j) {
+                Bucket *singleBucket = getBucket(*bucketList, j);
                 if (singleBucket->labelType_ != U_ALPHAINDEX_NORMAL) {
                     // There is no single-character bucket since the last
                     // underflow or inflow label.
                     break;
                 }
@@ -606,12 +606,12 @@
     if (U_FAILURE(errorCode)) {
         return NULL;
     }
     // Do not call publicBucketList->setDeleter():
     // This vector shares its objects with the bucketList.
-    for (int32_t i = 0; i < bucketList->size(); ++i) {
-        bucket = getBucket(*bucketList, i);
+    for (int32_t j = 0; j < bucketList->size(); ++j) {
+        bucket = getBucket(*bucketList, j);
         if (bucket->displayBucket_ == NULL) {
             publicBucketList->addElement(bucket, errorCode);
         }
     }
     if (U_FAILURE(errorCode)) { return NULL; }
