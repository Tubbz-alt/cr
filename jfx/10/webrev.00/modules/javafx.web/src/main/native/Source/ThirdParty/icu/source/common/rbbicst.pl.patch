diff a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/rbbicst.pl b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/rbbicst.pl
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/rbbicst.pl
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/rbbicst.pl
@@ -262,20 +262,20 @@
     foreach $act (sort keys %actions) {
         print "     static final short $act = $n;\n";
         $n++;
     }
     print " \n";
-    
+
     #
     # Emit constants for char class names
     #
     foreach $setName (sort keys %charClasses) {
        print "     static final short kRuleSet_$setName = $charClasses{$setName};\n";
     }
     print "\n\n";
-    
-    
+
+
     print "   static class RBBIRuleTableElement { \n";
     print "      short      fAction; \n";
     print "      short      fCharClass; \n";
     print "      short      fNextState; \n";
     print "      short      fPushState; \n";
@@ -289,48 +289,48 @@
     print "      fNextChar  = nc; \n";
     print "      fStateName = sn; \n";
     print "   } \n";
     print "   }; \n";
     print "  \n";
-    
-    
+
+
     print "    static RBBIRuleTableElement[] gRuleParseStateTable = { \n ";
-    print "      new RBBIRuleTableElement(doNOP, 0, 0,0,  true,   null )     //  0 \n";  #output the unused state 0. 
+    print "      new RBBIRuleTableElement(doNOP, 0, 0,0,  true,   null )     //  0 \n";  #output the unused state 0.
     for ($state=1; $state < $num_states; $state++) {
         print "     , new RBBIRuleTableElement($state_func_name[$state],";
         if ($state_literal_chars[$state] ne "") {
             $c = $state_literal_chars[$state];
-            print("'$c', "); 
+            print("'$c', ");
         }else {
             print " $charClasses{$state_char_class[$state]},";
         }
         print " $states{$state_dest_state[$state]},";
- 
+
         # The push-state field is optional.  If omitted, fill field with a zero, which flags
         #   the state machine that there is no push state.
         if ($state_push_state[$state] eq "") {
             print "0, ";
         } else {
             print " $states{$state_push_state[$state]},";
         }
         print " $state_flag[$state], ";
- 
+
         # if this is the first row of the table for this state, put out the state name.
         if ($stateNames[$state] ne "") {
             print "  \"$stateNames[$state]\") ";
         } else {
             print "  null ) ";
         }
-            
+
         # Put out a comment showing the number (index) of this state row,
         print "    //  $state ";
         print "\n";
     }
     print " };\n";
 
     print "}; \n";
-    
+
 }
 else
 {
     #
     #  C++ Output ...
