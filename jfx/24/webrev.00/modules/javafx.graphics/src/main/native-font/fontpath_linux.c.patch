diff a/modules/javafx.graphics/src/main/native-font/fontpath_linux.c b/modules/javafx.graphics/src/main/native-font/fontpath_linux.c
--- a/modules/javafx.graphics/src/main/native-font/fontpath_linux.c
+++ b/modules/javafx.graphics/src/main/native-font/fontpath_linux.c
@@ -400,14 +400,15 @@
             closeFontConfig(libfontconfig, JNI_FALSE);
             return JNI_FALSE;
         }
         fontCount = 0;
         minGlyphs = 20;
+        FcCharSet *unionCharset = NULL;
         for (j=0; j<nfonts; j++) {
             FcPattern *fontPattern = fontset->fonts[j];
             FcChar8 *fontformat;
-            FcCharSet *unionCharset = NULL, *charset;
+            FcCharSet *charset;
 
             fontformat = NULL;
             (*FcPatternGetString)(fontPattern, FC_FONTFORMAT, 0, &fontformat);
             /* We only want TrueType fonts for Java FX */
             if (fontformat != NULL
@@ -454,10 +455,17 @@
             (*FcPatternGetString)(fontPattern, FC_STYLE, 0, &styleStr[j]);
             (*FcPatternGetString)(fontPattern, FC_FULLNAME, 0, &fullname[j]);
             if (!includeFallbacks) {
                 break;
             }
+            if (fontCount == 254) {
+                /* Upstream Java code currently stores this in a byte;
+                 * And we need one slot free for when this sequence is
+                 * used as a fallback sequeunce.
+                 */
+                break;
+            }
         }
 
         /* Once we get here 'fontCount' is the number of returned fonts
          * we actually want to use, so we create 'fcFontArr' of that length.
          * The non-null entries of "family[]" etc are those fonts.
