diff a/modules/javafx.web/src/test/java/test/javafx/scene/web/DOMTest.java b/modules/javafx.web/src/test/java/test/javafx/scene/web/DOMTest.java
--- a/modules/javafx.web/src/test/java/test/javafx/scene/web/DOMTest.java
+++ b/modules/javafx.web/src/test/java/test/javafx/scene/web/DOMTest.java
@@ -32,11 +32,10 @@
 import static org.junit.Assert.assertTrue;
 import static org.junit.Assert.fail;
 
 import javafx.scene.web.WebEngine;
 
-import org.junit.Ignore;
 import org.junit.Test;
 import org.w3c.dom.*;
 import org.w3c.dom.css.*;
 import org.w3c.dom.events.*;
 import org.w3c.dom.html.*;
@@ -289,11 +288,10 @@
             HTMLImageElement eli = (HTMLImageElement) inputsi.item(0);
             assertEquals("Image element typification", "file:///C:/test.png", eli.getSrc());
         });
     }
 
-    @Ignore("Incorrect test, refer JDK-8210955")
     @Test public void testEventListenerCascade() {
         final Document doc = getDocumentFor("src/test/resources/test/html/dom.html");
         submit(() -> {
             HTMLDocument htmlDoc = (HTMLDocument)doc;
             final HTMLBodyElement body = (HTMLBodyElement)htmlDoc.getBody();
@@ -340,19 +338,19 @@
 
             EventListener listener1 = evt -> {
                 EventTarget src = ((MouseEvent) evt).getTarget();
                 ((HTMLBodyElement) src).setClassName("newTestClass");
             };
-            ((EventTarget)body).addEventListener("click", listener1, true);
+            ((EventTarget)body).addEventListener("click", listener1, false);
             ((EventTarget)body).dispatchEvent(evClick);
             assertEquals("Java EventHandler does not work directly", "newTestClass", body.getClassName());
 
             EventListener listener2 = evt -> {
                 //OK: stacked ScriptExecutionContext
                 listenerJS.handleEvent(evt);
             };
-            ((EventTarget)body).addEventListener("click", listener2, true);
+            ((EventTarget)body).addEventListener("click", listener2, false);
             ((EventTarget)body).dispatchEvent(evClick);
             assertEquals("JS EventHandler does not work from Java call", "testClass", body.getClassName());
         });
     }
 
