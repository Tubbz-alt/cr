diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/ComplexTextController.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/ComplexTextController.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/ComplexTextController.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/ComplexTextController.cpp
@@ -75,11 +75,11 @@
     }
 
     TextLayout(RenderText& text, const FontCascade& font, float xPos)
         : m_font(font)
         , m_run(constructTextRun(text, xPos))
-        , m_controller(std::make_unique<ComplexTextController>(m_font, m_run, true))
+        , m_controller(makeUnique<ComplexTextController>(m_font, m_run, true))
     {
     }
 
     float width(unsigned from, unsigned len, HashSet<const Font*>* fallbackFonts)
     {
@@ -786,12 +786,11 @@
                 // Handle justification and word-spacing.
                 bool ideograph = FontCascade::isCJKIdeographOrSymbol(ch);
                 if (treatAsSpace || ideograph || forceLeadingExpansion || forceTrailingExpansion) {
                     // Distribute the run's total expansion evenly over all expansion opportunities in the run.
                     if (m_expansion) {
-                        bool expandLeft, expandRight;
-                        std::tie(expandLeft, expandRight) = expansionLocation(ideograph, treatAsSpace, m_run.ltr(), afterExpansion, forbidLeadingExpansion, forbidTrailingExpansion, forceLeadingExpansion, forceTrailingExpansion);
+                        auto [expandLeft, expandRight] = expansionLocation(ideograph, treatAsSpace, m_run.ltr(), afterExpansion, forbidLeadingExpansion, forbidTrailingExpansion, forceLeadingExpansion, forceTrailingExpansion);
                         if (expandLeft) {
                             m_expansion -= m_expansionPerOpportunity;
                             // Increase previous width
                             if (m_adjustedBaseAdvances.isEmpty()) {
                                 advance.expand(m_expansionPerOpportunity, 0);
