diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
@@ -1048,16 +1048,21 @@
 
     if (size_assigned && w <= 1 && h <= 1 && (geometry.final_width.value > 1 ||
                                              geometry.final_height.value > 1)) {
         // skip artifact
         return;
+
+    }
+
+    //JDK-8232811: update the geometry only after window pops to avoid conflicting events while updating sizes
+    if (map_received) {
+        geometry.final_width.value = w;
+        geometry.final_width.type = BOUNDSTYPE_CONTENT;
+        geometry.final_height.value = h;
+        geometry.final_height.type = BOUNDSTYPE_CONTENT;
     }
 
-    geometry.final_width.value = w;
-    geometry.final_width.type = BOUNDSTYPE_CONTENT;
-    geometry.final_height.value = h;
-    geometry.final_height.type = BOUNDSTYPE_CONTENT;
     geometry_set_window_x(&geometry, x);
     geometry_set_window_y(&geometry, y);
 
     if (jview) {
         mainEnv->CallVoidMethod(jview, jViewNotifyResize,
@@ -1065,10 +1070,16 @@
                 event->height);
         CHECK_JNI_EXCEPTION(mainEnv)
         mainEnv->CallVoidMethod(jview, jViewNotifyView,
                 com_sun_glass_events_ViewEvent_MOVE);
         CHECK_JNI_EXCEPTION(mainEnv)
+
+        //JDK-8193502: Moved here from WindowContextBase::set_view because set_view is called
+        //first and the size is not set yet. This also guarantees that the size will be correct
+        //see: gtk_window_get_size doc for more context.
+        mainEnv->CallVoidMethod(jview, jViewNotifyResize, w, h);
+        CHECK_JNI_EXCEPTION(mainEnv);
     }
     if (jwindow) {
         mainEnv->CallVoidMethod(jwindow, jWindowNotifyResize,
                 (is_maximized)
                     ? com_sun_glass_events_WindowEvent_MAXIMIZE
@@ -1279,19 +1290,12 @@
             GdkWindowHints hints = (GdkWindowHints)(GDK_HINT_MIN_SIZE | GDK_HINT_MAX_SIZE);
             geom.min_width = geom.max_width = newWidth;
             geom.min_height = geom.max_height = newHeight;
             gtk_window_set_geometry_hints(GTK_WINDOW(gtk_widget), NULL, &geom, hints);
         }
-        gtk_window_resize(GTK_WINDOW(gtk_widget), newWidth, newHeight);
 
-        //JDK-8193502: Moved here from WindowContextBase::set_view because set_view is called
-        //first and the size is not set yet. This also guarantees that the size will be correct
-        //see: gtk_window_get_size doc for more context.
-        if (jview) {
-            mainEnv->CallVoidMethod(jview, jViewNotifyResize, newWidth, newHeight);
-            CHECK_JNI_EXCEPTION(mainEnv);
-        }
+        gtk_window_resize(GTK_WINDOW(gtk_widget), newWidth, newHeight);
     }
 }
 
 void WindowContextTop::applyShapeMask(void* data, uint width, uint height)
 {
