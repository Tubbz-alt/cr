diff a/tests/system/src/test/java/test/robot/javafx/scene/dialog/DialogWithOwnerSizingTest.java b/tests/system/src/test/java/test/robot/javafx/scene/dialog/DialogWithOwnerSizingTest.java
--- a/tests/system/src/test/java/test/robot/javafx/scene/dialog/DialogWithOwnerSizingTest.java
+++ b/tests/system/src/test/java/test/robot/javafx/scene/dialog/DialogWithOwnerSizingTest.java
@@ -29,11 +29,10 @@
 import javafx.application.Platform;
 import javafx.scene.Scene;
 import javafx.scene.control.Button;
 import javafx.scene.control.ButtonType;
 import javafx.scene.control.Dialog;
-import javafx.scene.control.DialogEvent;
 import javafx.scene.robot.Robot;
 import javafx.stage.Stage;
 import javafx.stage.StageStyle;
 import javafx.stage.WindowEvent;
 import javafx.scene.input.MouseButton;
@@ -45,11 +44,11 @@
 import test.util.Util;
 
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-//see JDK8193502
+//see JDK-8193502
 public class DialogWithOwnerSizingTest {
     static Robot robot;
     static Button button;
     static Stage stage;
     static Scene scene;
@@ -62,31 +61,32 @@
     @Test(timeout = 15000)
     public void dialogWithOwnerSizingTest() throws Exception {
         Thread.sleep(500);
         clickButton();
         Thread.sleep(500);
-        Assert.assertEquals(dialog.getDialogPane().getWidth(), dialog2.getDialogPane().getWidth(), 0.0);
-        Assert.assertEquals(dialog.getDialogPane().getHeight(), dialog2.getDialogPane().getHeight(), 0.0);
-        hide();
-    }
 
+        try {
+            Assert.assertEquals(dialog2.getDialogPane().getWidth(), dialog.getDialogPane().getWidth(), 2.0);
+            Assert.assertEquals(dialog2.getDialogPane().getHeight(), dialog.getDialogPane().getHeight(), 2.0);
+        } finally {
+            hide();
+        }
+    }
 
     private void clickButton() throws Exception {
         dialogShownLatch = new CountDownLatch(2);
         mouseClick(button.getLayoutX() + button.getWidth() / 2, button.getLayoutY() + button.getHeight() / 2);
 
-        Thread.sleep(400);
         waitForLatch(dialogShownLatch, 10, "Failed to show Dialog");
     }
 
     private void hide() throws Exception {
         dialogHideLatch = new CountDownLatch(2);
         Platform.runLater(() -> {
             dialog.close();
             dialog2.close();
         });
-        Thread.sleep(600);
         waitForLatch(dialogHideLatch, 10, "Failed to hide Dialog");
     }
 
     @BeforeClass
     public static void initFX() throws Exception {
@@ -113,10 +113,11 @@
     public static class SizingTestApp extends Application {
         @Override
         public void start(Stage primaryStage) {
             robot = new Robot();
             stage = primaryStage;
+            stage.setAlwaysOnTop(true);
 
             button = new Button("Open Dialogs");
 
             scene = new Scene(button, 200, 200);
             stage.setScene(scene);
