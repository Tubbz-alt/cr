diff a/modules/javafx.web/src/test/java/test/com/sun/webkit/network/CookieManagerTest.java b/modules/javafx.web/src/test/java/test/com/sun/webkit/network/CookieManagerTest.java
--- a/modules/javafx.web/src/test/java/test/com/sun/webkit/network/CookieManagerTest.java
+++ b/modules/javafx.web/src/test/java/test/com/sun/webkit/network/CookieManagerTest.java
@@ -405,14 +405,11 @@
         assertEquals("baz=qux; foo=bar", get("http://example.org/"));
     }
 
     /**
      * Tests if put() correctly overwrites expired cookie.
-     * This test is disabled because it takes considerable amount of time
-     * to run.
      */
-    @Ignore
     @Test
     public void testPutOverwriteExpired() {
         put("http://example.org/", "foo=bar; Max-Age=1; HttpOnly");
         assertEquals("", get("javascript://example.org/"));
 
@@ -495,14 +492,11 @@
     }
 
     /**
      * Tests if put() correctly purges individual domains
      * and takes into account cookie expiry.
-     * This test is disabled because it takes considerable amount of time
-     * to run.
      */
-    @Ignore
     @Test
     public void testPutPurgeDomainAfterExpiry() {
         for (int i = 0; i < 25; i++) {
             put("http://example.org/", fmt("foo%1$d=bar%1$d", i));
         }
@@ -545,14 +539,11 @@
         assertEquals(3994, count);
     }
 
     /**
      * Tests if put() correctly purges cookies globally.
-     * This test is disabled because it takes considerable amount of time
-     * to run.
      */
-    @Ignore
     @Test
     public void testPutPurgeCookiesGlobally2() {
         String urip = "http://example%d.org/";
         for (int i = 0; i < 1001; i++) {
             put(fmt(urip, i), fmt("foo%1$d=bar%1$d", i));
@@ -577,14 +568,11 @@
         }
     }
 
     /**
      * Tests if put() correctly purges cookies globally.
-     * This test is disabled because it takes considerable amount of time
-     * to run.
      */
-    @Ignore
     @Test
     public void testPutPurgeCookiesGlobally3() {
         String urip = "http://example%d.org/";
         for (int i = 0; i < 2002; i++) {
             put(fmt(urip, i), fmt("foo%1$d=bar%1$d", i));
@@ -610,14 +598,11 @@
     }
 
     /**
      * Tests if put() correctly purges cookies globally and takes
      * into account cookie expiry.
-     * This test is disabled because it takes considerable amount of time
-     * to run.
      */
-    @Ignore
     @Test
     public void testPutPurgeCookiesGloballyAfterExpiry() {
         String urip = "http://example%d.org/";
         for (int i = 0; i < 2000; i++) {
             put(fmt(urip, i), fmt("foo%1$d=bar%1$d", i));
diff a/modules/javafx.web/src/test/java/test/javafx/scene/web/CallbackTest.java b/modules/javafx.web/src/test/java/test/javafx/scene/web/CallbackTest.java
--- a/modules/javafx.web/src/test/java/test/javafx/scene/web/CallbackTest.java
+++ b/modules/javafx.web/src/test/java/test/javafx/scene/web/CallbackTest.java
@@ -86,11 +86,10 @@
     private void clear() {
         mainUi.clear();
         popupUi.clear();
     }
 
-    @Ignore("RT-34508")
     @Test public void testDefaultPopup() {
         clear();
         executeScript(JS_OPEN_DEFAULT);
         checkDefaultPopup();
 
@@ -104,11 +103,10 @@
         mainUi.checkCalled(CREATE_POPUP, true, true, true, true);
         popupUi.checkCalled(RESIZED);
         popupUi.checkCalled(VISIBILITY_CHANGED, true);
     }
 
-    @Ignore("RT-34508")
     @Test public void testCustomPopup() {
         clear();
         executeScript(JS_OPEN);
         checkCustomPopup();
 
diff a/modules/javafx.web/src/test/java/test/javafx/scene/web/LeakTest.java b/modules/javafx.web/src/test/java/test/javafx/scene/web/LeakTest.java
--- a/modules/javafx.web/src/test/java/test/javafx/scene/web/LeakTest.java
+++ b/modules/javafx.web/src/test/java/test/javafx/scene/web/LeakTest.java
@@ -54,11 +54,10 @@
 
 public class LeakTest extends TestBase {
 
     private static final int SLEEP_TIME = 1000;
 
-    @Ignore // RT-26710: javafx.scene.web.LeakTest hangs
     @Test public void testOleg() throws InterruptedException{
         final String URL = new File("src/test/resources/test/html/guimark2-vector.html").toURI().toASCIIString();
         final int CYCLE_COUNT = 16;
         final int CYCLE_LENGTH = 5;
         final CountDownLatch latch = new CountDownLatch(CYCLE_COUNT);
@@ -80,11 +79,10 @@
         }));
         time.play();
         latch.await();
     }
 
-    @Ignore // RT-26710: javafx.scene.web.LeakTest hangs
     @Test public void testGarbageCollectability() throws InterruptedException {
         final BlockingQueue<WeakReference<WebPage>> webPageRefQueue =
                 new LinkedBlockingQueue<WeakReference<WebPage>>();
         submit(() -> {
             WebView webView = new WebView();
diff a/modules/javafx.web/src/test/java/test/javafx/scene/web/MiscellaneousTest.java b/modules/javafx.web/src/test/java/test/javafx/scene/web/MiscellaneousTest.java
--- a/modules/javafx.web/src/test/java/test/javafx/scene/web/MiscellaneousTest.java
+++ b/modules/javafx.web/src/test/java/test/javafx/scene/web/MiscellaneousTest.java
@@ -89,11 +89,10 @@
 
     private static final class DummyClass {
         private static int dummyField;
     }
 
-    @org.junit.Ignore
     @Test public void testRT30835() throws Exception {
         class Record {
             private final Document document;
             private final String location;
             public Record(Document document, String location) {
