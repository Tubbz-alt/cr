diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/AndroidPlatform.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/AndroidPlatform.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/AndroidPlatform.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/AndroidPlatform.java
@@ -37,11 +37,11 @@
         return AndroidInputDeviceRegistry.getInstance();
     }
 
     @Override
     protected NativeCursor createCursor() {
-        return new NullCursor();
+        return logSelectedCursor(new NullCursor());
     }
 
     @Override
     protected NativeScreen createScreen() {
         return new AndroidScreen();
diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/DispmanPlatform.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/DispmanPlatform.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/DispmanPlatform.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/DispmanPlatform.java
@@ -27,11 +27,12 @@
 
 class DispmanPlatform extends LinuxPlatform {
 
     @Override
     protected NativeCursor createCursor() {
-        return new DispmanCursor();
+        final NativeCursor c = useCursor ? new DispmanCursor() : new NullCursor();
+        return logSelectedCursor(c);
     }
 
     @Override
     protected NativeScreen createScreen() {
         return new DispmanScreen();
diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/HeadlessPlatform.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/HeadlessPlatform.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/HeadlessPlatform.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/HeadlessPlatform.java
@@ -34,11 +34,11 @@
         return new LinuxInputDeviceRegistry(true);
     }
 
     @Override
     protected NativeCursor createCursor() {
-        return new NullCursor();
+        return logSelectedCursor(new NullCursor());
     }
 
     @Override
     protected NativeScreen createScreen() {
         return new HeadlessScreen();
diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/LinuxPlatform.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/LinuxPlatform.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/LinuxPlatform.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/LinuxPlatform.java
@@ -37,11 +37,12 @@
         return new LinuxInputDeviceRegistry(false);
     }
 
     @Override
     protected NativeCursor createCursor() {
-        return new SoftwareCursor();
+        final NativeCursor c = useCursor ? new SoftwareCursor() : new NullCursor();
+        return logSelectedCursor(c);
     }
 
     @Override
     protected NativeScreen createScreen() {
         try {
diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/MX6Platform.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/MX6Platform.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/MX6Platform.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/MX6Platform.java
@@ -27,11 +27,12 @@
 
 class MX6Platform extends LinuxPlatform {
 
     @Override
     protected NativeCursor createCursor() {
-        return new MX6Cursor();
+        final NativeCursor c = useCursor ? new MX6Cursor() : new NullCursor();
+        return logSelectedCursor(c);
     }
 
     @Override
     public synchronized AcceleratedScreen getAcceleratedScreen(int[] attributes)
             throws GLException {
diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/NativePlatform.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/NativePlatform.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/NativePlatform.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/NativePlatform.java
@@ -23,19 +23,39 @@
  * questions.
  */
 
 package com.sun.glass.ui.monocle;
 
+import java.security.AccessController;
+import java.security.PrivilegedAction;
+
 /** Abstract of a platform on which JavaFX can run. */
 public abstract class NativePlatform {
 
     private static InputDeviceRegistry inputDeviceRegistry;
     private final RunnableProcessor runnableProcessor;
+
+    protected static final boolean useCursor =
+        AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {
+            final String str =
+                System.getProperty("monocle.cursor.enabled", "true");
+            return "true".equalsIgnoreCase(str);
+        });
+
+    protected static final boolean debugCursor =
+        AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {
+            final String str =
+                System.getProperty("monocle.debugcursor", "");
+            return "true".equalsIgnoreCase(str);
+        });
+
+
+
     protected NativePlatform() {
         runnableProcessor = new RunnableProcessor();
     }
 
     /**
@@ -127,6 +147,21 @@
             accScreen = new AcceleratedScreen(attributes);
         }
         return accScreen;
     }
 
+
+    /**
+     * Log the name of the supplied native cursor class if required.
+     *
+     * @param cursor the native cursor in use, null is permitted
+     * @return the passed in cursor
+     */
+    protected NativeCursor logSelectedCursor(final NativeCursor cursor) {
+        if (debugCursor) {
+            final String name = cursor == null ? null : cursor.getClass().getSimpleName();
+            System.err.println("Using native cursor: " + name);
+        }
+        return cursor;
+    }
+
 }
diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/OMAPPlatform.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/OMAPPlatform.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/OMAPPlatform.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/OMAPPlatform.java
@@ -27,11 +27,12 @@
 
 class OMAPPlatform extends LinuxPlatform {
 
     @Override
     protected NativeCursor createCursor() {
-        return new OMAPCursor();
+        final NativeCursor c = useCursor ? new OMAPCursor() : new NullCursor();
+        return logSelectedCursor(c);
     }
 
     @Override
     protected NativeScreen createScreen() {
         return new OMAPScreen();
diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/X11Platform.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/X11Platform.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/X11Platform.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/X11Platform.java
@@ -59,14 +59,15 @@
      * X11 handle the cursor movement.  If we are using udev input, we need
      * to handle the cursor movement ourselves via X11WarpingCursor.
      */
     @Override
     protected NativeCursor createCursor() {
-        if (x11Input) {
-            return new X11Cursor();
+        if (useCursor) {
+            final NativeCursor c = x11Input ? new X11Cursor() : new X11WarpingCursor();
+            return logSelectedCursor(c);
         } else {
-            return new X11WarpingCursor();
+            return logSelectedCursor(new NullCursor());
         }
     }
 
     /** Create the native screen for this platform
      */
