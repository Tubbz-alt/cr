diff a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
--- a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
+++ b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
@@ -109,11 +109,12 @@
                                                  Set.of(),
                                                  listServer.getArchive(), listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
                                                  Set.of("rfr"), Map.of(ignored.host().getCurrentUserDetails().userName(),
-                                                                       Pattern.compile("ready")));
+                                                                       Pattern.compile("ready")),
+                                                 Map.of("Extra1", "val1", "Extra2", "val2"));
 
             // Populate the projects repository
             var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType());
             var masterHash = localRepo.resolve("master").orElseThrow();
             localRepo.push(masterHash, author.getUrl(), "master", true);
@@ -183,10 +184,12 @@
             var mail = conversations.get(0).first();
             assertEquals("RFR: This is a pull request", mail.subject());
             assertEquals(pr.getAuthor().fullName(), mail.author().fullName().orElseThrow());
             assertEquals(noreplyAddress(archive), mail.author().address());
             assertEquals(from, mail.sender());
+            assertEquals("val1", mail.headerValue("Extra1"));
+            assertEquals("val2", mail.headerValue("Extra2"));
 
             // And there should be a webrev
             Repository.materialize(webrevFolder.path(), archive.getUrl(), "webrev");
             assertTrue(webrevContains(webrevFolder.path(), "1 lines changed"));
             var comments = pr.getComments();
@@ -258,11 +261,11 @@
                                                  Set.of(ignored.host().getCurrentUserDetails().userName()),
                                                  Set.of(),
                                                  listServer.getArchive(), listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
-                                                 Set.of(), Map.of());
+                                                 Set.of(), Map.of(), Map.of());
 
             // Populate the projects repository
             var reviewFile = Path.of("reviewfile.txt");
             var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType(), reviewFile);
             var masterHash = localRepo.resolve("master").orElseThrow();
@@ -344,11 +347,11 @@
                                                  listAddress, Set.of(), Set.of(),
                                                  listServer.getArchive(),
                                                  listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
-                                                 Set.of(), Map.of());
+                                                 Set.of(), Map.of(), Map.of());
 
             // Populate the projects repository
             var reviewFile = Path.of("reviewfile.txt");
             var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType(), reviewFile);
             var masterHash = localRepo.resolve("master").orElseThrow();
@@ -425,11 +428,11 @@
                                                  listAddress, Set.of(), Set.of(),
                                                  listServer.getArchive(),
                                                  listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
-                                                 Set.of(), Map.of());
+                                                 Set.of(), Map.of(), Map.of());
 
             // Populate the projects repository
             var reviewFile = Path.of("reviewfile.txt");
             var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType(), reviewFile);
             var masterHash = localRepo.resolve("master").orElseThrow();
@@ -533,11 +536,11 @@
                                                  listAddress, Set.of(), Set.of(),
                                                  listServer.getArchive(),
                                                  listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
-                                                 Set.of(), Map.of());
+                                                 Set.of(), Map.of(), Map.of());
 
             // Populate the projects repository
             var reviewFile = Path.of("reviewfile.txt");
             var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType(), reviewFile);
             var masterHash = localRepo.resolve("master").orElseThrow();
@@ -582,11 +585,11 @@
                                                  listAddress, Set.of(), Set.of(),
                                                  listServer.getArchive(),
                                                  listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
-                                                 Set.of(), Map.of());
+                                                 Set.of(), Map.of(), Map.of());
 
             // Populate the projects repository
             var reviewFile = Path.of("reviewfile.txt");
             var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType(), reviewFile);
             var masterHash = localRepo.resolve("master").orElseThrow();
@@ -649,11 +652,11 @@
             var mlBot = new MailingListBridgeBot(from, author, archive, censusBuilder.build(), "master",
                                                  listAddress, Set.of(), Set.of(),
                                                  listServer.getArchive(), listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
-                                                 Set.of(), Map.of());
+                                                 Set.of(), Map.of(), Map.of());
 
             // Populate the projects repository
             var reviewFile = Path.of("reviewfile.txt");
             var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType(), reviewFile);
             var masterHash = localRepo.resolve("master").orElseThrow();
@@ -706,11 +709,11 @@
             var mlBot = new MailingListBridgeBot(from, author, archive, censusBuilder.build(), "master",
                                                  listAddress, Set.of(), Set.of(),
                                                  listServer.getArchive(), listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
-                                                 Set.of(), Map.of());
+                                                 Set.of(), Map.of(), Map.of());
 
             // Populate the projects repository
             var reviewFile = Path.of("reviewfile.txt");
             var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType(), reviewFile);
             var masterHash = localRepo.resolve("master").orElseThrow();
@@ -825,11 +828,11 @@
             var mlBot = new MailingListBridgeBot(sender, author, archive, censusBuilder.build(), "master",
                                                  listAddress, Set.of(), Set.of(),
                                                  listServer.getArchive(), listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
-                                                 Set.of(), Map.of());
+                                                 Set.of(), Map.of(), Map.of());
 
             // Populate the projects repository
             var reviewFile = Path.of("reviewfile.txt");
             var localRepo = CheckableRepository.init(tempFolder.path().resolve("first"), author.getRepositoryType(), reviewFile);
             var masterHash = localRepo.resolve("master").orElseThrow();
@@ -916,11 +919,11 @@
                                                  Set.of(ignored.host().getCurrentUserDetails().userName()),
                                                  Set.of(),
                                                  listServer.getArchive(), listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
-                                                 Set.of(), Map.of());
+                                                 Set.of(), Map.of(), Map.of());
 
             // Populate the projects repository
             var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType());
             var masterHash = localRepo.resolve("master").orElseThrow();
             localRepo.push(masterHash, author.getUrl(), "master", true);
@@ -987,11 +990,11 @@
             var mlBot = new MailingListBridgeBot(from, author, archive, censusBuilder.build(), "master",
                                                  listAddress, Set.of(), Set.of(),
                                                  listServer.getArchive(), listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
-                                                 Set.of(), Map.of());
+                                                 Set.of(), Map.of(), Map.of());
 
             // Populate the projects repository
             var reviewFile = Path.of("reviewfile.txt");
             var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType(), reviewFile);
             var masterHash = localRepo.resolve("master").orElseThrow();
@@ -1069,11 +1072,11 @@
                                                  Set.of(ignored.host().getCurrentUserDetails().userName()),
                                                  Set.of(Pattern.compile("ignore this comment", Pattern.MULTILINE | Pattern.DOTALL)),
                                                  listServer.getArchive(), listServer.getSMTP(),
                                                  archive, "webrev", Path.of("test"),
                                                  URIBuilder.base("http://www.test.test/").build(),
-                                                 Set.of(), Map.of());
+                                                 Set.of(), Map.of(), Map.of());
 
             // Populate the projects repository
             var reviewFile = Path.of("reviewfile.txt");
             var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType(), reviewFile);
             var masterHash = localRepo.resolve("master").orElseThrow();
