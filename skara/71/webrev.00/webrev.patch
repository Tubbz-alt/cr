diff a/vcs/src/main/java/org/openjdk/skara/vcs/Hunk.java b/vcs/src/main/java/org/openjdk/skara/vcs/Hunk.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/Hunk.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/Hunk.java
@@ -89,28 +89,28 @@
         w.append("@@ -");
         w.append(source.range().toString());
         w.append(" +");
         w.append(target.range().toString());
         w.append(" @@");
-        w.newLine();
+        w.write("\n");
 
         for (var line : source.lines()) {
             w.append("-");
             w.append(line);
-            w.newLine();
+            w.write("\n");
         }
         if (!source.hasNewlineAtEndOfFile()) {
             w.append("\\ No newline at end of file");
-            w.newLine();
+            w.write("\n");
         }
 
         for (var line : target.lines()) {
             w.append("+");
             w.append(line);
-            w.newLine();
+            w.write("\n");
         }
         if (!target.hasNewlineAtEndOfFile()) {
             w.append("\\ No newline at end of file");
-            w.newLine();
+            w.write("\n");
         }
     }
 }
diff a/vcs/src/main/java/org/openjdk/skara/vcs/Patch.java b/vcs/src/main/java/org/openjdk/skara/vcs/Patch.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/Patch.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/Patch.java
@@ -111,11 +111,11 @@
 
         w.append("diff --git ");
         w.append("a/" + sourcePath);
         w.append(" ");
         w.append("b/" + targetPath);
-        w.newLine();
+        w.write("\n");
 
         // extended headers
         if (status.isModified()) {
             if (!source.type().get().equals(target.type().get())) {
                 w.append("old mode ");
@@ -118,15 +118,15 @@
         // extended headers
         if (status.isModified()) {
             if (!source.type().get().equals(target.type().get())) {
                 w.append("old mode ");
                 w.append(source.type().get().toOctal());
-                w.newLine();
+                w.write("\n");
 
                 w.append("new mode ");
                 w.append(target.type().get().toOctal());
-                w.newLine();
+                w.write("\n");
             }
             w.append("index ");
             w.append(source().hash().hex());
             w.append("..");
             w.append(target().hash().hex());
@@ -130,43 +130,43 @@
             w.append(source().hash().hex());
             w.append("..");
             w.append(target().hash().hex());
             w.append(" ");
             w.append(target.type().get().toOctal());
-            w.newLine();
+            w.write("\n");
         } else if (status.isAdded()) {
             w.append("new file mode ");
             w.append(target.type().get().toOctal());
-            w.newLine();
+            w.write("\n");
 
             w.append("index ");
             w.append("0".repeat(40));
             w.append("..");
             w.append(target.hash().hex());
-            w.newLine();
+            w.write("\n");
         } else if (status.isDeleted()) {
             w.append("deleted file mode ");
             w.append(source.type().get().toOctal());
-            w.newLine();
+            w.write("\n");
 
             w.append("index ");
             w.append(source.hash().hex());
             w.append("..");
             w.append("0".repeat(40));
-            w.newLine();
+            w.write("\n");
         } else if (status.isCopied()) {
             w.append("similarity index ");
             w.append(Integer.toString(status.score()));
             w.append("%");
-            w.newLine();
+            w.write("\n");
 
             w.append("copy from ");
             w.append(source.path().get().toString());
-            w.newLine();
+            w.write("\n");
             w.append("copy to ");
             w.append(target.path().get().toString());
-            w.newLine();
+            w.write("\n");
 
             w.append("index ");
             w.append(source().hash().hex());
             w.append("..");
             w.append(target().hash().hex());
@@ -170,23 +170,23 @@
             w.append(source().hash().hex());
             w.append("..");
             w.append(target().hash().hex());
             w.append(" ");
             w.append(target.type().get().toOctal());
-            w.newLine();
+            w.write("\n");
         } else if (status.isRenamed()) {
             w.append("similarity index ");
             w.append(Integer.toString(status.score()));
             w.append("%");
-            w.newLine();
+            w.write("\n");
 
             w.append("rename from ");
             w.append(source.path().get().toString());
-            w.newLine();
+            w.write("\n");
             w.append("rename to ");
             w.append(target.path().get().toString());
-            w.newLine();
+            w.write("\n");
 
             w.append("index ");
             w.append(source().hash().hex());
             w.append("..");
             w.append(target().hash().hex());
@@ -190,11 +190,11 @@
             w.append(source().hash().hex());
             w.append("..");
             w.append(target().hash().hex());
             w.append(" ");
             w.append(target.type().get().toOctal());
-            w.newLine();
+            w.write("\n");
         }
 
         w.append("--- ");
         w.append(source.path().isPresent() ? "a/" + sourcePath : "/dev/null");
         w.append("\n");
@@ -198,15 +198,15 @@
         w.append("--- ");
         w.append(source.path().isPresent() ? "a/" + sourcePath : "/dev/null");
         w.append("\n");
         w.append("+++ ");
         w.append(target.path().isPresent() ? "b/" + targetPath : "/dev/null");
-        w.newLine();
+        w.write("\n");
 
         if (isBinary()) {
             w.append("GIT binary patch");
-            w.newLine();
+            w.write("\n");
             for (var hunk : asBinaryPatch().hunks()) {
                 hunk.write(w);
             }
         } else {
             for (var hunk : asTextualPatch().hunks()) {
