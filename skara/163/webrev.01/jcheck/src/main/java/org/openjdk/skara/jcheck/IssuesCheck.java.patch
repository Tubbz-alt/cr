diff a/jcheck/src/main/java/org/openjdk/skara/jcheck/IssuesCheck.java b/jcheck/src/main/java/org/openjdk/skara/jcheck/IssuesCheck.java
--- a/jcheck/src/main/java/org/openjdk/skara/jcheck/IssuesCheck.java
+++ b/jcheck/src/main/java/org/openjdk/skara/jcheck/IssuesCheck.java
@@ -25,10 +25,11 @@
 import org.openjdk.skara.vcs.Commit;
 import org.openjdk.skara.vcs.openjdk.CommitMessage;
 
 import java.util.Iterator;
 import java.util.logging.Logger;
+import java.util.regex.Pattern;
 
 public class IssuesCheck extends CommitCheck {
     private final Logger log = Logger.getLogger("org.openjdk.skara.jcheck.issues");
     private final Utilities utils;
 
@@ -40,16 +41,23 @@
     Iterator<Issue> check(Commit commit, CommitMessage message, JCheckConfiguration conf) {
         if (commit.isMerge() || utils.addsHgTag(commit)) {
             return iterator();
         }
 
+        var metadata = CommitIssue.metadata(commit, message, conf, this);
         if (commit.message().isEmpty() || message.issues().isEmpty()) {
-            var metadata = CommitIssue.metadata(commit, message, conf, this);
-            log.finer("isuse: no reference to a JBS issue");
+            log.finer("issue: no reference to a JBS issue");
             return iterator(new IssuesIssue(metadata));
         }
 
+        var pattern = Pattern.compile(conf.checks().issues().pattern());
+        for (var issue : message.issues()) {
+            if (!pattern.matcher(issue.toString()).matches()) {
+                return iterator(new IssuesIssue(metadata));
+            }
+        }
+
         return iterator();
     }
 
     @Override
     public String name() {
