diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
@@ -24,11 +24,13 @@
 
     private EmailAddress getAuthorAddress(HostUserDetails originalAuthor) {
         var contributor = censusInstance.namespace().get(originalAuthor.id());
         if (contributor == null) {
             return EmailAddress.from(originalAuthor.fullName(),
-                                     originalAuthor.id() + "+" + originalAuthor.userName() + "@users.noreply." + censusInstance.namespace().name());
+                                     censusInstance.namespace().name() + "+" +
+                                             originalAuthor.id() + "+" + originalAuthor.userName() + "@" +
+                                             censusInstance.configuration().census().domain());
         } else {
             return EmailAddress.from(contributor.fullName().orElse(originalAuthor.fullName()),
                                      contributor.username() + "@" + censusInstance.configuration().census().domain());
         }
     }
diff a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
--- a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
+++ b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
@@ -91,13 +91,13 @@
     private long countSubstrings(String string, String substring) {
         return Pattern.compile(substring).matcher(string).results().count();
     }
 
     private String noreplyAddress(HostedRepository repository) {
-        return repository.host().getCurrentUserDetails().id() + "+" +
+        return "test+" + repository.host().getCurrentUserDetails().id() + "+" +
                 repository.host().getCurrentUserDetails().userName() +
-                "@users.noreply.test";
+                "@openjdk.java.net";
     }
 
     @Test
     void simpleArchive(TestInfo testInfo) throws IOException {
         try (var credentials = new HostCredentials(testInfo);
