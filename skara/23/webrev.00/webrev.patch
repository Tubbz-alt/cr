diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/PullRequestInstance.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/PullRequestInstance.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/PullRequestInstance.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/PullRequestInstance.java
@@ -68,11 +68,11 @@
     }
 
     String fetchCommand() {
         var repoUrl = pr.repository().getUrl();
         return "git fetch " + repoUrl.getScheme() + "://" + repoUrl.getHost() + repoUrl.getPath() + " " +
-                headHash().abbreviate() + ":pr/" + pr.getId();
+                pr.getSourceRef() + ":pull/" + pr.getId();
     }
 
     @FunctionalInterface
     interface CommitFormatter {
         String format(Commit commit);
diff a/host/src/main/java/org/openjdk/skara/host/github/GitHubPullRequest.java b/host/src/main/java/org/openjdk/skara/host/github/GitHubPullRequest.java
--- a/host/src/main/java/org/openjdk/skara/host/github/GitHubPullRequest.java
+++ b/host/src/main/java/org/openjdk/skara/host/github/GitHubPullRequest.java
@@ -177,11 +177,11 @@
         return new Hash(json.get("head").get("sha").asString());
     }
 
     @Override
     public String getSourceRef() {
-        return json.get("head").get("ref").asString();
+        return "pull/" + getId() + "/head";
     }
 
     @Override
     public String getTargetRef() {
         return json.get("base").get("ref").asString();
diff a/host/src/main/java/org/openjdk/skara/host/gitlab/GitLabMergeRequest.java b/host/src/main/java/org/openjdk/skara/host/gitlab/GitLabMergeRequest.java
--- a/host/src/main/java/org/openjdk/skara/host/gitlab/GitLabMergeRequest.java
+++ b/host/src/main/java/org/openjdk/skara/host/gitlab/GitLabMergeRequest.java
@@ -230,11 +230,11 @@
         return new Hash(json.get("sha").asString());
     }
 
     @Override
     public String getSourceRef() {
-        return json.get("source_branch").asString();
+        return "merge-requests/" + getId() + "/head";
     }
 
     @Override
     public String getTargetRef() {
         return json.get("target_branch").asString();
