diff a/webrev/src/main/java/org/openjdk/skara/webrev/PatchView.java b/webrev/src/main/java/org/openjdk/skara/webrev/PatchView.java
--- a/webrev/src/main/java/org/openjdk/skara/webrev/PatchView.java
+++ b/webrev/src/main/java/org/openjdk/skara/webrev/PatchView.java
@@ -21,56 +21,99 @@
  * questions.
  */
 package org.openjdk.skara.webrev;
 
 import org.openjdk.skara.vcs.TextualPatch;
+import org.openjdk.skara.vcs.BinaryPatch;
 
 import java.io.*;
 import java.nio.file.*;
 import java.util.List;
 
 class PatchView implements View {
     private final Path out;
     private final Path file;
-    private final TextualPatch patch;
+    private final TextualPatch textualPatch;
+    private final BinaryPatch binaryPatch;
     private final List<String> sourceContent;
     private final List<String> destContent;
     private static final int NUM_CONTEXT_LINES = 5;
 
     public PatchView(Path out, Path file, TextualPatch patch, List<String> sourceContent, List<String> destContent) {
         this.out = out;
         this.file = file;
-        this.patch = patch;
+        this.textualPatch = patch;
+        this.binaryPatch = null;
         this.sourceContent = sourceContent;
         this.destContent = destContent;
     }
 
+    public PatchView(Path out, Path file, BinaryPatch patch) {
+        this.out = out;
+        this.file = file;
+        this.textualPatch = null;
+        this.binaryPatch = patch;
+        this.sourceContent = null;
+        this.destContent = null;
+    }
+
     private void writeLine(Writer w, String prepend, Line line) throws IOException {
         w.write(prepend);
         w.write(line.text());
         w.write("\n");
     }
 
+    @Override
     public void render(Writer w) throws IOException {
         var patchFile = out.resolve(file.toString() + ".patch");
         Files.createDirectories(patchFile.getParent());
 
+        if (binaryPatch != null) {
+            renderBinary(patchFile);
+        } else {
+            renderTextual(patchFile);
+        }
+
+        w.write("<a href=\"");
+        w.write(Webrev.relativeToIndex(out, patchFile));
+        w.write("\">Patch</a>\n");
+    }
+
+    private void renderBinary(Path patchFile) throws IOException {
         try (var fw = Files.newBufferedWriter(patchFile)) {
+            var sourcePath = ViewUtils.pathWithUnixSeps(binaryPatch.source().path().get());
+            var targetPath = ViewUtils.pathWithUnixSeps(binaryPatch.target().path().get());
             fw.write("diff a/");
-            fw.write(ViewUtils.pathWithUnixSeps(patch.source().path().get()));
+            fw.write(sourcePath);
             fw.write(" b/");
-            fw.write(ViewUtils.pathWithUnixSeps(patch.target().path().get()));
+            fw.write(targetPath);
+            fw.write("\n");
+            fw.write("Binary files ");
+            fw.write(sourcePath);
+            fw.write(" and ");
+            fw.write(targetPath);
+            fw.write(" differ\n");
+        }
+
+    }
+
+    private void renderTextual(Path patchFile) throws IOException {
+        try (var fw = Files.newBufferedWriter(patchFile)) {
+            fw.write("diff a/");
+            fw.write(ViewUtils.pathWithUnixSeps(textualPatch.source().path().get()));
+            fw.write(" b/");
+            fw.write(ViewUtils.pathWithUnixSeps(textualPatch.target().path().get()));
             fw.write("\n");
             fw.write("--- a/");
-            fw.write(ViewUtils.pathWithUnixSeps(patch.source().path().get()));
+            fw.write(ViewUtils.pathWithUnixSeps(textualPatch.source().path().get()));
             fw.write("\n");
             fw.write("+++ b/");
-            fw.write(ViewUtils.pathWithUnixSeps(patch.target().path().get()));
+            fw.write(ViewUtils.pathWithUnixSeps(textualPatch.target().path().get()));
             fw.write("\n");
 
             var coalescer = new HunkCoalescer(NUM_CONTEXT_LINES, sourceContent, destContent);
-            for (var group : coalescer.coalesce(patch.hunks())) {
+            for (var group : coalescer.coalesce(textualPatch.hunks())) {
                 var sourceRange = group.header().source();
                 var destRange = group.header().target();
 
                 fw.write("@@ -");
                 fw.write(String.valueOf(sourceRange.start()));
@@ -97,11 +140,7 @@
                         writeLine(fw, " ", line);
                     }
                 }
             }
         }
-
-        w.write("<a href=\"");
-        w.write(Webrev.relativeToIndex(out, patchFile));
-        w.write("\">Patch</a>\n");
     }
 }
