diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java
@@ -43,21 +43,21 @@
     private final boolean reviewLink;
     private final URI reviewIcon;
     private final boolean commitLink;
     private final URI commitIcon;
     private final boolean setFixVersion;
-    private final String fixVersion;
+    private final Map<String, String> fixVersions;
     private final Logger log = Logger.getLogger("org.openjdk.skara.bots.notify");
 
-    IssueUpdater(IssueProject issueProject, boolean reviewLink, URI reviewIcon, boolean commitLink, URI commitIcon,boolean setFixVersion, String fixVersion) {
+    IssueUpdater(IssueProject issueProject, boolean reviewLink, URI reviewIcon, boolean commitLink, URI commitIcon,boolean setFixVersion, Map<String, String> fixVersions) {
         this.issueProject = issueProject;
         this.reviewLink = reviewLink;
         this.reviewIcon = reviewIcon;
         this.commitLink = commitLink;
         this.commitIcon = commitIcon;
         this.setFixVersion = setFixVersion;
-        this.fixVersion = fixVersion;
+        this.fixVersions = fixVersions;
     }
 
     private final static Set<String> primaryTypes = Set.of("Bug", "New Feature", "Enhancement", "Task", "Sub-task");
 
     private boolean isPrimaryIssue(Issue issue) {
@@ -238,11 +238,11 @@
                 }
 
                 // The actual issue to be updated can change depending on the fix version
                 String requestedVersion = null;
                 if (setFixVersion) {
-                    requestedVersion = fixVersion;
+                    requestedVersion = fixVersions != null ? fixVersions.getOrDefault(branch.name(), null) : null;
                     if (requestedVersion == null) {
                         try {
                             var conf = localRepository.lines(Path.of(".jcheck/conf"), commit.hash());
                             if (conf.isPresent()) {
                                 var parsed = JCheckConfiguration.parse(conf.get());
diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/NotifyBotFactory.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/NotifyBotFactory.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/NotifyBotFactory.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/NotifyBotFactory.java
@@ -156,16 +156,17 @@
                 var commitLink = true;
                 if (issuesConf.contains("commitlink")) {
                     commitLink = issuesConf.get("commitlink").asBoolean();
                 }
                 var setFixVersion = false;
-                String fixVersion = null;
-                if (issuesConf.contains("fixversion")) {
+                Map<String, String> fixVersions = null;
+                if (issuesConf.contains("fixversions")) {
                     setFixVersion = true;
-                    fixVersion = issuesConf.get("fixversion").asString();
+                    fixVersions = issuesConf.get("fixversions").fields().stream()
+                                            .collect(Collectors.toMap(JSONObject.Field::name, f -> f.value().asString()));
                 }
-                var updater = new IssueUpdater(issueProject, reviewLink, reviewIcon, commitLink, commitIcon, setFixVersion, fixVersion);
+                var updater = new IssueUpdater(issueProject, reviewLink, reviewIcon, commitLink, commitIcon, setFixVersion, fixVersions);
                 updaters.add(updater);
                 prUpdaters.add(updater);
             }
 
             if (updaters.isEmpty()) {
diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
@@ -1005,11 +1005,11 @@
             var prIssuesStorage = createPullRequestIssuesStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var issueProject = credentials.getIssueProject();
             var commitIcon = URI.create("http://www.example.com/commit.png");
-            var updater = new IssueUpdater(issueProject, false, null, false, commitIcon, true,"2.0");
+            var updater = new IssueUpdater(issueProject, false, null, false, commitIcon, true, Map.of("master", "2.0"));
             var notifyBot = new NotifyBot(repo, storageFolder, Pattern.compile("master"), tagStorage, branchStorage,
                                           prIssuesStorage, List.of(updater), List.of(), Set.of(), Map.of());
 
             // Initialize history
             TestBotRunner.runPeriodicItems(notifyBot);
@@ -1113,11 +1113,11 @@
             var branchStorage = createBranchStorage(repo);
             var prIssuesStorage = createPullRequestIssuesStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var issueProject = credentials.getIssueProject();
-            var updater = new IssueUpdater(issueProject, false, null, false, null, true, "12u14");
+            var updater = new IssueUpdater(issueProject, false, null, false, null, true, Map.of("master", "12u14"));
             var notifyBot = new NotifyBot(repo, storageFolder, Pattern.compile("master"), tagStorage, branchStorage,
                                           prIssuesStorage, List.of(updater), List.of(), Set.of(), Map.of());
 
             // Initialize history
             TestBotRunner.runPeriodicItems(notifyBot);
@@ -1149,11 +1149,11 @@
             var branchStorage = createBranchStorage(repo);
             var prIssuesStorage = createPullRequestIssuesStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var issueProject = credentials.getIssueProject();
-            var updater = new IssueUpdater(issueProject, false, null, false, null, true, "12u14");
+            var updater = new IssueUpdater(issueProject, false, null, false, null, true, Map.of("master", "12u14"));
             var notifyBot = new NotifyBot(repo, storageFolder, Pattern.compile("master"), tagStorage, branchStorage,
                                           prIssuesStorage, List.of(updater), List.of(), Set.of(), Map.of());
 
             // Initialize history
             TestBotRunner.runPeriodicItems(notifyBot);
@@ -1185,11 +1185,11 @@
             var branchStorage = createBranchStorage(repo);
             var prIssuesStorage = createPullRequestIssuesStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var issueProject = credentials.getIssueProject();
-            var updater = new IssueUpdater(issueProject, false, null, false, null, true, "12.0.2");
+            var updater = new IssueUpdater(issueProject, false, null, false, null, true, Map.of("master", "12.0.2"));
             var notifyBot = new NotifyBot(repo, storageFolder, Pattern.compile("master"), tagStorage, branchStorage,
                                           prIssuesStorage, List.of(updater), List.of(), Set.of(), Map.of());
 
             // Initialize history
             TestBotRunner.runPeriodicItems(notifyBot);
