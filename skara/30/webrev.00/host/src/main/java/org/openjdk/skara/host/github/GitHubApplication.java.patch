diff a/host/src/main/java/org/openjdk/skara/host/github/GitHubApplication.java b/host/src/main/java/org/openjdk/skara/host/github/GitHubApplication.java
--- a/host/src/main/java/org/openjdk/skara/host/github/GitHubApplication.java
+++ b/host/src/main/java/org/openjdk/skara/host/github/GitHubApplication.java
@@ -95,11 +95,10 @@
     private final PrivateKey key;
     private final Token jwt;
     private final Token installationToken;
 
     private final Logger log;
-    private final JSONParser jsonParser;
 
     static class GitHubConfigurationError extends RuntimeException {
         public GitHubConfigurationError(String message) {
             super(message);
         }
@@ -106,11 +105,10 @@
     }
 
     public GitHubApplication(String keyFile, String issue, String id) {
 
         log = Logger.getLogger("org.openjdk.host.github");
-        jsonParser = new JSONParser();
 
         apiBase = URIBuilder.base("https://api.github.com/").build();
         this.issue = issue;
         this.id = id;
 
@@ -192,11 +190,11 @@
                                .POST(HttpRequest.BodyPublishers.noBody())
                                .build(),
                     HttpResponse.BodyHandlers.ofString()
             );
 
-            var data = jsonParser.parse(response.body());
+            var data = JSON.parse(response.body());
             if (!data.contains("token")) {
                 throw new Token.GeneratorError("Unknown data returned: " + data);
             }
             return data.get("token").asString();
         } catch (IOException e) {
@@ -226,11 +224,11 @@
                                .GET()
                                .build(),
                     HttpResponse.BodyHandlers.ofString()
             );
 
-            var data = jsonParser.parse(response.body());
+            var data = JSON.parse(response.body());
             return data.asObject();
         } catch (IOException e) {
             throw new UncheckedIOException(e);
         } catch (InterruptedException e) {
             throw new RuntimeException(e);
