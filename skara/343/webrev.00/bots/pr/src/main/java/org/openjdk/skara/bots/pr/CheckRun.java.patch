diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
@@ -356,17 +356,24 @@
 
     private String getMergeReadyComment(String commitMessage, List<Review> reviews, boolean rebasePossible) {
         var message = new StringBuilder();
         message.append("@");
         message.append(pr.author().userName());
-        message.append(" This change can now be integrated. The commit message will be:\n");
+        message.append(" This change now passes all automated pre-integration checks. When the change also ");
+        message.append("fulfills all [project specific requirements](https://github.com/");
+        message.append(pr.repository().name());
+        message.append("/blob/");
+        message.append(pr.targetRef());
+        message.append("CONTRIBUTING.md), type `/integrate` in a new comment to proceed. After integration, ");
+        message.append("the commit message will be:\n");
         message.append("```\n");
         message.append(commitMessage);
         message.append("\n```\n");
 
         message.append("- If you would like to add a summary, use the `/summary` command.\n");
-        message.append("- To list additional contributors, use the `/contributor` command.\n");
+        message.append("- To credit additional contributors, use the `/contributor` command.\n");
+        message.append("- To add additional solved issues, use the `/solves` command.\n");
 
         var divergingCommits = prInstance.divergingCommits();
         if (divergingCommits.size() > 0) {
             message.append("\n");
             message.append("Since the source branch of this PR was last updated there ");
@@ -377,19 +384,14 @@
                 message.append(divergingCommits.size());
                 message.append(" commits ");
             }
             message.append("pushed to the `");
             message.append(pr.targetRef());
-            message.append("` branch:\n");
-            var commitList = divergingCommits.stream()
-                    .map(commit -> " * " + commit.hash().hex() + ": " + commit.message().get(0))
-                    .collect(Collectors.joining("\n"));
-            message.append(commitList);
-            message.append("\n\n");
+            message.append("` branch. ");
             if (rebasePossible) {
-                message.append("Since there are no conflicts, your changes will automatically be rebased on top of the ");
-                message.append("above commits when integrating. If you prefer to do this manually, please merge `");
+                message.append("Since there are no conflicts, your changes will automatically be rebased on top of ");
+                message.append("these commits when integrating. If you prefer to do this manually, please merge `");
                 message.append(pr.targetRef());
                 message.append("` into your branch first.\n");
             } else {
                 message.append("Your changes cannot be rebased automatically without conflicts, so you will need to ");
                 message.append("merge `");
@@ -418,19 +420,19 @@
                 message.append(candidates);
                 message.append(") but any other Committer may sponsor as well. ");
             }
             if (rebasePossible) {
                 message.append("\n\n");
-                message.append("- To flag this PR as ready for integration with the above commit message, type ");
+                message.append("➡️ To flag this PR as ready for integration with the above commit message, type ");
                 message.append("`/integrate` in a new comment. (Afterwards, your sponsor types ");
                 message.append("`/sponsor` in a new comment to perform the integration).\n");
             }
         } else if (rebasePossible) {
             if (divergingCommits.size() > 0) {
                 message.append("\n");
             }
-            message.append("- To integrate this PR with the above commit message, type ");
+            message.append("➡️ To integrate this PR with the above commit message, type ");
             message.append("`/integrate` in a new comment.\n");
         }
         message.append(mergeReadyMarker);
         return message.toString();
     }
