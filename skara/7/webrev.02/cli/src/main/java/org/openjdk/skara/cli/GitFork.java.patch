diff a/cli/src/main/java/org/openjdk/skara/cli/GitFork.java b/cli/src/main/java/org/openjdk/skara/cli/GitFork.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitFork.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitFork.java
@@ -121,15 +122,15 @@
         final var uri = URI.create(arguments.at(0).or(die("No URI for upstream repository provided")).asString());
         if (uri == null) {
             exit("Not a valid URI: " + uri);
         }
         final var hostName = uri.getHost();
+        var path = uri.getPath().substring(1); // trim leading '/'
         final var protocol = uri.getScheme();
         final var token = System.getenv("GIT_TOKEN");
         final var username = arguments.contains("username") ? arguments.get("username").asString() : null;
-        final var credentials = GitCredentials.fill(hostName, username, token, protocol);
+        final var credentials = GitCredentials.fill(hostName, path, username, token, protocol);
 
         if (credentials.password() == null) {
             exit("No token for host " + hostName + " found, use git-credentials or the environment variable GIT_TOKEN");
         }
 
@@ -136,11 +137,10 @@
         if (credentials.username() == null) {
             exit("No username for host " + hostName + " found, use git-credentials or the flag --username");
         }
 
         var host = Host.from(uri, new PersonalAccessToken(credentials.username(), credentials.password()));
-        var path = uri.getPath().substring(1);
         if (path.endsWith(".git")) {
             path = path.substring(0, path.length() - 4);
         }
 
         var fork = host.getRepository(path).fork();
