diff a/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java b/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java
@@ -77,28 +78,36 @@
         if (repo.isEmpty()) {
             System.err.println("error: could not find skara repository");
             System.exit(1);
         }
 
+        var head = repo.get().head();
+        System.out.print("Checking for updates ...");
         repo.get().pull();
+        var newHead = repo.get().head();
 
-        var cmd = new ArrayList<String>();
-        if (System.getProperty("os.name").toLowerCase().startsWith("win")) {
-            cmd.add("gradlew.bat");
-        } else {
-            cmd.addAll(List.of("sh", "gradlew"));
-        }
+        if (!head.equals(newHead)) {
+            System.out.println("updates downloaded");
+            System.out.println("Rebuilding ...");
+            var cmd = new ArrayList<String>();
+            if (System.getProperty("os.name").toLowerCase().startsWith("win")) {
+                cmd.add("gradlew.bat");
+            } else {
+                cmd.addAll(List.of("sh", "gradlew"));
+            }
 
-        var pb = new ProcessBuilder(cmd);
-        pb.inheritIO();
-        pb.directory(parent.toFile());
-        var p = pb.start();
-        var res = p.waitFor();
-        if (res != 0) {
-            System.err.println("error: could not build Skara tooling");
-            System.exit(1);
+            var pb = new ProcessBuilder(cmd);
+            pb.inheritIO();
+            pb.directory(parent.toFile());
+            var p = pb.start();
+            var res = p.waitFor();
+            if (res != 0) {
+                System.err.println("error: could not build Skara tooling");
+                System.exit(1);
+            }
+        } else {
+            System.out.println("no updates found");
         }
     }
 
     public static void main(String[] args) throws Exception {
         commands.put("jcheck", GitJCheck::main);
