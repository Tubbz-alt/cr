diff a/test/src/main/java/org/openjdk/skara/test/TestIssueProject.java b/test/src/main/java/org/openjdk/skara/test/TestIssueProject.java
--- a/test/src/main/java/org/openjdk/skara/test/TestIssueProject.java
+++ b/test/src/main/java/org/openjdk/skara/test/TestIssueProject.java
@@ -21,11 +21,11 @@
  * questions.
  */
 package org.openjdk.skara.test;
 
 import org.openjdk.skara.host.*;
-import org.openjdk.skara.host.network.URIBuilder;
+import org.openjdk.skara.network.URIBuilder;
 
 import java.net.URI;
 import java.util.*;
 
 public class TestIssueProject implements IssueProject {
@@ -40,11 +40,11 @@
     public Host host() {
         return host;
     }
 
     @Override
-    public URI getWebUrl() {
+    public URI webUrl() {
         return URIBuilder.base("http://localhost/project/" + projectName).build();
     }
 
     public TestIssueProject(TestHost host, String projectName) {
         this.host = host;
@@ -55,18 +55,18 @@
     public Issue createIssue(String title, List<String> body) {
         return host.createIssue(this, title, body);
     }
 
     @Override
-    public Optional<Issue> getIssue(String id) {
+    public Optional<Issue> issue(String id) {
         if (id.indexOf('-') < 0) {
             id = projectName.toUpperCase() + "-" + id;
         }
 
         return Optional.ofNullable(host.getIssue(this, id));
     }
 
     @Override
-    public List<Issue> getIssues() {
+    public List<Issue> issues() {
         return new ArrayList<>(host.getIssues(this));
     }
 }
