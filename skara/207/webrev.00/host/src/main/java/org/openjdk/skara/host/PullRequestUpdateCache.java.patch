diff a/host/src/main/java/org/openjdk/skara/host/PullRequestUpdateCache.java b/host/src/main/java/org/openjdk/skara/host/PullRequestUpdateCache.java
--- a/host/src/main/java/org/openjdk/skara/host/PullRequestUpdateCache.java
+++ b/host/src/main/java/org/openjdk/skara/host/PullRequestUpdateCache.java
@@ -37,32 +37,32 @@
     private String getUniqueId(PullRequest pr) {
         var repo = pr.repository();
         if (!repositoryIds.containsKey(repo)) {
             repositoryIds.put(repo, Integer.toString(repositoryIds.size()));
         }
-        return repositoryIds.get(repo) + ";" + pr.getId();
+        return repositoryIds.get(repo) + ";" + pr.id();
     }
 
     public synchronized boolean needsUpdate(PullRequest pr) {
         // GitLab CE does not update this field on events such as adding an award
         if (pr instanceof GitLabMergeRequest) {
             return true;
         }
 
         var uniqueId = getUniqueId(pr);
-        var update = pr.getUpdated();
+        var update = pr.updatedAt();
 
         if (!lastUpdates.containsKey(uniqueId)) {
             lastUpdates.put(uniqueId, update);
             return true;
         }
         var lastUpdate = lastUpdates.get(uniqueId);
         if (lastUpdate.isBefore(update)) {
             lastUpdates.put(uniqueId, update);
             return true;
         }
-        log.info("Skipping update for " + pr.repository().getName() + "#" + pr.getId());
+        log.info("Skipping update for " + pr.repository().name() + "#" + pr.id());
         return false;
     }
 
     public synchronized void invalidate(PullRequest pr) {
         var uniqueId = getUniqueId(pr);
