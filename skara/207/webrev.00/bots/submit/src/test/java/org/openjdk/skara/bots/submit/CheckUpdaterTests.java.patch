diff a/bots/submit/src/test/java/org/openjdk/skara/bots/submit/CheckUpdaterTests.java b/bots/submit/src/test/java/org/openjdk/skara/bots/submit/CheckUpdaterTests.java
--- a/bots/submit/src/test/java/org/openjdk/skara/bots/submit/CheckUpdaterTests.java
+++ b/bots/submit/src/test/java/org/openjdk/skara/bots/submit/CheckUpdaterTests.java
@@ -38,17 +38,17 @@
         try (var credentials = new HostCredentials(testInfo);
              var tempFolder = new TemporaryDirectory()) {
             var author = credentials.getHostedRepository();
 
             // Populate the projects repository
-            var localRepo = CheckableRepository.init(tempFolder.path(), author.getRepositoryType());
+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType());
             var masterHash = localRepo.resolve("master").orElseThrow();
-            localRepo.push(masterHash, author.getUrl(), "master", true);
+            localRepo.push(masterHash, author.url(), "master", true);
 
             // Make a change with a corresponding PR
             var editHash = CheckableRepository.appendAndCommit(localRepo);
-            localRepo.push(editHash, author.getUrl(), "edit", true);
+            localRepo.push(editHash, author.url(), "edit", true);
             var pr = credentials.createPullRequest(author, "master", "edit", "This is a pull request");
 
             var builder = CheckBuilder.create("test", editHash);
             pr.createCheck(builder.build());
 
@@ -56,21 +56,21 @@
             updater.setMaxUpdateRate(Duration.ofDays(1));
             builder.summary("In progress");
             updater.run();
 
             // Verify that the check is in progress
-            var checks = pr.getChecks(editHash);
+            var checks = pr.checks(editHash);
             assertEquals(1, checks.size());
             var check = checks.get("test");
             assertEquals(CheckStatus.IN_PROGRESS, check.status());
             assertEquals("In progress", check.summary().orElseThrow());
 
             builder.summary("Quick update");
             updater.run();
 
             // Verify that the check still is in progress and has not been updated due to the rate limiter
-            checks = pr.getChecks(editHash);
+            checks = pr.checks(editHash);
             assertEquals(1, checks.size());
             check = checks.get("test");
             assertEquals(CheckStatus.IN_PROGRESS, check.status());
             assertEquals("In progress", check.summary().orElseThrow());
 
@@ -79,11 +79,11 @@
 
             builder.summary("Final update");
             updater.run();
 
             // The summary should now have been updated
-            checks = pr.getChecks(editHash);
+            checks = pr.checks(editHash);
             assertEquals(1, checks.size());
             check = checks.get("test");
             assertEquals(CheckStatus.IN_PROGRESS, check.status());
             assertEquals("Final update", check.summary().orElseThrow());
         }
