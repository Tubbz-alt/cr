diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JsonUpdater.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JsonUpdater.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JsonUpdater.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JsonUpdater.java
@@ -42,11 +42,11 @@
         this.defaultBuild = defaultBuild;
     }
 
     private JSONObject commitToChanges(HostedRepository repository, Commit commit, String build) {
         var ret = JSON.object();
-        ret.put("url",  repository.getWebUrl(commit.hash()).toString()); //FIXME
+        ret.put("url",  repository.webUrl(commit.hash()).toString()); //FIXME
         ret.put("version", version);
         ret.put("build", build);
 
         var parsedMessage = CommitMessageParsers.v1.parse(commit);
         var issueIds = JSON.array();
@@ -75,22 +75,22 @@
         return ret;
     }
 
     @Override
     public void handleCommits(HostedRepository repository, List<Commit> commits, Branch branch) {
-        try (var writer = new JsonUpdateWriter(path, repository.getName())) {
+        try (var writer = new JsonUpdateWriter(path, repository.name())) {
             for (var commit : commits) {
                 var json = commitToChanges(repository, commit, defaultBuild);
                 writer.write(json);
             }
         }
     }
 
     @Override
     public void handleTagCommits(HostedRepository repository, List<Commit> commits, OpenJDKTag tag) {
         var build = String.format("b%02d", tag.buildNum());
-        try (var writer = new JsonUpdateWriter(path, repository.getName())) {
+        try (var writer = new JsonUpdateWriter(path, repository.name())) {
             var issues = new ArrayList<Issue>();
             for (var commit : commits) {
                 var parsedMessage = CommitMessageParsers.v1.parse(commit);
                 issues.addAll(parsedMessage.issues());
             }
