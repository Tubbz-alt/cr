diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/LabelerWorkItem.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/LabelerWorkItem.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/LabelerWorkItem.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/LabelerWorkItem.java
@@ -43,11 +43,11 @@
         this.currentLabels = currentLabels;
     }
 
     @Override
     public String toString() {
-        return "LabelerWorkItem@" + pr.repository().getName() + "#" + pr.getId();
+        return "LabelerWorkItem@" + pr.repository().name() + "#" + pr.id();
     }
 
     private Set<String> getLabels(PullRequestInstance prInstance) throws IOException {
         var labels = new HashSet<String>();
         var files = prInstance.changedFiles();
@@ -65,19 +65,19 @@
         return labels;
     }
 
     @Override
     public void run(Path scratchPath) {
-        if (currentLabels.containsKey(pr.getHeadHash())) {
+        if (currentLabels.containsKey(pr.headHash())) {
             return;
         }
         try {
             var prInstance = new PullRequestInstance(scratchPath.resolve("labeler"), pr);
             var newLabels = getLabels(prInstance);
-            var currentLabels = pr.getLabels().stream()
-                    .filter(labelPatterns::containsKey)
-                    .collect(Collectors.toSet());
+            var currentLabels = pr.labels().stream()
+                                  .filter(labelPatterns::containsKey)
+                                  .collect(Collectors.toSet());
 
             // Add all labels not already set
             newLabels.stream()
                      .filter(label -> !currentLabels.contains(label))
                      .forEach(pr::addLabel);
@@ -85,11 +85,11 @@
             // Remove set labels no longer present
             currentLabels.stream()
                          .filter(label -> !newLabels.contains(label))
                          .forEach(pr::removeLabel);
 
-            this.currentLabels.put(pr.getHeadHash(), Boolean.TRUE);
+            this.currentLabels.put(pr.headHash(), Boolean.TRUE);
         } catch (IOException e) {
             throw new UncheckedIOException(e);
         }
     }
 }
