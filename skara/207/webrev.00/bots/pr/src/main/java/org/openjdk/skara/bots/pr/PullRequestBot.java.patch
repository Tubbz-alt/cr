diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestBot.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestBot.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestBot.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestBot.java
@@ -72,19 +72,19 @@
     PullRequestBot(HostedRepository repo, HostedRepository censusRepo, String censusRef) {
         this(repo, censusRepo, censusRef, Map.of(), Map.of(), Map.of(), Set.of(), Map.of(), null);
     }
 
     private boolean isReady(PullRequest pr) {
-        var labels = new HashSet<>(pr.getLabels());
+        var labels = new HashSet<>(pr.labels());
         for (var readyLabel : readyLabels) {
             if (!labels.contains(readyLabel)) {
                 log.fine("PR is not yet ready - missing label '" + readyLabel + "'");
                 return false;
             }
         }
 
-        var comments = pr.getComments();
+        var comments = pr.comments();
         for (var readyComment : readyComments.entrySet()) {
             var commentFound = false;
             for (var comment : comments) {
                 if (comment.author().userName().equals(readyComment.getKey())) {
                     var matcher = readyComment.getValue().matcher(comment.body());
@@ -121,11 +121,11 @@
         return ret;
     }
 
     @Override
     public List<WorkItem> getPeriodicItems() {
-        return getWorkItems(remoteRepo.getPullRequests());
+        return getWorkItems(remoteRepo.pullRequests());
     }
 
     @Override
     public List<WorkItem> processWebHook(JSONValue body) {
         var webHook = remoteRepo.parseWebHook(body);
