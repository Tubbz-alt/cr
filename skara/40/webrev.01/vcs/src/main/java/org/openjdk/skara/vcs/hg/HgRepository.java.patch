diff a/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
@@ -82,10 +82,13 @@
 
     private Execution capture(String... cmd) {
         return capture(dir, cmd);
     }
 
+    private static Execution capture(Path cwd, List<String> cmd) {
+        return capture(cwd, cmd.toArray(new String[0]));
+    }
     private static Execution capture(Path cwd, String... cmd) {
         return Process.capture(cmd)
                       .environ("HGRCPATH", "")
                       .environ("HGPLAIN", "")
                       .workdir(cwd)
@@ -845,12 +848,19 @@
         // Mercurial doesn't have the concept of remotes like git,
         // a local branch must have the same name (if present) on the remote
         return Optional.of(b.name());
     }
 
-    public static Repository clone(URI from, Path to) throws IOException {
-        try (var p = capture(Path.of("").toAbsolutePath(), "hg", "clone", from.toString(), to.toString())) {
+    public static Repository clone(URI from, Path to, boolean isBare) throws IOException {
+        var cmd = new ArrayList<String>();
+        cmd.addAll(List.of("hg", "clone"));
+        if (isBare) {
+            cmd.add("--noupdate");
+        }
+        cmd.addAll(List.of(from.toString(), to.toString()));
+
+        try (var p = capture(Path.of("").toAbsolutePath(), cmd)) {
             await(p);
         }
         return new HgRepository(to);
     }
 
