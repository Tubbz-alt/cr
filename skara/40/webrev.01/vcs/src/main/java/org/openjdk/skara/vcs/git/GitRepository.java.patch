diff a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
@@ -82,10 +82,14 @@
         return Process.capture(cmd)
                       .workdir(cwd)
                       .execute();
     }
 
+    private static Execution capture(Path cwd, List<String> cmd) {
+        return capture(cwd, cmd.toArray(new String[0]));
+    }
+
     private static Execution.Result await(Execution e) throws IOException {
         var result = e.await();
         if (result.status() != 0) {
             throw new IOException("Unexpected exit code\n" + result);
         }
@@ -827,12 +831,18 @@
             var lines = await(p).stdout();
             return lines.size() == 1 && !lines.get(0).isEmpty()? Optional.of(lines.get(0)) : Optional.empty();
         }
     }
 
-    public static Repository clone(URI from, Path to) throws IOException {
-        try (var p = capture(Path.of("").toAbsolutePath(), "git", "clone", from.toString(), to.toString())) {
+    public static Repository clone(URI from, Path to, boolean isBare) throws IOException {
+        var cmd = new ArrayList<String>();
+        cmd.addAll(List.of("git", "clone"));
+        if (isBare) {
+            cmd.add("--bare");
+        }
+        cmd.addAll(List.of(from.toString(), to.toString()));
+        try (var p = capture(Path.of("").toAbsolutePath(), cmd)) {
             await(p);
         }
         return new GitRepository(to);
     }
 
