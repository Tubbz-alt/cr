diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/CommitFormatters.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/CommitFormatters.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/CommitFormatters.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/CommitFormatters.java
@@ -27,11 +27,11 @@
 
 import java.io.*;
 import java.time.format.DateTimeFormatter;
 
 class CommitFormatters {
-    static String commitToTextBrief(HostedRepository repository, Commit commit) {
+    static String toTextBrief(HostedRepository repository, Commit commit) {
         var writer = new StringWriter();
         var printer = new PrintWriter(writer);
 
         printer.println("Changeset: " + commit.hash().abbreviate());
         printer.println("Author:    " + commit.author().name() + " <" + commit.author().email() + ">");
@@ -54,15 +54,15 @@
         } else {
             return "= " + patch.target().path().orElseThrow();
         }
     }
 
-    static String commitToText(HostedRepository repository, Commit commit) {
+    static String toText(HostedRepository repository, Commit commit) {
         var writer = new StringWriter();
         var printer = new PrintWriter(writer);
 
-        printer.print(commitToTextBrief(repository, commit));
+        printer.print(toTextBrief(repository, commit));
         printer.println();
         printer.println(String.join("\n", commit.message()));
         printer.println();
 
         for (var diff : commit.parentDiffs()) {
diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java
@@ -40,11 +40,11 @@
     }
 
     @Override
     public void handleCommits(HostedRepository repository, List<Commit> commits, Branch branch) {
         for (var commit : commits) {
-            var commitNotification = CommitFormatters.commitToTextBrief(repository, commit);
+            var commitNotification = CommitFormatters.toTextBrief(repository, commit);
             var commitMessage = CommitMessageParsers.v1.parse(commit);
             for (var commitIssue : commitMessage.issues()) {
                 var issue = issueProject.issue(commitIssue.id());
                 if (issue.isEmpty()) {
                     log.severe("Cannot update issue " + commitIssue.id() + " with commit " + commit.hash().abbreviate()
diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
@@ -154,11 +154,11 @@
                 ret.add(commit);
                 continue;
             }
             var rfr = rfrCandidates.get(0);
 
-            var body = CommitFormatters.commitToText(repository, commit);
+            var body = CommitFormatters.toText(repository, commit);
             var email = Email.reply(rfr, "Re: [Integrated] " + rfr.subject(), body)
                              .sender(sender)
                              .author(commitToAuthor(commit))
                              .recipient(recipient)
                              .headers(headers)
@@ -176,11 +176,11 @@
 
         var writer = new StringWriter();
         var printer = new PrintWriter(writer);
 
         for (var commit : commits) {
-            printer.println(CommitFormatters.commitToText(repository, commit));
+            printer.println(CommitFormatters.toText(repository, commit));
         }
 
         var subject = commitsToSubject(repository, commits, branch);
         var lastCommit = commits.get(commits.size() - 1);
         var commitAddress = filteredAuthor(EmailAddress.from(lastCommit.committer().name(), lastCommit.committer().email()));
@@ -219,11 +219,11 @@
 
         var taggedCommit = commits.get(commits.size() - 1);
         if (annotation != null) {
             printer.println(tagAnnotationToText(repository, annotation));
         }
-        printer.println(CommitFormatters.commitToTextBrief(repository, taggedCommit));
+        printer.println(CommitFormatters.toTextBrief(repository, taggedCommit));
 
         printer.println("The following commits are included in " + tag.tag());
         printer.println("========================================================");
         for (var commit : commits) {
             printer.print(commit.hash().abbreviate());
@@ -257,11 +257,11 @@
         var printer = new PrintWriter(writer);
 
         if (annotation != null) {
             printer.println(tagAnnotationToText(repository, annotation));
         }
-        printer.println(CommitFormatters.commitToTextBrief(repository, commit));
+        printer.println(CommitFormatters.toTextBrief(repository, commit));
 
         var subject = tagToSubject(repository, commit.hash(), tag);
         var email = Email.create(subject, writer.toString())
                          .sender(sender)
                          .recipient(recipient)
