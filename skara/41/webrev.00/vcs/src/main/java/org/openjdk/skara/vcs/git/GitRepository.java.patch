diff a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
@@ -305,10 +305,17 @@
             await(p);
             return resolve("FETCH_HEAD").get();
         }
     }
 
+    @Override
+    public void fetchAll() throws IOException {
+        try (var p = capture("git", "fetch", "--tags", "--prune", "--prune-tags", "--all")) {
+            await(p);
+        }
+    }
+
     private void checkout(String ref, boolean force) throws IOException {
         var cmd = new ArrayList<String>();
         cmd.addAll(List.of("git", "-c", "advice.detachedHead=false", "checkout"));
         if (force) {
             cmd.add("--force");
@@ -438,10 +445,17 @@
         try (var p = capture(cmd)) {
             await(p);
         }
     }
 
+    @Override
+    public void delete(Branch b) throws IOException {
+        try (var p = capture("git", "branch", "-D", b.name())) {
+            await(p);
+        }
+    }
+
     @Override
     public Hash commit(String message, String authorName, String authorEmail)  throws IOException {
         return commit(message, authorName, authorEmail, null);
     }
 
@@ -844,23 +858,40 @@
             await(p);
         }
         return new GitRepository(to);
     }
 
+    public static Repository mirror(URI from, Path to) throws IOException {
+        var cwd = Path.of("").toAbsolutePath();
+        try (var p = capture(cwd, "git", "clone", "--mirror", from.toString(), to.toString())) {
+            await(p);
+        }
+        return new GitRepository(to);
+    }
+
     @Override
     public void pull() throws IOException {
-        pull("origin", "master");
+        pull(null, null);
     }
 
     @Override
     public void pull(String remote) throws IOException {
-        pull(remote, "master");
+        pull(remote, null);
     }
 
 
     @Override
     public void pull(String remote, String refspec) throws IOException {
-        try (var p = capture("git", "pull", remote, refspec)) {
+        var cmd = new ArrayList<String>();
+        cmd.add("git");
+        cmd.add("pull");
+        if (remote != null) {
+            cmd.add(remote);
+        }
+        if (refspec != null) {
+            cmd.add(refspec);
+        }
+        try (var p = capture(cmd)) {
             await(p);
         }
     }
 }
