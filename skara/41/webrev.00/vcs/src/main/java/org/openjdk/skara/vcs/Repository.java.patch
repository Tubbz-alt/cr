diff a/vcs/src/main/java/org/openjdk/skara/vcs/Repository.java b/vcs/src/main/java/org/openjdk/skara/vcs/Repository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/Repository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/Repository.java
@@ -36,10 +36,11 @@
 public interface Repository extends ReadOnlyRepository {
     Repository init() throws IOException;
     void checkout(Hash h, boolean force) throws IOException;
     void checkout(Branch b, boolean force) throws IOException;
     Hash fetch(URI uri, String refspec) throws IOException;
+    void fetchAll() throws IOException;
     void pushAll(URI uri) throws IOException;
     void push(Hash hash, URI uri, String ref, boolean force) throws IOException;
     void push(Branch branch, String remote, boolean setUpstream) throws IOException;
     void clean() throws IOException;
     Repository reinitialize() throws IOException;
@@ -95,10 +96,11 @@
                String authorEmail,
                String committerName,
                String committerEmail) throws IOException;
     Tag tag(Hash hash, String tagName, String message, String authorName, String authorEmail) throws IOException;
     Branch branch(Hash hash, String branchName) throws IOException;
+    void delete(Branch b) throws IOException;
     void rebase(Hash hash, String committerName, String committerEmail) throws IOException;
     void merge(Hash hash) throws IOException;
     void merge(Hash hash, String strategy) throws IOException;
     void addRemote(String name, String path) throws IOException;
     void setPaths(String remote, String pullPath, String pushPath) throws IOException;
@@ -182,6 +184,12 @@
 
     static Repository clone(URI from, Path to, boolean isBare) throws IOException {
         return from.getPath().toString().endsWith(".git") ?
             GitRepository.clone(from, to, isBare) : HgRepository.clone(from, to, isBare);
     }
+
+    static Repository mirror(URI from, Path to) throws IOException {
+        return from.getPath().toString().endsWith(".git") ?
+            GitRepository.mirror(from, to) :
+            HgRepository.clone(from, to, true); // hg does not have concept of "mirror"
+    }
 }
