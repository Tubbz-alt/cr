diff a/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
@@ -664,10 +664,26 @@
             }
             return entries;
         }
     }
 
+    @Override
+    public List<StatusEntry> status(Hash from, Hash to) throws IOException {
+        var ext = Files.createTempFile("ext", ".py");
+        copyResource(EXT_PY, ext);
+
+        try (var p = capture("hg", "--config", "extensions.diff-git-raw=" + ext.toAbsolutePath().toString(),
+                                               "diff-git-raw", from.hex(), to.hex())) {
+            var res = await(p);
+            var entries = new ArrayList<StatusEntry>();
+            for (var line : res.stdout()) {
+                entries.add(StatusEntry.fromRawLine(line));
+            }
+            return entries;
+        }
+    }
+
     @Override
     public void dump(FileEntry entry, Path to) throws IOException {
         var output = to.toAbsolutePath();
         try (var p = capture("hg", "cat", "--output=" + output.toString(),
                                           "--rev=" + entry.commit(),
@@ -692,11 +708,11 @@
     public Diff diff(Hash from, Hash to) throws IOException {
         var ext = Files.createTempFile("ext", ".py");
         copyResource(EXT_PY, ext);
 
         var cmd = new ArrayList<>(List.of("hg", "--config", "extensions.diff-git-raw=" + ext.toAbsolutePath(),
-                                                "diff-git-raw", from.hex()));
+                                                "diff-git-raw", "--patch", from.hex()));
         if (to != null) {
             cmd.add(to.hex());
         }
 
         var p = start(cmd);
