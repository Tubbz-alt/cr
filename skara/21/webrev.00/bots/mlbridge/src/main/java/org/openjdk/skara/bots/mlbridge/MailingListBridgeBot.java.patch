diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
@@ -28,10 +28,11 @@
 import org.openjdk.skara.jcheck.JCheckConfiguration;
 
 import java.net.URI;
 import java.nio.file.Path;
 import java.util.*;
+import java.util.regex.Pattern;
 import java.util.stream.Collectors;
 
 public class MailingListBridgeBot implements Bot {
     private final EmailAddress emailAddress;
     private final HostedRepository codeRepo;
@@ -38,16 +40,18 @@
     private final EmailAddress listAddress;
     private final Set<String> ignoredUsers;
     private final URI listArchive;
     private final String smtpServer;
     private final WebrevStorage webrevStorage;
+    private final Set<String> readyLabels;
+    private final Map<String, Pattern> readyComments;
 
     MailingListBridgeBot(EmailAddress from, HostedRepository repo, HostedRepository archive, EmailAddress list,
                          Set<String> ignoredUsers, URI listArchive, String smtpServer,
                          HostedRepository webrevStorageRepository, String webrevStorageRef,
-                         Path webrevStorageBase, URI webrevStorageBaseUri) {
+                         Path webrevStorageBase, URI webrevStorageBaseUri, Set<String> readyLabels,
+                         Map<String, Pattern> readyComments) {
         emailAddress = from;
         codeRepo = repo;
         archiveRepo = archive;
         listAddress = list;
         this.ignoredUsers = ignoredUsers;
@@ -50,21 +55,16 @@
         archiveRepo = archive;
         listAddress = list;
         this.ignoredUsers = ignoredUsers;
         this.listArchive = listArchive;
         this.smtpServer = smtpServer;
+        this.readyLabels = readyLabels;
+        this.readyComments = readyComments;
 
         this.webrevStorage = new WebrevStorage(webrevStorageRepository, webrevStorageRef, webrevStorageBase,
                                                webrevStorageBaseUri, from);
     }
 
-    JCheckConfiguration configuration() {
-        var confFile = codeRepo.getFileContents(".jcheck/conf", "master");
-        return JCheckConfiguration.parse(confFile.lines().collect(Collectors.toList()));
-    }
-
     HostedRepository codeRepo() {
         return codeRepo;
     }
 
     HostedRepository archiveRepo() {
@@ -93,10 +94,18 @@
 
     WebrevStorage webrevStorage() {
         return webrevStorage;
     }
 
+    Set<String> readyLabels() {
+        return readyLabels;
+    }
+
+    Map<String, Pattern> readyComments() {
+        return readyComments;
+    }
+
     @Override
     public List<WorkItem> getPeriodicItems() {
         List<WorkItem> ret = new LinkedList<>();
 
         for (var pr : codeRepo.getPullRequests()) {
