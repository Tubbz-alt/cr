diff a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
@@ -34,10 +34,11 @@
 import java.net.http.HttpRequest;
 import java.net.http.HttpResponse;
 import java.nio.file.*;
 import java.util.*;
 import java.util.regex.Pattern;
+import java.util.stream.Collectors;
 
 public class GitWebrev {
     private static void clearDirectory(Path directory) {
         try {
             Files.walk(directory)
@@ -132,11 +133,17 @@
             Switch.shortcut("v")
                   .fullname("version")
                   .helptext("Print the version of this tool")
                   .optional());
 
-        var parser = new ArgumentParser("git webrev", flags);
+        var inputs = List.of(
+            Input.position(0)
+                 .describe("FILE")
+                 .singular()
+                 .optional());
+
+        var parser = new ArgumentParser("git webrev", flags, inputs);
         var arguments = parser.parse(args);
 
         var version = Version.fromManifest().orElse("unknown");
         if (arguments.contains("version")) {
             System.out.println("git-webrev version: " + version);
@@ -244,17 +251,23 @@
 
         if (Files.exists(output)) {
             clearDirectory(output);
         }
 
+        List<Path> files = List.of();
+        if (arguments.at(0).isPresent()) {
+            var path = arguments.at(0).via(Path::of);
+            files = Files.readAllLines(path).stream().map(Path::of).collect(Collectors.toList());
+        }
         Webrev.repository(repo)
               .output(output)
               .title(title)
               .upstream(upstream)
               .username(username)
               .issue(issue)
               .version(version)
+              .files(files)
               .generate(rev);
     }
 
     private static void apply(String[] args) throws Exception {
         var inputs = List.of(
