diff a/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
@@ -855,11 +855,11 @@
             await(p);
         }
     }
 
     @Override
-    public void remove(Path... paths) throws IOException {
+    public void remove(List<Path> paths) throws IOException {
         var cmd = new ArrayList<>(List.of("hg", "rm"));
         for (var p : paths) {
             cmd.add(p.toString());
         }
         try (var p = capture(cmd)) {
@@ -866,11 +866,11 @@
             await(p);
         }
     }
 
     @Override
-    public void add(Path... paths) throws IOException {
+    public void add(List<Path> paths) throws IOException {
         var cmd = new ArrayList<>(List.of("hg", "add"));
         for (var p : paths) {
             cmd.add(p.toString());
         }
         try (var p = capture(cmd)) {
@@ -876,10 +876,17 @@
         try (var p = capture(cmd)) {
             await(p);
         }
     }
 
+    @Override
+    public void addremove() throws IOException {
+        try (var p = capture("hg", "addremove")) {
+            await(p);
+        }
+    }
+
     @Override
     public Optional<String> upstreamFor(Branch b) throws IOException {
         // Mercurial doesn't have the concept of remotes like git,
         // a local branch must have the same name (if present) on the remote
         return Optional.of(b.name());
