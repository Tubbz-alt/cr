diff a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/IntegrateTests.java b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/IntegrateTests.java
--- a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/IntegrateTests.java
+++ b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/IntegrateTests.java
@@ -58,11 +58,11 @@
             localRepo.push(editHash, author.getUrl(), "refs/heads/edit", true);
             var pr = credentials.createPullRequest(author, "master", "edit", "This is a pull request");
 
             // Approve it as another user
             var approvalPr = integrator.getPullRequest(pr.getId());
-            approvalPr.addReview(Review.Verdict.APPROVED);
+            approvalPr.addReview(Review.Verdict.APPROVED, "Approved");
 
             // Attempt a merge (the bot should only process the first one)
             pr.addComment("/integrate");
             pr.addComment("/integrate");
             pr.addComment("/integrate");
@@ -116,12 +116,12 @@
             var pr = credentials.createPullRequest(author, "master", "edit", "This is a pull request");
 
             // Review it twice
             var integratorPr = integrator.getPullRequest(pr.getId());
             var committerPr = committer.getPullRequest(pr.getId());
-            integratorPr.addReview(Review.Verdict.APPROVED);
-            committerPr.addReview(Review.Verdict.APPROVED);
+            integratorPr.addReview(Review.Verdict.APPROVED, "Approved");
+            committerPr.addReview(Review.Verdict.APPROVED, "Approved");
 
             // Attempt a merge
             pr.addComment("/integrate");
             TestBotRunner.runPeriodicItems(mergeBot);
 
@@ -280,11 +280,11 @@
             localRepo.push(editHash, author.getUrl(), "refs/heads/edit", true);
             var pr = credentials.createPullRequest(author, "master", "edit", "This is a pull request");
 
             // Approve it as another user
             var approvalPr = integrator.getPullRequest(pr.getId());
-            approvalPr.addReview(Review.Verdict.APPROVED);
+            approvalPr.addReview(Review.Verdict.APPROVED, "Approved");
 
             // Let the bot see it (a few times)
             TestBotRunner.runPeriodicItems(mergeBot);
             TestBotRunner.runPeriodicItems(mergeBot);
             TestBotRunner.runPeriodicItems(mergeBot);
@@ -301,11 +301,11 @@
                           .filter(comment -> comment.body().contains("Only the author"))
                           .count();
             assertEquals(0, error);
 
             // Drop the approval
-            approvalPr.addReview(Review.Verdict.DISAPPROVED);
+            approvalPr.addReview(Review.Verdict.DISAPPROVED, "Disapproved");
             TestBotRunner.runPeriodicItems(mergeBot);
 
             // The instructional message should have been updated
             pushed = pr.getComments().stream()
                        .filter(comment -> comment.body().contains("no longer ready for integration"))
@@ -311,11 +311,11 @@
                        .filter(comment -> comment.body().contains("no longer ready for integration"))
                        .count();
             assertEquals(1, pushed);
 
             // Restore the approval
-            approvalPr.addReview(Review.Verdict.APPROVED);
+            approvalPr.addReview(Review.Verdict.APPROVED, "Approved");
             TestBotRunner.runPeriodicItems(mergeBot);
 
             // The instructional message should have been updated
             pushed = pr.getComments().stream()
                            .filter(comment -> comment.body().contains("change can now be integrated"))
@@ -323,11 +323,11 @@
                            .count();
             assertEquals(1, pushed);
 
             // Approve it as yet another user
             var reviewerPr = reviewer.getPullRequest(pr.getId());
-            reviewerPr.addReview(Review.Verdict.APPROVED);
+            reviewerPr.addReview(Review.Verdict.APPROVED, "Approved");
             TestBotRunner.runPeriodicItems(mergeBot);
 
             // The instructional message should have been updated
             pushed = pr.getComments().stream()
                            .filter(comment -> comment.body().contains("change can now be integrated"))
@@ -397,11 +397,11 @@
             localRepo.push(editHash, author.getUrl(), "edit", true);
             var pr = credentials.createPullRequest(author, "master", "edit", "This is a pull request");
 
             // Approve it as another user
             var approvalPr = integrator.getPullRequest(pr.getId());
-            approvalPr.addReview(Review.Verdict.APPROVED);
+            approvalPr.addReview(Review.Verdict.APPROVED, "Approved");
 
             // Push something unrelated to master
             localRepo.checkout(masterHash, true);
             var unrelated = localRepo.root().resolve("unrelated.txt");
             Files.writeString(unrelated, "Hello");
