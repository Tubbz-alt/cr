diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckWorkItem.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckWorkItem.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckWorkItem.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckWorkItem.java
@@ -70,12 +70,12 @@
 
     String getMetadata(String title, String body, List<Comment> comments, List<Review> reviews, Set<String> labels,
                        CensusInstance censusInstance, Hash target) {
         try {
             var approverString = reviews.stream()
-                                        .filter(review -> review.verdict == Review.Verdict.APPROVED)
-                                        .map(review -> encodeReviewer(review.reviewer, censusInstance) + review.hash.hex())
+                                        .filter(review -> review.verdict() == Review.Verdict.APPROVED)
+                                        .map(review -> encodeReviewer(review.reviewer(), censusInstance) + review.hash().hex())
                                         .sorted()
                                         .collect(Collectors.joining());
             var commentString = comments.stream()
                                         .filter(comment -> comment.author().id().equals(pr.repository().host().getCurrentUserDetails().id()))
                                         .flatMap(comment -> comment.body().lines())
@@ -154,17 +154,19 @@
     @Override
     public void run(Path scratchPath) {
         // First determine if the current state of the PR has already been checked
         var census = CensusInstance.create(censusRepo, censusRef, scratchPath.resolve("census"), pr);
         var comments = pr.getComments();
-        var reviews = pr.getReviews();
-        var labels = new HashSet(pr.getLabels());
+        var allReviews = pr.getReviews();
+        var labels = new HashSet<>(pr.getLabels());
 
-        if (!currentCheckValid(census, comments, reviews, labels)) {
+        // Filter out the active reviews
+        var activeReviews = PullRequestInstance.filterActiveReviews(allReviews);
+        if (!currentCheckValid(census, comments, activeReviews, labels)) {
             try {
                 var prInstance = new PullRequestInstance(scratchPath.resolve("pr"), pr);
-                CheckRun.execute(this, pr, prInstance, comments, reviews, labels, census, blockingLabels);
+                CheckRun.execute(this, pr, prInstance, comments, allReviews, activeReviews, labels, census, blockingLabels);
             } catch (IOException e) {
                 throw new UncheckedIOException(e);
             }
         }
     }
