diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ReviewTracker.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ReviewTracker.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ReviewTracker.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ReviewTracker.java
@@ -70,18 +70,18 @@
         }
 
         // Find all reviews without a comment
         for (var review : reviews) {
             // Not notified yet
-            if (!reviewStates.containsKey(review.reviewer.id())) {
-                newComments.put(review, String.format(reviewMarker, review.verdict.ordinal(), review.reviewer.id(), review.reviewer.userName(), review.hash.hex()));
+            if (!reviewStates.containsKey(review.reviewer().id())) {
+                newComments.put(review, String.format(reviewMarker, review.verdict().ordinal(), review.reviewer().id(), review.reviewer().userName(), review.hash().hex()));
             } else {
-                var oldReview = reviewStates.get(review.reviewer.id());
-                if (review.verdict.ordinal() != oldReview.verdict) {
-                    updatedReviews.put(review, String.format(reviewMarker, review.verdict.ordinal(), review.reviewer.id(), review.reviewer.userName(), review.hash.hex()));
+                var oldReview = reviewStates.get(review.reviewer().id());
+                if (review.verdict().ordinal() != oldReview.verdict) {
+                    updatedReviews.put(review, String.format(reviewMarker, review.verdict().ordinal(), review.reviewer().id(), review.reviewer().userName(), review.hash().hex()));
                 }
-                reviewStates.remove(review.reviewer.id());
+                reviewStates.remove(review.reviewer().id());
             }
         }
 
         // Check if there are any states not covered by reviews - these must have been removed
         for (var reviewState : reviewStates.values()) {
