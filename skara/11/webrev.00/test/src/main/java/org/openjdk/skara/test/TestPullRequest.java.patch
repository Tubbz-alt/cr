diff a/test/src/main/java/org/openjdk/skara/test/TestPullRequest.java b/test/src/main/java/org/openjdk/skara/test/TestPullRequest.java
--- a/test/src/main/java/org/openjdk/skara/test/TestPullRequest.java
+++ b/test/src/main/java/org/openjdk/skara/test/TestPullRequest.java
@@ -103,27 +103,22 @@
     public List<Review> getReviews() {
         return new ArrayList<>(data.reviews);
     }
 
     @Override
-    public void addReview(Review.Verdict verdict) {
-        var reviewer = repository.host().getCurrentUserDetails();
-        var existing = data.reviews.stream()
-                .filter(review -> review.reviewer.equals(reviewer))
-                .findAny();
-        existing.ifPresent(data.reviews::remove);
-
-        var review = new Review();
-        review.reviewer = reviewer;
-        review.verdict = verdict;
+    public void addReview(Review.Verdict verdict, String body) {
         try {
-            review.hash = repository.localRepository().resolve(sourceRef).orElseThrow();
+            var review = new Review(repository.host().getCurrentUserDetails(),
+                                    verdict, repository.localRepository().resolve(sourceRef).orElseThrow(),
+                                    data.reviews.size(),
+                                    body);
+
+            data.reviews.add(review);
+            data.lastUpdate = ZonedDateTime.now();
+
         } catch (IOException e) {
             throw new UncheckedIOException(e);
         }
-        data.reviews.add(review);
-        data.lastUpdate = ZonedDateTime.now();
     }
 
     @Override
     public ReviewComment addReviewComment(Hash base, Hash hash, String path, int line, String body) {
         var comment = new ReviewComment(null, String.valueOf(data.reviewComments.size()), hash, path, line, String.valueOf(data.reviewComments.size()), body, user, ZonedDateTime.now(), ZonedDateTime.now());
