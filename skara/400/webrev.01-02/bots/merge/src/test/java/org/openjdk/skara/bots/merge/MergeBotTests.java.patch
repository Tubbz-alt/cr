diff a/bots/merge/src/test/java/org/openjdk/skara/bots/merge/MergeBotTests.java b/bots/merge/src/test/java/org/openjdk/skara/bots/merge/MergeBotTests.java
--- a/bots/merge/src/test/java/org/openjdk/skara/bots/merge/MergeBotTests.java
+++ b/bots/merge/src/test/java/org/openjdk/skara/bots/merge/MergeBotTests.java
@@ -107,11 +107,11 @@
             assertTrue(hashes.contains(toHashC));
 
             var known = Set.of(toHashA, fromHashB, toHashC);
             var merge = toCommits.stream().filter(c -> !known.contains(c.hash())).findAny().get();
             assertTrue(merge.isMerge());
-            assertEquals(List.of("Merge branch: 'master' into: 'master'"), merge.message());
+            assertEquals(List.of(Automatic merge of 'master' into 'master'), merge.message());
             assertEquals("duke", merge.author().name());
             assertEquals("duke@openjdk.org", merge.author().email());
 
             assertEquals(0, toHostedRepo.pullRequests().size());
         }
@@ -536,11 +536,11 @@
             assertTrue(hashes.contains(toHashC));
 
             var known = Set.of(toHashA, fromHashB, toHashC);
             var merge = toCommits.stream().filter(c -> !known.contains(c.hash())).findAny().get();
             assertTrue(merge.isMerge());
-            assertEquals(List.of("Merge branch: 'master' into: 'master'"), merge.message());
+            assertEquals(List.of(Automatic merge of 'master' into 'master'), merge.message());
             assertEquals("duke", merge.author().name());
             assertEquals("duke@openjdk.org", merge.author().email());
 
             assertEquals(0, toHostedRepo.pullRequests().size());
 
@@ -651,11 +651,11 @@
             assertTrue(hashes.contains(toHashC));
 
             var known = Set.of(toHashA, fromHashB, toHashC);
             var merge = toCommits.stream().filter(c -> !known.contains(c.hash())).findAny().get();
             assertTrue(merge.isMerge());
-            assertEquals(List.of("Merge branch: 'master' into: 'master'"), merge.message());
+            assertEquals(List.of(Automatic merge of 'master' into 'master'), merge.message());
             assertEquals("duke", merge.author().name());
             assertEquals("duke@openjdk.org", merge.author().email());
 
             assertEquals(0, toHostedRepo.pullRequests().size());
 
@@ -772,11 +772,11 @@
             assertTrue(hashes.contains(toHashC));
 
             var known = Set.of(toHashA, fromHashB, toHashC);
             var merge = toCommits.stream().filter(c -> !known.contains(c.hash())).findAny().get();
             assertTrue(merge.isMerge());
-            assertEquals(List.of("Merge branch: 'master' into: 'master'"), merge.message());
+            assertEquals(List.of(Automatic merge of 'master' into 'master'), merge.message());
             assertEquals("duke", merge.author().name());
             assertEquals("duke@openjdk.org", merge.author().email());
 
             assertEquals(0, toHostedRepo.pullRequests().size());
 
@@ -893,11 +893,11 @@
             assertTrue(hashes.contains(toHashC));
 
             var known = Set.of(toHashA, fromHashB, toHashC);
             var merge = toCommits.stream().filter(c -> !known.contains(c.hash())).findAny().get();
             assertTrue(merge.isMerge());
-            assertEquals(List.of("Merge branch: 'master' into: 'master'"), merge.message());
+            assertEquals(List.of(Automatic merge of 'master' into 'master'), merge.message());
             assertEquals("duke", merge.author().name());
             assertEquals("duke@openjdk.org", merge.author().email());
 
             assertEquals(0, toHostedRepo.pullRequests().size());
 
@@ -1014,11 +1014,11 @@
             assertTrue(hashes.contains(toHashC));
 
             var known = Set.of(toHashA, fromHashB, toHashC);
             var merge = toCommits.stream().filter(c -> !known.contains(c.hash())).findAny().get();
             assertTrue(merge.isMerge());
-            assertEquals(List.of("Merge branch: 'master' into: 'master'"), merge.message());
+            assertEquals(List.of(Automatic merge of 'master' into 'master'), merge.message());
             assertEquals("duke", merge.author().name());
             assertEquals("duke@openjdk.org", merge.author().email());
 
             assertEquals(0, toHostedRepo.pullRequests().size());
 
