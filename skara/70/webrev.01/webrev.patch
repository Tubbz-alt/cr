diff a/cli/src/main/java/org/openjdk/skara/cli/HgOpenJDKImport.java b/cli/src/main/java/org/openjdk/skara/cli/HgOpenJDKImport.java
--- a/cli/src/main/java/org/openjdk/skara/cli/HgOpenJDKImport.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/HgOpenJDKImport.java
@@ -34,17 +34,18 @@
 import static java.util.stream.Collectors.toList;
 import java.util.function.*;
 import java.util.logging.*;
 
 public class HgOpenJDKImport {
-    private static void die(Exception e) {
-        System.err.println(e.getMessage());
-        System.exit(1);
+    static class ErrorException extends RuntimeException {
+        ErrorException(String s) {
+            super(s);
+        }
     }
 
-    private static Supplier<NoSuchElementException> error(String fmt, Object... args) {
-        return () -> new NoSuchElementException(String.format(fmt, args));
+    private static Supplier<ErrorException> error(String fmt, Object... args) {
+        return () -> new ErrorException(String.format(fmt, args));
     }
 
     public static void main(String[] args) throws IOException {
         var flags = List.of(
             Switch.shortcut("")
@@ -72,16 +73,16 @@
         if (arguments.contains("version")) {
             System.out.println("hg-openjdk-import version: " + Version.fromManifest().orElse("unknown"));
             System.exit(0);
         }
 
-        try {
-            if (arguments.contains("verbose") || arguments.contains("debug")) {
-                var level = arguments.contains("debug") ? Level.FINER : Level.FINE;
-                Logging.setup(level);
-            }
+        if (arguments.contains("verbose") || arguments.contains("debug")) {
+            var level = arguments.contains("debug") ? Level.FINER : Level.FINE;
+            Logging.setup(level);
+        }
 
+        try {
             var cwd = Path.of("").toAbsolutePath();
             var hgRepo = Repository.get(cwd)
                                    .orElseThrow(error("%s is not a hg repository", cwd));
 
             var gitDir = arguments.at(0).via(Path::of);
@@ -98,10 +99,11 @@
                     writer.write(" ");
                     writer.write(mark.hg().hex());
                     writer.newLine();
                 }
             }
-        } catch (NoSuchElementException e) {
-            die(e);
+        } catch (ErrorException e) {
+            System.err.println(e.getMessage());
+            System.exit(1);
         }
     }
 }
