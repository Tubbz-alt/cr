diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/IntegrateCommand.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/IntegrateCommand.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/IntegrateCommand.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/IntegrateCommand.java
@@ -95,10 +95,11 @@
             var rebasedHash = prInstance.rebase(hash, reply);
             if (rebasedHash.isPresent()) {
                 reply.println("Pushed as commit " + rebasedHash.get().hex() + ".");
                 prInstance.localRepo().push(rebasedHash.get(), pr.repository().getUrl(), pr.getTargetRef());
                 pr.setState(PullRequest.State.CLOSED);
+                pr.addLabel("integrated");
             }
         } catch (IOException e) {
             log.throwing("IntegrateCommand", "handle", e);
             reply.println("An error occurred during integration");
             throw new UncheckedIOException(e);
diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/SponsorCommand.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/SponsorCommand.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/SponsorCommand.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/SponsorCommand.java
@@ -77,10 +77,11 @@
             var rebasedHash = prInstance.rebase(hash, reply);
             if (rebasedHash.isPresent()) {
                 reply.println("Pushed as commit " + rebasedHash.get().hex() + ".");
                 prInstance.localRepo().push(rebasedHash.get(), pr.repository().getUrl(), pr.getTargetRef());
                 pr.setState(PullRequest.State.CLOSED);
+                pr.addLabel("integrated");
             }
         } catch (IOException e) {
             log.throwing("SponsorCommand", "handle", e);
             reply.println("An error occurred during sponsored integration");
             throw new UncheckedIOException(e);
diff a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/IntegrateTests.java b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/IntegrateTests.java
--- a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/IntegrateTests.java
+++ b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/IntegrateTests.java
@@ -84,10 +84,11 @@
             // Author and committer should be the same
             assertEquals("Generated Committer 1", headCommit.author().name());
             assertEquals("integrationcommitter1@openjdk.java.net", headCommit.author().email());
             assertEquals("Generated Committer 1", headCommit.committer().name());
             assertEquals("integrationcommitter1@openjdk.java.net", headCommit.committer().email());
+            assertTrue(pr.getLabels().contains("integrated"));
         }
     }
 
     @Test
     void reviewersRetained(TestInfo testInfo) throws IOException {
diff a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/SponsorTests.java b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/SponsorTests.java
--- a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/SponsorTests.java
+++ b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/SponsorTests.java
@@ -108,10 +108,11 @@
                 assertEquals("ta@none.none", headCommit.author().email());
             }
 
             assertEquals("Generated Reviewer 1", headCommit.committer().name());
             assertEquals("integrationreviewer1@openjdk.java.net", headCommit.committer().email());
+            assertTrue(pr.getLabels().contains("integrated"));
         }
     }
 
     @Test
     void sponsorNonAuthor(TestInfo testInfo) throws IOException {
