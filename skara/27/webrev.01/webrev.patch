diff a/bots/cli/build.gradle b/bots/cli/build.gradle
--- a/bots/cli/build.gradle
+++ b/bots/cli/build.gradle
@@ -48,10 +48,11 @@
     implementation project(':census')
     implementation project(':json')
     implementation project(':ini')
     implementation project(':process')
     implementation project(':args')
+    implementation project(':proxy')
 
     testImplementation project(':test')
 }
 
 images {
diff a/bots/cli/src/main/java/module-info.java b/bots/cli/src/main/java/module-info.java
--- a/bots/cli/src/main/java/module-info.java
+++ b/bots/cli/src/main/java/module-info.java
@@ -27,10 +27,11 @@
     requires org.openjdk.skara.bot;
     requires org.openjdk.skara.census;
     requires org.openjdk.skara.json;
     requires org.openjdk.skara.args;
     requires org.openjdk.skara.process;
+    requires org.openjdk.skara.proxy;
 
     requires java.sql;
 
     exports org.openjdk.skara.bots.cli;
 }
diff a/bots/cli/src/main/java/org/openjdk/skara/bots/cli/BotLauncher.java b/bots/cli/src/main/java/org/openjdk/skara/bots/cli/BotLauncher.java
--- a/bots/cli/src/main/java/org/openjdk/skara/bots/cli/BotLauncher.java
+++ b/bots/cli/src/main/java/org/openjdk/skara/bots/cli/BotLauncher.java
@@ -24,10 +24,11 @@
 
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.bot.*;
 import org.openjdk.skara.host.network.URIBuilder;
 import org.openjdk.skara.json.*;
+import org.openjdk.skara.proxy.HttpProxy;
 
 import java.io.IOException;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.*;
 import java.time.Duration;
@@ -107,10 +108,11 @@
             throw new RuntimeException("Failed to open configuration file: " + jsonFile);
         }
     }
 
     public static void main(String... args) {
+        HttpProxy.setup();
 
         var flags = List.of(
                 Option.shortcut("t")
                       .fullname("timeout")
                       .describe("ISO8601")
diff a/buildSrc/proxy/src/main/java/org/openjdk/skara/gradle/proxy/ProxyPlugin.java b/buildSrc/proxy/src/main/java/org/openjdk/skara/gradle/proxy/ProxyPlugin.java
--- a/buildSrc/proxy/src/main/java/org/openjdk/skara/gradle/proxy/ProxyPlugin.java
+++ b/buildSrc/proxy/src/main/java/org/openjdk/skara/gradle/proxy/ProxyPlugin.java
@@ -25,10 +25,11 @@
 
 import org.gradle.api.Plugin;
 import org.gradle.api.Project;
 
 import java.net.URI;
+import java.net.URISyntaxException;
 import java.util.Arrays;
 import java.util.List;
 import java.util.stream.Collectors;
 
 public class ProxyPlugin implements Plugin<Project> {
@@ -36,14 +37,18 @@
         for (var key : List.of("http_proxy", "https_proxy")) {
             var value = System.getenv(key);
             value = value == null ? System.getenv(key.toUpperCase()) : value;
             if (value != null) {
                 var protocol = key.split("_")[0];
-                var uri = URI.create(value);
-                if (System.getProperty(protocol + ".proxyHost") == null) {
-                    System.setProperty(protocol + ".proxyHost", uri.getHost());
-                    System.setProperty(protocol + ".proxyPort", String.valueOf(uri.getPort()));
+                try {
+                    var uri = new URI(value);
+                    if (System.getProperty(protocol + ".proxyHost") == null && uri.getHost() != null) {
+                        System.setProperty(protocol + ".proxyHost", uri.getHost());
+                        System.setProperty(protocol + ".proxyPort", String.valueOf(uri.getPort()));
+                    }
+                } catch (URISyntaxException e) {
+                    // pass
                 }
             }
         }
         var no_proxy = System.getenv("no_proxy");
         no_proxy = no_proxy == null ? System.getenv("NO_PROXY") : no_proxy;
diff a/cli/build.gradle b/cli/build.gradle
--- a/cli/build.gradle
+++ b/cli/build.gradle
@@ -36,10 +36,11 @@
     implementation project(':jcheck')
     implementation project(':vcs')
     implementation project(':webrev')
     implementation project(':json')
     implementation project(':host')
+    implementation project(':proxy')
 }
 
 
 jar {
     manifest {
diff a/cli/src/main/java/module-info.java b/cli/src/main/java/module-info.java
--- a/cli/src/main/java/module-info.java
+++ b/cli/src/main/java/module-info.java
@@ -26,10 +26,11 @@
     requires org.openjdk.skara.census;
     requires org.openjdk.skara.webrev;
     requires org.openjdk.skara.args;
     requires org.openjdk.skara.json;
     requires org.openjdk.skara.host;
+    requires org.openjdk.skara.proxy;
 
     requires java.net.http;
     requires java.logging;
 
     exports org.openjdk.skara.cli;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitFork.java b/cli/src/main/java/org/openjdk/skara/cli/GitFork.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitFork.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitFork.java
@@ -23,10 +23,11 @@
 package org.openjdk.skara.cli;
 
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.host.*;
 import org.openjdk.skara.vcs.Repository;
+import org.openjdk.skara.proxy.HttpProxy;
 
 import java.io.IOException;
 import java.net.URI;
 import java.nio.file.Path;
 import java.util.List;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
@@ -24,10 +24,11 @@
 
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.host.*;
 import org.openjdk.skara.vcs.*;
 import org.openjdk.skara.vcs.openjdk.*;
+import org.openjdk.skara.proxy.HttpProxy;
 
 import java.io.IOException;
 import java.net.URI;
 import java.nio.file.*;
 import java.util.*;
diff a/cli/src/main/java/org/openjdk/skara/cli/HttpProxy.java b/cli/src/main/java/org/openjdk/skara/cli/HttpProxy.java
--- a/cli/src/main/java/org/openjdk/skara/cli/HttpProxy.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- *
- * This code is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License version 2 only, as
- * published by the Free Software Foundation.
- *
- * This code is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * version 2 for more details (a copy is included in the LICENSE file that
- * accompanied this code).
- *
- * You should have received a copy of the GNU General Public License version
- * 2 along with this work; if not, write to the Free Software Foundation,
- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
- *
- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
- * or visit www.oracle.com if you need additional information or have any
- * questions.
- */
-package org.openjdk.skara.cli;
-
-import java.util.List;
-import java.net.URI;
-
-class HttpProxy {
-    static void setup() {
-        for (var key : List.of("http_proxy", "https_proxy")) {
-            var value = System.getenv(key);
-            value = value == null ? System.getenv(key.toUpperCase()) : value;
-            if (value != null) {
-                var protocol = key.split("_")[0];
-                var uri = URI.create(value);
-                System.setProperty(protocol + ".proxyHost", uri.getHost());
-                System.setProperty(protocol + ".proxyPort", String.valueOf(uri.getPort()));
-            }
-        }
-        var no_proxy = System.getenv("no_proxy");
-        no_proxy = no_proxy == null ? System.getenv("NO_PROXY") : no_proxy;
-        if (no_proxy != null) {
-            var hosts = no_proxy.replace(",", "|")
-                                .replaceAll("^\\.", "*.")
-                                .replaceAll("\\|\\.", "|*.");
-            System.setProperty("http.nonProxyHosts", hosts);
-        }
-    }
-}
diff a/proxy/build.gradle b/proxy/build.gradle
--- /dev/null
+++ b/proxy/build.gradle
@@ -0,0 +1,38 @@
+/*
+ * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+module {
+    name = 'org.openjdk.skara.proxy'
+    test {
+        requires 'org.junit.jupiter.api'
+        opens 'org.openjdk.skara.args' to 'org.junit.platform.commons'
+    }
+}
+
+publishing {
+    publications {
+        proxy(MavenPublication) {
+            from components.java
+        }
+    }
+}
diff a/proxy/src/main/java/module-info.java b/proxy/src/main/java/module-info.java
--- /dev/null
+++ b/proxy/src/main/java/module-info.java
@@ -0,0 +1,25 @@
+/*
+ * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+module org.openjdk.skara.proxy {
+    exports org.openjdk.skara.proxy;
+}
diff a/proxy/src/main/java/org/openjdk/skara/proxy/HttpProxy.java b/proxy/src/main/java/org/openjdk/skara/proxy/HttpProxy.java
--- /dev/null
+++ b/proxy/src/main/java/org/openjdk/skara/proxy/HttpProxy.java
@@ -0,0 +1,58 @@
+/*
+ * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+package org.openjdk.skara.proxy;
+
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.util.Arrays;
+import java.util.List;
+import java.util.stream.Collectors;
+
+public class HttpProxy {
+    public static void setup() {
+        for (var key : List.of("http_proxy", "https_proxy")) {
+            var value = System.getenv(key);
+            value = value == null ? System.getenv(key.toUpperCase()) : value;
+            if (value != null) {
+                var protocol = key.split("_")[0];
+                try {
+                    var uri = new URI(value);
+                    if (System.getProperty(protocol + ".proxyHost") == null && uri.getHost() != null) {
+                        System.setProperty(protocol + ".proxyHost", uri.getHost());
+                        System.setProperty(protocol + ".proxyPort", String.valueOf(uri.getPort()));
+                    }
+                } catch (URISyntaxException e) {
+                    // pass
+                }
+            }
+        }
+        var no_proxy = System.getenv("no_proxy");
+        no_proxy = no_proxy == null ? System.getenv("NO_PROXY") : no_proxy;
+        if (no_proxy != null && System.getProperty("http.nonProxyHosts") == null) {
+            var hosts = Arrays.stream(no_proxy.split(","))
+                              .map(s -> s.startsWith(".") ? "*" + s : s)
+                              .collect(Collectors.toList());
+            System.setProperty("http.nonProxyHosts", String.join("|", hosts));
+        }
+    }
+}
diff a/settings.gradle b/settings.gradle
--- a/settings.gradle
+++ b/settings.gradle
@@ -32,10 +32,11 @@
 include 'ini'
 include 'jcheck'
 include 'json'
 include 'mailinglist'
 include 'process'
+include 'proxy'
 include 'storage'
 include 'test'
 include 'vcs'
 include 'webrev'
 
