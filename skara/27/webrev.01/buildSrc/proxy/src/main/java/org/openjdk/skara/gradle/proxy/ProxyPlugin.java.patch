diff a/buildSrc/proxy/src/main/java/org/openjdk/skara/gradle/proxy/ProxyPlugin.java b/buildSrc/proxy/src/main/java/org/openjdk/skara/gradle/proxy/ProxyPlugin.java
--- a/buildSrc/proxy/src/main/java/org/openjdk/skara/gradle/proxy/ProxyPlugin.java
+++ b/buildSrc/proxy/src/main/java/org/openjdk/skara/gradle/proxy/ProxyPlugin.java
@@ -25,10 +25,11 @@
 
 import org.gradle.api.Plugin;
 import org.gradle.api.Project;
 
 import java.net.URI;
+import java.net.URISyntaxException;
 import java.util.Arrays;
 import java.util.List;
 import java.util.stream.Collectors;
 
 public class ProxyPlugin implements Plugin<Project> {
@@ -36,14 +37,18 @@
         for (var key : List.of("http_proxy", "https_proxy")) {
             var value = System.getenv(key);
             value = value == null ? System.getenv(key.toUpperCase()) : value;
             if (value != null) {
                 var protocol = key.split("_")[0];
-                var uri = URI.create(value);
-                if (System.getProperty(protocol + ".proxyHost") == null) {
-                    System.setProperty(protocol + ".proxyHost", uri.getHost());
-                    System.setProperty(protocol + ".proxyPort", String.valueOf(uri.getPort()));
+                try {
+                    var uri = new URI(value);
+                    if (System.getProperty(protocol + ".proxyHost") == null && uri.getHost() != null) {
+                        System.setProperty(protocol + ".proxyHost", uri.getHost());
+                        System.setProperty(protocol + ".proxyPort", String.valueOf(uri.getPort()));
+                    }
+                } catch (URISyntaxException e) {
+                    // pass
                 }
             }
         }
         var no_proxy = System.getenv("no_proxy");
         no_proxy = no_proxy == null ? System.getenv("NO_PROXY") : no_proxy;
