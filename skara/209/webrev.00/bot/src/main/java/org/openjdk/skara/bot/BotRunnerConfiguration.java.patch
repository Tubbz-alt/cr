diff a/bot/src/main/java/org/openjdk/skara/bot/BotRunnerConfiguration.java b/bot/src/main/java/org/openjdk/skara/bot/BotRunnerConfiguration.java
--- a/bot/src/main/java/org/openjdk/skara/bot/BotRunnerConfiguration.java
+++ b/bot/src/main/java/org/openjdk/skara/bot/BotRunnerConfiguration.java
@@ -54,15 +54,15 @@
     }
 
     private Map<String, Forge> parseRepositoryHosts(JSONObject config, Path cwd) throws ConfigurationError {
         Map<String, Forge> ret = new HashMap<>();
 
-        if (!config.contains("hosts")) {
+        if (!config.contains("forges")) {
             return ret;
         }
 
-        for (var entry : config.get("hosts").fields()) {
+        for (var entry : config.get("forges").fields()) {
             if (entry.value().contains("gitlab")) {
                 var gitlab = entry.value().get("gitlab");
                 var uri = URIBuilder.base(gitlab.get("url").asString()).build();
                 var pat = new PersonalAccessToken(gitlab.get("username").asString(), gitlab.get("pat").asString());
                 ret.put(entry.name(), ForgeFactory.createGitLabHost(uri, pat));
@@ -99,15 +99,15 @@
     }
 
     private Map<String, IssueTracker> parseIssueHosts(JSONObject config, Path cwd) throws ConfigurationError {
         Map<String, IssueTracker> ret = new HashMap<>();
 
-        if (!config.contains("hosts")) {
+        if (!config.contains("issuetrackers")) {
             return ret;
         }
 
-        for (var entry : config.get("hosts").fields()) {
+        for (var entry : config.get("issuetrackers").fields()) {
             if (entry.value().contains("jira")) {
                 var jira = entry.value().get("jira");
                 var uri = URIBuilder.base(jira.get("url").asString()).build();
                 ret.put(entry.name(), IssueTrackerFactory.createJiraHost(uri, null));
             } else {
