diff a/test/src/main/java/org/openjdk/skara/test/CheckableRepository.java b/test/src/main/java/org/openjdk/skara/test/CheckableRepository.java
--- a/test/src/main/java/org/openjdk/skara/test/CheckableRepository.java
+++ b/test/src/main/java/org/openjdk/skara/test/CheckableRepository.java
@@ -94,10 +94,15 @@
     public static Hash appendAndCommit(Repository repo, String body, String message) throws IOException {
         return appendAndCommit(repo, body, message, "testauthor", "ta@none.none");
     }
 
     public static Hash appendAndCommit(Repository repo, String body, String message, String authorName, String authorEmail) throws IOException {
+        return appendAndCommit(repo, body, message, authorName, authorEmail, authorName, authorEmail);
+    }
+
+    public static Hash appendAndCommit(Repository repo, String body, String message, String authorName, String authorEmail,
+                                       String committerName, String committerEmail) throws IOException {
         var file = checkableFile(repo.root());
         try (var output = Files.newBufferedWriter(file, StandardOpenOption.APPEND)) {
             output.append(body);
             output.append("\n");
         }
@@ -101,11 +106,11 @@
             output.append(body);
             output.append("\n");
         }
         repo.add(file);
 
-        return repo.commit(message, authorName, authorEmail);
+        return repo.commit(message, authorName, authorEmail, committerName, committerEmail);
     }
 
     public static Hash replaceAndCommit(Repository repo, String body) throws IOException {
         return replaceAndCommit(repo, body, "Replace commit", "testauthor", "ta@none.none");
     }
