diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/IssueUpdater.java
@@ -33,15 +33,17 @@
 import java.util.logging.Logger;
 
 public class IssueUpdater implements RepositoryUpdateConsumer, PullRequestUpdateConsumer {
     private final IssueProject issueProject;
     private final URI reviewIcon;
+    private final URI commitIcon;
     private final Logger log = Logger.getLogger("org.openjdk.skara.bots.notify");
 
-    IssueUpdater(IssueProject issueProject, URI reviewIcon) {
+    IssueUpdater(IssueProject issueProject, URI reviewIcon, URI commitIcon) {
         this.issueProject = issueProject;
         this.reviewIcon = reviewIcon;
+        this.commitIcon = commitIcon;
     }
 
     @Override
     public void handleCommits(HostedRepository repository, List<Commit> commits, Branch branch) {
         for (var commit : commits) {
@@ -54,10 +56,18 @@
                                        + " - issue not found in issue project");
                     continue;
                 }
                 issue.get().addComment(commitNotification);
                 issue.get().setState(Issue.State.RESOLVED);
+
+                var linkBuilder = Link.create(repository.webUrl(commit.hash()), "Commit")
+                                      .summary(repository.name() + "/" + commit.hash().abbreviate());
+                if (commitIcon != null) {
+                    linkBuilder.iconTitle("Commit");
+                    linkBuilder.iconUrl(commitIcon);
+                }
+                issue.get().addLink(linkBuilder.build());
             }
         }
     }
 
     @Override
@@ -82,13 +92,13 @@
             log.warning("Pull request " + pr + " added unknown issue: " + issue.id());
             return;
         }
 
         var linkBuilder = Link.create(pr.webUrl(), "Review")
-                              .summary(pr.repository().name() + "/" + pr.id())
-                              .iconTitle("Review");
+                              .summary(pr.repository().name() + "/" + pr.id());
         if (reviewIcon != null) {
+            linkBuilder.iconTitle("Review");
             linkBuilder.iconUrl(reviewIcon);
         }
 
         realIssue.get().addLink(linkBuilder.build());
     }
