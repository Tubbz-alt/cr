diff a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
--- a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
+++ b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
@@ -552,11 +552,11 @@
             assertEquals("Re: RFR: This is a pull request", thread3.subject());
             var thread4 = replies.get(3);
             assertEquals("Re: RFR: This is a pull request", thread4.subject());
             assertTrue(thread4.body().contains("Looks fine"));
             assertTrue(thread4.body().contains("The final review comment"));
-            assertTrue(thread4.body().contains("Approved by integrationreviewer1 (Reviewer)"));
+            assertTrue(thread4.body().contains("Marked as reviewed by integrationreviewer1 (Reviewer)"));
         }
     }
 
     @Test
     void commentThreadingSeparated(TestInfo testInfo) throws IOException {
@@ -1147,11 +1147,11 @@
             TestBotRunner.runPeriodicItems(mlBot);
             TestBotRunner.runPeriodicItems(mlBot);
 
             // The archive should contain another note
             Repository.materialize(archiveFolder.path(), archive.url(), "master");
-            assertEquals(1, archiveContainsCount(archiveFolder.path(), "Approved by "));
+            assertEquals(1, archiveContainsCount(archiveFolder.path(), "Marked as reviewed by "));
             if (author.forge().supportsReviewBody()) {
                 assertEquals(1, archiveContainsCount(archiveFolder.path(), "Reason 2"));
             }
             assertEquals(2, archiveContainsCount(archiveFolder.path(), "Re: RFR:"));
 
