diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveMessages.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveMessages.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveMessages.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveMessages.java
@@ -50,10 +50,11 @@
 
     private static String replyFooter(PullRequestInstance prInstance) {
         return "PR: " + prInstance.pr().getWebUrl();
     }
 
+    // When changing this, ensure that the PR pattern in the notifier still matches
     static String composeConversation(PullRequestInstance prInstance, URI webrev) {
         var commitMessages = prInstance.formatCommitMessages(prInstance.baseHash(), prInstance.headHash(), ArchiveMessages::formatCommit);
         var filteredBody = filterComments(prInstance.pr().getBody());
         if (filteredBody.isEmpty()) {
             filteredBody = prInstance.pr().getTitle().strip();
diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
@@ -129,11 +129,11 @@
                 continue;
             }
 
             var candidate = candidates.get(0);
             var prLink = candidate.getWebUrl();
-            var prLinkPattern = Pattern.compile("^" + Pattern.quote(prLink.toString()), Pattern.MULTILINE);
+            var prLinkPattern = Pattern.compile("^PR: " + Pattern.quote(prLink.toString()), Pattern.MULTILINE);
 
             var rfrCandidates = rfrs.stream()
                                     .filter(email -> prLinkPattern.matcher(email.body()).find())
                                     .collect(Collectors.toList());
             if (rfrCandidates.size() != 1) {
diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
@@ -396,11 +396,11 @@
             // PR hasn't been integrated yet, so there should be no mail
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
             // Simulate an RFR email
-            var rfr = Email.create(sender, "RFR: My PR", "PR:\n" + pr.getWebUrl().toString())
+            var rfr = Email.create(sender, "RFR: My PR", "PR: " + pr.getWebUrl().toString())
                     .recipient(listAddress)
                     .build();
             mailmanList.post(rfr);
             listServer.processIncoming();
 
@@ -469,11 +469,11 @@
             // PR hasn't been integrated yet, so there should be no mail
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
             // Simulate an RFR email
-            var rfr = Email.create(sender, "RFR: My PR", "PR:\n" + pr.getWebUrl().toString())
+            var rfr = Email.create(sender, "RFR: My PR", "PR: " + pr.getWebUrl().toString())
                            .recipient(listAddress)
                            .build();
             mailmanList.post(rfr);
             listServer.processIncoming();
 
