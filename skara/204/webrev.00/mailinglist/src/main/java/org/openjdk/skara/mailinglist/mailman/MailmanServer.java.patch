diff a/mailinglist/src/main/java/org/openjdk/skara/mailinglist/mailman/MailmanServer.java b/mailinglist/src/main/java/org/openjdk/skara/mailinglist/mailman/MailmanServer.java
--- a/mailinglist/src/main/java/org/openjdk/skara/mailinglist/mailman/MailmanServer.java
+++ b/mailinglist/src/main/java/org/openjdk/skara/mailinglist/mailman/MailmanServer.java
@@ -26,29 +26,40 @@
 import org.openjdk.skara.host.network.URIBuilder;
 import org.openjdk.skara.mailinglist.*;
 
 import java.io.*;
 import java.net.URI;
-import java.time.ZonedDateTime;
+import java.time.*;
 import java.time.format.DateTimeFormatter;
 import java.util.Locale;
 
 public class MailmanServer implements MailingListServer {
     private final URI archive;
     private final String smtpServer;
+    private volatile Instant lastSend;
+    private Duration sendInterval;
 
-    public MailmanServer(URI archive, String smtpServer) {
+    public MailmanServer(URI archive, String smtpServer, Duration sendInterval) {
         this.archive = archive;
         this.smtpServer = smtpServer;
+        this.sendInterval = sendInterval;
+        lastSend = Instant.EPOCH;
     }
 
     URI getMbox(String listName, ZonedDateTime month) {
         var dateStr = DateTimeFormatter.ofPattern("YYYY-MMMM", Locale.US).format(month);
         return URIBuilder.base(archive).appendPath(listName + "/" + dateStr + ".txt").build();
+        while (lastSend.plus(sendInterval).isAfter(Instant.now())) {
+            try {
+                Thread.sleep(sendInterval.dividedBy(10).toMillis());
+            } catch (InterruptedException ignored) {
+            }
+        }
+        lastSend = Instant.now();
         try {
             SMTP.send(smtpServer, recipientList, message);
         } catch (IOException e) {
             throw new UncheckedIOException(e);
         }
