diff a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
@@ -318,10 +318,14 @@
                   .optional(),
             Switch.shortcut("")
                   .fullname("ignore-workspace")
                   .helptext("Ignore local changes in worktree and staging area when creating pull request")
                   .optional(),
+            Switch.shortcut("")
+                  .fullname("publish")
+                  .helptext("Publish the local branch before creating the pull request")
+                  .optional(),
             Switch.shortcut("")
                   .fullname("no-token")
                   .helptext("Do not use a personal access token (PAT). Only works for read-only operations.")
                   .optional(),
             Switch.shortcut("")
@@ -629,24 +633,33 @@
                 }
             }
 
             var upstream = repo.upstreamFor(currentBranch);
             if (upstream.isEmpty()) {
-                System.err.println("error: there is no remote branch for the local branch '" + currentBranch.name() + "'");
-                System.err.println("");
-                System.err.println("A remote branch must be present at " + remotePullPath + " to create a pull request");
-                System.err.println("To create a remote branch and push the commits for your local branch, run:");
-                System.err.println("");
-                System.err.println("    git publish");
-                System.err.println("");
-                System.err.println("If you created the remote branch from another client, you must update this repository.");
-                System.err.println("To update remote information for this repository, run:");
-                System.err.println("");
-                System.err.println("    git fetch " + remote);
-                System.err.println("    git branch --set-upstream " + currentBranch + " " + remote + "/" + currentBranch);
-                System.err.println("");
-                System.exit(1);
+                var shouldPublish = arguments.contains("publish");
+                if (!shouldPublish) {
+                    var lines = repo.config("pr.publish");
+                    shouldPublish = lines.size() == 1 && lines.get(0).toLowerCase().equals("true");
+                }
+                if (shouldPublish) {
+                    GitPublish.main(new String[] { remote });
+                } else {
+                    System.err.println("error: there is no remote branch for the local branch '" + currentBranch.name() + "'");
+                    System.err.println("");
+                    System.err.println("A remote branch must be present at " + remotePullPath + " to create a pull request");
+                    System.err.println("To create a remote branch and push the commits for your local branch, run:");
+                    System.err.println("");
+                    System.err.println("    git publish");
+                    System.err.println("");
+                    System.err.println("If you created the remote branch from another client, you must update this repository.");
+                    System.err.println("To update remote information for this repository, run:");
+                    System.err.println("");
+                    System.err.println("    git fetch " + remote);
+                    System.err.println("    git branch --set-upstream " + currentBranch + " " + remote + "/" + currentBranch);
+                    System.err.println("");
+                    System.exit(1);
+                }
             }
 
             var upstreamRefName = upstream.get().substring(remote.length() + 1);
             repo.fetch(uri, upstreamRefName);
             var branchCommits = repo.commits(upstream.get() + ".." + currentBranch.name()).asList();
diff a/cli/src/main/java/org/openjdk/skara/cli/GitPublish.java b/cli/src/main/java/org/openjdk/skara/cli/GitPublish.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitPublish.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitPublish.java
@@ -88,8 +88,11 @@
         var currentBranch = repo.currentBranch();
         if (currentBranch.isEmpty()) {
             System.err.println("error: the repository is in a detached HEAD state");
             System.exit(1);
         }
-        System.exit(pushAndTrack(remote, repo.currentBranch().get()));
+        var err = pushAndTrack(remote, repo.currentBranch().get());
+        if (err != 0) {
+            System.exit(err);
+        }
     }
 }
