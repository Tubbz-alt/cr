diff a/cli/src/main/java/org/openjdk/skara/cli/GitJCheck.java b/cli/src/main/java/org/openjdk/skara/cli/GitJCheck.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitJCheck.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitJCheck.java
@@ -40,11 +40,11 @@
 
 public class GitJCheck {
 
     private static final Pattern urlPattern = Pattern.compile("^https?://.*", Pattern.CASE_INSENSITIVE);
 
-    public static void main(String[] args) throws Exception {
+    public static void main(String[] args) throws IOException {
         var flags = List.of(
             Option.shortcut("r")
                   .fullname("rev")
                   .describe("REV")
                   .helptext("Check the specified revision or range (default: HEAD)")
@@ -169,11 +169,19 @@
             if (lines.size() == 1) {
                 var value = lines.get(0).toUpperCase();
                 isLocal = value.equals("TRUE") || value.equals("1") || value.equals("ON");
             }
         }
-        var visitor = new JCheckCLIVisitor(isLocal);
+        var isPullRequest = arguments.contains("pull-request");
+        if (!isPullRequest) {
+            var lines = repo.config("jcheck.pull-request");
+            if (lines.size() == 1) {
+                var value = lines.get(0).toUpperCase();
+                isLocal = value.equals("TRUE") || value.equals("1") || value.equals("ON");
+            }
+        }
+        var visitor = new JCheckCLIVisitor(isLocal, isPullRequest);
         try (var errors = JCheck.check(repo, census, CommitMessageParsers.v1, range, whitelist, blacklist)) {
             for (var error : errors) {
                 error.accept(visitor);
             }
         }
