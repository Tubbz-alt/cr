diff a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
@@ -322,10 +322,14 @@
                   .optional(),
             Switch.shortcut("")
                   .fullname("publish")
                   .helptext("Publish the local branch before creating the pull request")
                   .optional(),
+            Switch.shortcut("")
+                  .fullname("jcheck")
+                  .helptext("Run jcheck before creating the pull request")
+                  .optional(),
             Switch.shortcut("")
                   .fullname("no-token")
                   .helptext("Do not use a personal access token (PAT). Only works for read-only operations.")
                   .optional(),
             Switch.shortcut("")
@@ -695,10 +699,23 @@
                 System.err.println("error: no difference between branches " + targetBranch + " and " + currentBranch.name());
                 System.err.println("       Cannot create an empty pull request, have you committed?");
                 System.exit(1);
             }
 
+            var shouldRunJCheck = arguments.contains("jcheck");
+            if (!shouldRunJCheck) {
+                var lines = repo.config("pr.jcheck");
+                shouldRunJCheck = lines.size() == 1 && lines.get(0).toLowerCase().equals("true");
+            }
+            if (shouldRunJCheck) {
+                var jcheckArgs = new String[]{ "--pull-request", "--rev", targetBranch + ".." + upstream.get() };
+                var err = GitJCheck.run(jcheckArgs);
+                if (err != 0) {
+                    System.exit(err);
+                }
+            }
+
             var remoteRepo = host.repository(projectName(uri)).orElseThrow(() ->
                     new IOException("Could not find repository at " + uri.toString())
             );
             if (token == null) {
                 GitCredentials.approve(credentials);
