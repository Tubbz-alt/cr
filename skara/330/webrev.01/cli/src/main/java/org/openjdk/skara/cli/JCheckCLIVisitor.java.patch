diff a/cli/src/main/java/org/openjdk/skara/cli/JCheckCLIVisitor.java b/cli/src/main/java/org/openjdk/skara/cli/JCheckCLIVisitor.java
--- a/cli/src/main/java/org/openjdk/skara/cli/JCheckCLIVisitor.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/JCheckCLIVisitor.java
@@ -29,37 +29,43 @@
 import java.util.List;
 import java.util.stream.Collectors;
 
 class JCheckCLIVisitor implements IssueVisitor {
     private final boolean isLocal;
+    private final boolean isPullRequest;
+    private boolean hasDisplayedErrors;
 
     public JCheckCLIVisitor() {
-        this(false);
+        this(false, false);
     }
 
-    public JCheckCLIVisitor(boolean isLocal) {
+    public JCheckCLIVisitor(boolean isLocal, boolean isPullRequest) {
         this.isLocal = isLocal;
+        this.isPullRequest = isPullRequest;
+        this.hasDisplayedErrors = false;
     }
 
-    private static void println(Issue i, String message) {
+    private void println(Issue i, String message) {
         System.out.print("[");
         System.out.print(i.check().name());
         System.out.print("] ");
         System.out.print(i.severity());
         System.out.print(": ");
         System.out.println(message);
+        hasDisplayedErrors = true;
     }
 
-    private static void println(CommitIssue i, String message) {
+    private void println(CommitIssue i, String message) {
         System.out.print("[");
         System.out.print(i.check().name());
         System.out.print("] ");
         System.out.print(i.severity());
         System.out.print(": ");
         System.out.print(i.commit().hash().abbreviate());
         System.out.print(": ");
         System.out.println(message);
+        hasDisplayedErrors = true;
     }
 
     public void visit(DuplicateIssuesIssue i) {
         var id = i.issue().id();
         var hash = i.commit().hash().abbreviate();
@@ -75,30 +81,30 @@
     public void visit(TagIssue i) {
         println(i, "illegal tag name: " + i.tag().name());
     }
 
     public void visit(BranchIssue i) {
-        if (!isLocal) {
+        if (!isLocal && !isPullRequest) {
             println(i, "illegal branch name: " + i.branch().name());
         }
     }
 
     public void visit(SelfReviewIssue i) {
         println(i, "self-reviews are not allowed");
     }
 
     public void visit(TooFewReviewersIssue i) {
-        if (!isLocal) {
+        if (!isLocal && !isPullRequest) {
             var required = i.numRequired();
             var actual = i.numActual();
             var reviewers = required == 1 ? " reviewer" : " reviewers";
             println(i, required + reviewers + " required, found " + actual);
         }
     }
 
     public void visit(InvalidReviewersIssue i) {
-        if (!isLocal) {
+        if (!isLocal && !isPullRequest) {
             var invalid = String.join(", ", i.invalid());
             var wording = i.invalid().size() == 1 ? " is" : " are";
             println(i, invalid + wording + " not part of OpenJDK");
         }
     }
@@ -187,20 +193,24 @@
         System.out.println(indent + i.escapeLine());
         System.out.println(indent + i.hints());
     }
 
     public void visit(MessageIssue i) {
-        println(i, "contains additional lines in commit message");
-        for (var line : i.message().additional()) {
-            System.out.println("> " + line);
+        if (!isPullRequest) {
+            println(i, "contains additional lines in commit message");
+            for (var line : i.message().additional()) {
+                System.out.println("> " + line);
+            }
         }
     }
 
     public void visit(IssuesIssue i) {
-        println(i, "missing reference to JBS issue in commit message");
-        for (var line : i.commit().message()) {
-            System.out.println("> " + line);
+        if (!isPullRequest) {
+            println(i, "missing reference to JBS issue in commit message");
+            for (var line : i.commit().message()) {
+                System.out.println("> " + line);
+            }
         }
     }
 
     public void visit(ExecutableIssue i) {
         println(i, "file " + i.path() + " is executable");
@@ -217,11 +227,11 @@
     public void visit(CommitterNameIssue i) {
         println(i, "missing committer name");
     }
 
     public void visit(CommitterEmailIssue i) {
-        if (!isLocal) {
+        if (!isLocal && !isPullRequest) {
             var domain = i.expectedDomain();
             println(i, "missing committer email from domain " + domain);
         }
     }
 
@@ -230,6 +240,10 @@
     }
 
     public void visit(BinaryIssue i) {
         println(i, "adds binary file: " + i.path().toString());
     }
+
+    public boolean hasDisplayedErrors() {
+        return hasDisplayedErrors;
+    }
 }
