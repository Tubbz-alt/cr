diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
@@ -147,11 +147,12 @@
              var tempFolder = new TemporaryDirectory()) {
             var repo = credentials.getHostedRepository();
             var repoFolder = tempFolder.path().resolve("repo");
             var localRepo = CheckableRepository.init(repoFolder, repo.getRepositoryType());
             var masterHash = localRepo.resolve("master").orElseThrow();
-            localRepo.push(masterHash, repo.getUrl(), "master", true);
+            credentials.commitLock(localRepo);
+            localRepo.pushAll(repo.getUrl());
 
             var tagStorage = createTagStorage(repo);
             var branchStorage = createBranchStorage(repo);
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
@@ -183,11 +184,12 @@
              var tempFolder = new TemporaryDirectory()) {
             var repo = credentials.getHostedRepository();
             var repoFolder = tempFolder.path().resolve("repo");
             var localRepo = CheckableRepository.init(repoFolder, repo.getRepositoryType());
             var masterHash = localRepo.resolve("master").orElseThrow();
-            localRepo.push(masterHash, repo.getUrl(), "master", true);
+            credentials.commitLock(localRepo);
+            localRepo.pushAll(repo.getUrl());
 
             var tagStorage = createTagStorage(repo);
             var branchStorage = createBranchStorage(repo);
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
@@ -223,11 +225,12 @@
              var tempFolder = new TemporaryDirectory()) {
             var repo = credentials.getHostedRepository();
             var repoFolder = tempFolder.path().resolve("repo");
             var localRepo = CheckableRepository.init(repoFolder, repo.getRepositoryType());
             var masterHash = localRepo.resolve("master").orElseThrow();
-            localRepo.push(masterHash, repo.getUrl(), "master", true);
+            credentials.commitLock(localRepo);
+            localRepo.pushAll(repo.getUrl());
 
             var tagStorage = createTagStorage(repo);
             var branchStorage = createBranchStorage(repo);
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
