diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
@@ -41,10 +41,11 @@
 import java.util.*;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
 
 import static org.junit.jupiter.api.Assertions.*;
+import static org.openjdk.skara.issuetracker.Issue.State.*;
 
 class UpdaterTests {
     private List<Path> findJsonFiles(Path folder, String partialName) throws IOException {
         return Files.walk(folder)
                     .filter(path -> path.toString().endsWith(".json"))
@@ -1204,19 +1205,21 @@
             TestBotRunner.runPeriodicItems(notifyBot);
 
             // The fixVersion should not have been updated
             var updatedIssue = issueProject.issue(issue.id()).orElseThrow();
             assertEquals(Set.of("13.0.1"), fixVersions(updatedIssue));
+            assertEquals(OPEN, updatedIssue.state());
 
             // There should be a link
             var links = updatedIssue.links();
             assertEquals(1, links.size());
             var link = links.get(0);
             var backport = link.issue().orElseThrow();
 
             // The backport issue should have a correct fixVersion
             assertEquals(Set.of("12.0.2"), fixVersions(backport));
+            assertEquals(RESOLVED, backport.state());
 
             // Custom properties should also propagate
             assertEquals("1", backport.properties().get("priority").asString());
         }
     }
