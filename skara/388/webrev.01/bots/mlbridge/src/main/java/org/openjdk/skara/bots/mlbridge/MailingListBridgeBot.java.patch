diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
@@ -26,11 +26,11 @@
 import org.openjdk.skara.email.EmailAddress;
 import org.openjdk.skara.forge.*;
 
 import java.net.URI;
 import java.nio.file.Path;
-import java.time.Duration;
+import java.time.*;
 import java.util.*;
 import java.util.regex.Pattern;
 
 public class MailingListBridgeBot implements Bot {
     private final EmailAddress emailAddress;
@@ -50,10 +50,11 @@
     private final Map<String, String> headers;
     private final URI issueTracker;
     private final PullRequestUpdateCache updateCache;
     private final Duration sendInterval;
     private final Duration cooldown;
+    private final CooldownQuarantine cooldownQuarantine;
 
     MailingListBridgeBot(EmailAddress from, HostedRepository repo, HostedRepository archive, String archiveRef,
                          HostedRepository censusRepo, String censusRef, EmailAddress list,
                          Set<String> ignoredUsers, Set<Pattern> ignoredComments, URI listArchive, String smtpServer,
                          HostedRepository webrevStorageRepository, String webrevStorageRef,
@@ -76,13 +77,14 @@
         this.headers = headers;
         this.issueTracker = issueTracker;
         this.sendInterval = sendInterval;
         this.cooldown = cooldown;
 
-        this.webrevStorage = new WebrevStorage(webrevStorageRepository, webrevStorageRef, webrevStorageBase,
-                                               webrevStorageBaseUri, from);
-        this.updateCache = new PullRequestUpdateCache();
+        webrevStorage = new WebrevStorage(webrevStorageRepository, webrevStorageRef, webrevStorageBase,
+                                          webrevStorageBaseUri, from);
+        updateCache = new PullRequestUpdateCache();
+        cooldownQuarantine = new CooldownQuarantine();
     }
 
     static MailingListBridgeBotBuilder newBuilder() {
         return new MailingListBridgeBotBuilder();
     }
@@ -162,12 +164,14 @@
     @Override
     public List<WorkItem> getPeriodicItems() {
         List<WorkItem> ret = new LinkedList<>();
 
         for (var pr : codeRepo.pullRequests()) {
-            if (updateCache.needsUpdate(pr)) {
-                ret.add(new ArchiveWorkItem(pr, this, e -> updateCache.invalidate(pr)));
+            if (!cooldownQuarantine.inQuarantine(pr) || updateCache.needsUpdate(pr)) {
+                ret.add(new ArchiveWorkItem(pr, this,
+                                            e -> updateCache.invalidate(pr),
+                                            r -> cooldownQuarantine.updateQuarantineEnd(pr, r)));
             }
         }
 
         return ret;
     }
