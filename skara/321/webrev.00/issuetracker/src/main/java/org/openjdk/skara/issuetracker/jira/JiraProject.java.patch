diff a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraProject.java b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraProject.java
--- a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraProject.java
+++ b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraProject.java
@@ -26,17 +26,20 @@
 import org.openjdk.skara.json.*;
 import org.openjdk.skara.network.*;
 
 import java.net.URI;
 import java.util.*;
+import java.util.stream.Collectors;
 
 public class JiraProject implements IssueProject {
     private final JiraHost jiraHost;
     private final String projectName;
     private final RestRequest request;
 
     private JSONObject projectMetadataCache = null;
+    private Map<String, String> versionNameToId = null;
+    private Map<String, String> versionIdToName = null;
 
     JiraProject(JiraHost host, RestRequest request, String projectName) {
         this.jiraHost = host;
         this.projectName = projectName;
         this.request = request;
@@ -63,10 +66,31 @@
             ret.put(type.get("name").asString(), type.get("id").asString());
         }
         return ret;
     }
 
+    private void populateVersionsIfNeeded() {
+        if (versionIdToName != null) {
+            return;
+        }
+
+        versionNameToId = project().get("versions").stream()
+                                   .collect(Collectors.toMap(v -> v.get("name").asString(), v -> v.get("id").asString()));
+        versionIdToName = project().get("versions").stream()
+                                   .collect(Collectors.toMap(v -> v.get("id").asString(), v -> v.get("name").asString()));
+    }
+
+    Optional<String> fixVersionNameFromId(String id) {
+        populateVersionsIfNeeded();
+        return Optional.ofNullable(versionIdToName.getOrDefault(id, null));
+    }
+
+    Optional<String> fixVersionIdFromName(String name) {
+        populateVersionsIfNeeded();
+        return Optional.ofNullable(versionNameToId.getOrDefault(name, null));
+    }
+
     private String projectId() {
         return project().get("id").asString();
     }
 
     private String defaultIssueType() {
