diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
@@ -31,15 +31,17 @@
 import java.time.format.DateTimeFormatter;
 import java.util.*;
 
 public class MailingListUpdater implements UpdateConsumer {
     private final String host;
-    private final EmailAddress emailAddress;
+    private final EmailAddress recipient;
+    private final EmailAddress sender;
 
-    MailingListUpdater(String host, EmailAddress emailAddress) {
+    MailingListUpdater(String host, EmailAddress recipient, EmailAddress sender) {
         this.host = host;
-        this.emailAddress = emailAddress;
+        this.recipient = recipient;
+        this.sender = sender;
     }
 
     private String patchToText(Patch patch) {
         if (patch.status().isAdded()) {
             return "+ " + patch.target().path().orElseThrow();
@@ -91,13 +93,10 @@
     @Override
     public void handleCommits(HostedRepository repository, List<Commit> commits) {
         var writer = new StringWriter();
         var printer = new PrintWriter(writer);
 
-        var authorCommit = commits.get(0);
-        var sender = EmailAddress.from(authorCommit.author().name(), authorCommit.author().email());
-        var headers = new HashMap<String, String>();
         var subject = commitsToSubject(repository, commits);
 
         for (var commit : commits) {
             printer.println(commitToText(repository, commit));
         }
@@ -101,15 +100,15 @@
         for (var commit : commits) {
             printer.println(commitToText(repository, commit));
         }
 
         var email = Email.create(sender, subject, writer.toString())
-                         .recipient(emailAddress)
+                         .recipient(recipient)
                          .build();
 
         try {
-            SMTP.send(host, emailAddress, email);
+            SMTP.send(host, recipient, email);
         } catch (IOException e) {
             throw new UncheckedIOException(e);
         }
         System.out.print(writer.toString());
     }
