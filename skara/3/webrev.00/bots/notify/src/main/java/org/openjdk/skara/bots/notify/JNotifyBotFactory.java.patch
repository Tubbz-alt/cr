diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JNotifyBotFactory.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JNotifyBotFactory.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JNotifyBotFactory.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JNotifyBotFactory.java
@@ -48,12 +48,10 @@
         var databaseRepo = configuration.repository(database.get("repository").asString());
         var databaseRef = database.get("ref").asString();
         var databaseName = database.get("name").asString();
         var databaseEmail = database.get("email").asString();
 
-        var storage = configuration.storageFolder();
-
         for (var repo : specific.get("repositories").fields()) {
             var repoName = repo.name();
             var branch = repo.value().get("branch").asString();
             var build = repo.value().get("build").asString();
             var version = repo.value().get("version").asString();
@@ -62,11 +60,14 @@
             if (repo.value().contains("jsonfolder")) {
                 updaters.add(new JsonUpdater(Path.of(repo.value().get("jsonfolder").asString()), version, build));
             }
             if (repo.value().contains("mailinglist")) {
                 var mailcfg = repo.value().get("mailinglist").asObject();
-                updaters.add(new MailingListUpdater(mailcfg.get("smtp").asString(), EmailAddress.parse(mailcfg.get("recipient").asString())));
+                var senderName = mailcfg.get("name").asString();
+                var senderMail = mailcfg.get("email").asString();
+                var sender = EmailAddress.from(senderName, senderMail);
+                updaters.add(new MailingListUpdater(mailcfg.get("smtp").asString(), EmailAddress.parse(mailcfg.get("recipient").asString()), sender));
             }
 
             if (updaters.isEmpty()) {
                 log.warning("No update consumers for updater bot configuration: " + repoName);
                 continue;
