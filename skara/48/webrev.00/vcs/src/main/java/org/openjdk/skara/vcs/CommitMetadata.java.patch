diff a/vcs/src/main/java/org/openjdk/skara/vcs/CommitMetadata.java b/vcs/src/main/java/org/openjdk/skara/vcs/CommitMetadata.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/CommitMetadata.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/CommitMetadata.java
@@ -31,21 +31,21 @@
 
     private final Hash hash;
     private final List<Hash> parents;
     private final Author author;
     private final Author committer;
-    private final Instant timestamp;
+    private final ZonedDateTime date;
     private final List<String> message;
 
     public CommitMetadata(Hash hash, List<Hash> parents,
                           Author author, Author committer,
-                          Instant timestamp, List<String> message) {
+                          ZonedDateTime date, List<String> message) {
         this.hash = hash;
         this.parents = parents;
         this.author = author;
         this.committer = committer;
-        this.timestamp = timestamp;
+        this.date = date;
         this.message = message;
     }
 
     public Hash hash() {
         return hash;
@@ -65,12 +65,12 @@
 
     public List<Hash> parents() {
         return parents;
     }
 
-    public Instant timestamp() {
-        return timestamp;
+    public ZonedDateTime date() {
+        return date;
     }
 
     public boolean isInitialCommit() {
         return numParents() == 1 && parents.get(0).equals(NULL_HASH);
     }
@@ -73,14 +73,10 @@
 
     public boolean isInitialCommit() {
         return numParents() == 1 && parents.get(0).equals(NULL_HASH);
     }
 
-    public ZonedDateTime date() {
-        return ZonedDateTime.ofInstant(timestamp(), ZoneOffset.UTC);
-    }
-
     public boolean isMerge() {
         return parents().size() > 1;
     }
 
     public int numParents() {
@@ -87,14 +83,12 @@
         return parents().size();
     }
 
     @Override
     public String toString() {
-        final var formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm")
-                                               .withLocale(Locale.getDefault())
-                                               .withZone(ZoneOffset.UTC);
-        final var displayDate = formatter.format(timestamp);
+        final var formatter = DateTimeFormatter.RFC_1123_DATE_TIME;
+        final var displayDate = date.format(formatter);
         return String.format("%s  %-12s  %s  %s",
                              hash().toString(), author(), displayDate, message.get(0));
     }
 
     @Override
@@ -97,11 +91,11 @@
                              hash().toString(), author(), displayDate, message.get(0));
     }
 
     @Override
     public int hashCode() {
-        return Objects.hash(hash, parents, author, committer, timestamp, message);
+        return Objects.hash(hash, parents, author, committer, date, message);
     }
 
     @Override
     public boolean equals(Object o) {
         if (!(o instanceof CommitMetadata)) {
@@ -111,9 +105,9 @@
         var other = (CommitMetadata) o;
         return Objects.equals(hash, other.hash) &&
                Objects.equals(parents, other.parents) &&
                Objects.equals(author, other.author) &&
                Objects.equals(committer, other.committer) &&
-               Objects.equals(timestamp, other.timestamp) &&
+               Objects.equals(date, other.date) &&
                Objects.equals(message, other.message);
     }
 }
