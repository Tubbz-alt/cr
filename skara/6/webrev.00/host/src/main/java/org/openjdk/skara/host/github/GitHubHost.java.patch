diff a/host/src/main/java/org/openjdk/skara/host/github/GitHubHost.java b/host/src/main/java/org/openjdk/skara/host/github/GitHubHost.java
--- a/host/src/main/java/org/openjdk/skara/host/github/GitHubHost.java
+++ b/host/src/main/java/org/openjdk/skara/host/github/GitHubHost.java
@@ -26,22 +27,24 @@
 import org.openjdk.skara.json.*;
 
 import java.net.*;
 import java.nio.charset.StandardCharsets;
 import java.util.Arrays;
+import java.util.regex.Pattern;
 
 public class GitHubHost implements Host {
     private final URI uri;
-    private final URI webUri;
+    private final Pattern webUriPattern;
+    private final String webUriReplacement;
     private final GitHubApplication application;
     private final PersonalAccessToken pat;
     private final RestRequest request;
 
-    public GitHubHost(URI uri, GitHubApplication application, URI webUri) {
+    public GitHubHost(URI uri, GitHubApplication application, Pattern webUriPattern, String webUriReplacement) {
         this.uri = uri;
-        this.webUri = webUri;
+        this.webUriPattern = webUriPattern;
+        this.webUriReplacement = webUriReplacement;
         this.application = application;
         this.pat = null;
 
         var baseApi = URIBuilder.base(uri)
                 .appendSubDomain("api")
@@ -54,11 +57,12 @@
                 "Accept", "application/vnd.github.antiope-preview+json"));
     }
 
     public GitHubHost(URI uri, PersonalAccessToken pat) {
         this.uri = uri;
-        this.webUri = uri;
+        this.webUriPattern = null;
+        this.webUriReplacement = null;
         this.pat = pat;
         this.application = null;
 
         var baseApi = URIBuilder.base(uri)
                                 .appendSubDomain("api")
@@ -69,11 +73,12 @@
                 "Authorization", "token " + pat.token()));
     }
 
     public GitHubHost(URI uri) {
         this.uri = uri;
-        this.webUri = uri;
+        this.webUriPattern = null;
+        this.webUriReplacement = null;
         this.pat = null;
         this.application = null;
 
         var baseApi = URIBuilder.base(uri)
                                 .appendSubDomain("api")
@@ -85,12 +90,25 @@
 
     public URI getURI() {
         return uri;
     }
 
-    URI getWebURI() {
-        return webUri;
+    URI getWebURI(String endpoint) {
+        var baseWebUri = URIBuilder.base(uri)
+                                   .setPath(endpoint)
+                                   .build();
+
+        if (webUriPattern == null) {
+            return baseWebUri;
+        }
+
+        var matcher = webUriPattern.matcher(baseWebUri.toString());
+        if (!matcher.matches()) {
+            return baseWebUri;
+
+        }
+        return URIBuilder.base(matcher.replaceAll(webUriReplacement)).build();
     }
 
     String getInstallationToken() {
         if (application != null) {
             return application.getInstallationToken();
