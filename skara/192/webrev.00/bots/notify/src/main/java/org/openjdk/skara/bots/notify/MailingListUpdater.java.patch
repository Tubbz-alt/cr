diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/MailingListUpdater.java
@@ -38,10 +38,11 @@
 
 public class MailingListUpdater implements UpdateConsumer {
     private final MailingList list;
     private final EmailAddress recipient;
     private final EmailAddress sender;
+    private final EmailAddress author;
     private final boolean includeBranch;
     private final Mode mode;
     private final Map<String, String> headers;
     private final Logger log = Logger.getLogger("org.openjdk.skara.bots.notify");
 
@@ -49,15 +50,16 @@
         ALL,
         PR,
         PR_ONLY
     }
 
-    MailingListUpdater(MailingList list, EmailAddress recipient, EmailAddress sender, boolean includeBranch, Mode mode,
-                       Map<String, String> headers) {
+    MailingListUpdater(MailingList list, EmailAddress recipient, EmailAddress sender, EmailAddress author,
+                       boolean includeBranch, Mode mode, Map<String, String> headers) {
         this.list = list;
         this.recipient = recipient;
         this.sender = sender;
+        this.author = author;
         this.includeBranch = includeBranch;
         this.mode = mode;
         this.headers = headers;
     }
 
@@ -95,11 +97,11 @@
         }
 
         return writer.toString();
     }
 
-    private EmailAddress commitsToSender(List<Commit> commits) {
+    private EmailAddress commitsToAuthor(List<Commit> commits) {
         var commit = commits.get(commits.size() - 1);
         return EmailAddress.from(commit.committer().name(), commit.committer().email());
     }
 
     private String commitsToSubject(HostedRepository repository, List<Commit> commits, Branch branch) {
@@ -148,14 +150,15 @@
                 log.warning("Pull request " + prLink + " found in " + rfrCandidates.size() + " RFR threads - expected 1");
                 ret.add(commit);
                 continue;
             }
             var rfr = rfrCandidates.get(0);
-            var author = sender != null ? sender : commitsToSender(commits);
+            var finalAuthor = author != null ? author : commitsToAuthor(commits);
             var body = commitToText(repository, commit);
             var email = Email.reply(rfr, "Re: [Integrated] " + rfr.subject(), body)
-                             .author(author)
+                             .sender(sender)
+                             .author(finalAuthor)
                              .recipient(recipient)
                              .headers(headers)
                              .build();
             list.post(email);
         }
@@ -174,13 +177,14 @@
         for (var commit : commits) {
             printer.println(commitToText(repository, commit));
         }
 
         var subject = commitsToSubject(repository, commits, branch);
-        var author = sender != null ? sender : commitsToSender(commits);
+        var finalAuthor = author != null ? author : commitsToAuthor(commits);
         var email = Email.create(subject, writer.toString())
-                         .author(author)
+                         .sender(sender)
+                         .author(finalAuthor)
                          .recipient(recipient)
                          .headers(headers)
                          .build();
 
         list.post(email);
