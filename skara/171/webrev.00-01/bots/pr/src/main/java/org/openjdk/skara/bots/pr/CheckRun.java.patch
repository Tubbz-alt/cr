diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
@@ -252,18 +252,16 @@
         }
     }
 
     private String getStatusMessage(List<Review> reviews, PullRequestCheckIssueVisitor visitor) {
         var progressBody = new StringBuilder();
-        progressBody.append("Progress\n");
-        progressBody.append("--------\n");
+        progressBody.append("## Progress\n");
         progressBody.append(getChecksList(visitor));
 
         var issue = Issue.fromString(pr.getTitle());
         if (issueProject != null && issue.isPresent()) {
-            progressBody.append("\n\nIssue\n");
-            progressBody.append("--------\n");
+            progressBody.append("\n\n## Issue\n");
             var iss = issueProject.getIssue(issue.get().id());
             if (iss.isPresent()) {
                 progressBody.append("[");
                 progressBody.append(iss.get().getId());
                 progressBody.append("](");
@@ -277,12 +275,11 @@
                 progressBody.append("`.\n");
             }
         }
 
         getReviewersList(reviews).ifPresent(reviewers -> {
-            progressBody.append("\n\nApprovers\n");
-            progressBody.append("---------\n");
+            progressBody.append("\n\n## Approvers\n");
             progressBody.append(reviewers);
         });
 
         return progressBody.toString();
     }
