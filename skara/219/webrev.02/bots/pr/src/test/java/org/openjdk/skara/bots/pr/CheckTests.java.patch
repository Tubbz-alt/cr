diff a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java
--- a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java
+++ b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java
@@ -28,10 +28,11 @@
 import org.junit.jupiter.api.*;
 
 import java.io.IOException;
 import java.nio.file.*;
 import java.util.*;
+import java.util.logging.*;
 import java.util.regex.Pattern;
 
 import static org.junit.jupiter.api.Assertions.*;
 import static org.junit.jupiter.api.Assumptions.assumeTrue;
 
@@ -969,22 +970,40 @@
             check = checks.get("jcheck");
             assertEquals(CheckStatus.SUCCESS, check.status());
         }
     }
 
+    class MyHandler extends StreamHandler {
+        @Override
+        public synchronized void publish(LogRecord record) {
+            System.out.println(record.getInstant() + ": " + record.getMessage());
+        }
+    }
+
     @Test
     void draft(TestInfo testInfo) throws IOException {
+        Logger log = Logger.getGlobal();
+        log.setLevel(Level.FINER);
+        log = Logger.getLogger("org.openjdk");
+        log.setLevel(Level.FINER);
+        var handler = new MyHandler();
+        handler.setLevel(Level.FINER);
+        log.addHandler(handler);
+
+
         try (var credentials = new HostCredentials(testInfo);
              var tempFolder = new TemporaryDirectory()) {
             var author = credentials.getHostedRepository();
             var reviewer = credentials.getHostedRepository();
 
+            log.info("STEP 1");
+
             // Populate the projects repository
             var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType());
             var masterHash = localRepo.resolve("master").orElseThrow();
             localRepo.push(masterHash, author.url(), "master", true);
 
