diff a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
@@ -365,19 +365,31 @@
         checkout(b.name(), force);
     }
 
     @Override
     public Repository init() throws IOException {
+        return init(false);
+    }
+
+    @Override
+    public Repository init(boolean isBare) throws IOException {
         cachedRoot = null;
 
         if (!Files.exists(dir)) {
             Files.createDirectories(dir);
         }
 
-        try (var p = capture("git", "init")) {
-            await(p);
-            return this;
+        if (isBare) {
+            try (var p = capture("git", "init", "--bare")) {
+                await(p);
+                return this;
+            }
+        } else {
+            try (var p = capture("git", "init")) {
+                await(p);
+                return this;
+            }
         }
     }
 
     @Override
     public void pushAll(URI uri) throws IOException {
@@ -444,11 +456,11 @@
                 try (var p2 = capture("git", "rev-parse", "--git-dir")) {
                     var res2 = await(p2);
                     if (res2.stdout().size() != 1) {
                         throw new IOException("Unexpected output\n" + res2);
                     }
-                    cachedRoot = dir.resolve(Path.of(res2.stdout().get(0)));
+                    cachedRoot = dir.resolve(Path.of(res2.stdout().get(0))).normalize();
                     return cachedRoot;
                 }
             }
 
             cachedRoot = Path.of(res.stdout().get(0));
