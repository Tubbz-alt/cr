diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
@@ -53,11 +53,11 @@
         this.tagStorageBuilder = tagStorageBuilder;
         this.branchStorageBuilder = branchStorageBuilder;
         this.updaters = updaters;
     }
 
-    private void handleNewRef(Repository localRepo, Reference ref, Collection<Reference> allRefs, boolean idempotent) {
+    private void handleNewRef(Repository localRepo, Reference ref, Collection<Reference> allRefs, boolean runOnlyIdempotent) {
         // Figure out the best parent ref
         var candidates = new HashSet<>(allRefs);
         candidates.remove(ref);
         if (candidates.size() == 0) {
             log.warning("No parent candidates found for branch '" + ref.name() + "' - ignoring");
@@ -77,22 +77,22 @@
         if (bestParent.getValue().size() > 1000) {
             throw new RuntimeException("Excessive amount of unique commits on new branch " + ref.name() +
                                                " detected (" + bestParent.getValue().size() + ") - skipping notifications");
         }
         for (var updater : updaters) {
-            if (updater.idempotent() != idempotent) {
+            if (updater.idempotent() != runOnlyIdempotent) {
                 continue;
             }
             var branch = new Branch(ref.name());
             var parent = new Branch(bestParent.getKey().name());
             updater.handleNewBranch(repository, localRepo, bestParent.getValue(), parent, branch);
         }
     }
 
-    private void handleUpdatedRef(Repository localRepo, Reference ref, List<Commit> commits, boolean idempotent) {
+    private void handleUpdatedRef(Repository localRepo, Reference ref, List<Commit> commits, boolean runOnlyIdempotent) {
         for (var updater : updaters) {
-            if (updater.idempotent() != idempotent) {
+            if (updater.idempotent() != runOnlyIdempotent) {
                 continue;
             }
             var branch = new Branch(ref.name());
             updater.handleCommits(repository, localRepo, commits, branch);
         }
