diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CensusInstance.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CensusInstance.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CensusInstance.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CensusInstance.java
@@ -28,12 +28,11 @@
 import org.openjdk.skara.vcs.*;
 
 import java.io.*;
 import java.net.URLEncoder;
 import java.nio.charset.StandardCharsets;
-import java.nio.file.*;
-import java.time.*;
+import java.nio.file.Path;
 import java.util.Optional;
 import java.util.stream.Collectors;
 
 class CensusInstance {
     private final Census census;
@@ -86,18 +85,12 @@
         var repoFolder = folder.resolve(URLEncoder.encode(repoName, StandardCharsets.UTF_8));
         try {
             var localRepo = Repository.get(repoFolder)
                                       .or(() -> Optional.of(initialize(censusRepo, censusRef, repoFolder)))
                                       .orElseThrow();
-            var lastFetchMarker = repoFolder.resolve(".last_fetch");
-
-            // Time to refresh?
-            if (!Files.exists(lastFetchMarker) || Files.getLastModifiedTime(lastFetchMarker).toInstant().isBefore(Instant.now().minus(Duration.ofMinutes(10)))) {
-                var hash = localRepo.fetch(censusRepo.getUrl(), censusRef);
-                localRepo.checkout(hash, true);
-                Files.writeString(lastFetchMarker, "fetch ok", StandardCharsets.UTF_8);
-            }
+            var hash = localRepo.fetch(censusRepo.getUrl(), censusRef);
+            localRepo.checkout(hash, true);
         } catch (IOException e) {
             initialize(censusRepo, censusRef, repoFolder);
         }
 
         try {
