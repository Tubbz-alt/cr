diff a/json/src/main/java/org/openjdk/skara/json/JSONParser.java b/json/src/main/java/org/openjdk/skara/json/JSONParser.java
--- a/json/src/main/java/org/openjdk/skara/json/JSONParser.java
+++ b/json/src/main/java/org/openjdk/skara/json/JSONParser.java
@@ -235,10 +235,11 @@
     private JSONArray parseArray() {
         var error = "array is not terminated with ']'";
         var list = new ArrayList<JSONValue>();
 
         advance(); // step beyond opening '['
+        consumeWhitespace();
         expectMoreInput(error);
 
         while (current() != ']') {
             var val = parseValue();
             list.add(val);
@@ -265,10 +266,11 @@
     public JSONObject parseObject() {
         var error = "object is not terminated with '}'";
         var map = new HashMap<String, JSONValue>();
 
         advance(); // step beyond opening '{'
+        consumeWhitespace();
         expectMoreInput(error);
 
         while (current() != '}') {
             var key = parseValue();
             if (!(key instanceof JSONString)) {
diff a/json/src/test/java/org/openjdk/skara/json/JSONParserTests.java b/json/src/test/java/org/openjdk/skara/json/JSONParserTests.java
--- a/json/src/test/java/org/openjdk/skara/json/JSONParserTests.java
+++ b/json/src/test/java/org/openjdk/skara/json/JSONParserTests.java
@@ -483,7 +484,18 @@
     public void testFieldsShortcut() {
         var json = JSON.parse("{\"id\":705,\"type\":null,\"body\":\"description\"}");
         var names = json.fields().stream().map(JSONObject.Field::name).collect(Collectors.toList());
         assertEquals(List.of("id", "type", "body"), names);
     }
+
+    @Test
+    public void testArrayWithWhitespace() {
+        var json = JSON.parse("{ \"foo\": [ ] }");
+        assertEquals(0, json.get("foo").asArray().size());
+    }
+
+    @Test
+    public void testObjectWithWhitespace() {
+        var json = JSON.parse("{ \"foo\": { } }");
+        assertEquals(0, json.get("foo").asObject().fields().size());
+    }
 }
