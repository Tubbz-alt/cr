diff a/forge/src/main/java/org/openjdk/skara/forge/Forge.java b/forge/src/main/java/org/openjdk/skara/forge/Forge.java
--- a/forge/src/main/java/org/openjdk/skara/forge/Forge.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/Forge.java
@@ -42,14 +42,25 @@
         }
         return factory.get().create(uri, credential, configuration);
     }
 
     static Optional<Forge> from(URI uri, Credential credential, JSONObject configuration) {
-        var factories = ForgeFactory.getForgeFactories().stream()
-                                    .sorted(Comparator.comparing(f -> !uri.getHost().contains(f.name())))
-                                    .collect(Collectors.toList());
-        for (var factory : factories) {
+        var factories = ForgeFactory.getForgeFactories();
+
+        var hostname = uri.getHost();
+        var knownHostFactories = factories.stream()
+                                          .filter(f -> f.knownHosts().contains(hostname))
+                                          .collect(Collectors.toList());
+        if (knownHostFactories.size() == 1) {
+            var factory = knownHostFactories.get(0);
+            return Optional.of(factory.create(uri, credential, configuration));
+        }
+
+        var sorted = factories.stream()
+                              .sorted(Comparator.comparing(f -> !hostname.contains(f.name())))
+                              .collect(Collectors.toList());
+        for (var factory : sorted) {
             var forge = factory.create(uri, credential, configuration);
             if (forge.isValid()) {
                 return Optional.of(forge);
             }
         }
diff a/forge/src/main/java/org/openjdk/skara/forge/ForgeFactory.java b/forge/src/main/java/org/openjdk/skara/forge/ForgeFactory.java
--- a/forge/src/main/java/org/openjdk/skara/forge/ForgeFactory.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/ForgeFactory.java
@@ -34,10 +34,16 @@
      * A user-friendly name for the given forge, used for configuration section naming. Should be lower case.
      * @return
      */
     String name();
 
+    /**
+     * A set of known hostnames that are instances of this forge.
+     * @return
+     */
+    Set<String> knownHosts();
+
     /**
      * Instantiate an instance of this forge.
      * @return
      */
     Forge create(URI uri, Credential credential, JSONObject configuration);
diff a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubForgeFactory.java b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubForgeFactory.java
--- a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubForgeFactory.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubForgeFactory.java
@@ -3,18 +3,24 @@
 import org.openjdk.skara.forge.*;
 import org.openjdk.skara.host.Credential;
 import org.openjdk.skara.json.JSONObject;
 
 import java.net.URI;
+import java.util.Set;
 import java.util.regex.Pattern;
 
 public class GitHubForgeFactory implements ForgeFactory {
     @Override
     public String name() {
         return "github";
     }
 
+    @Override
+    public Set<String> knownHosts() {
+        return Set.of("github.com");
+    }
+
     @Override
     public Forge create(URI uri, Credential credential, JSONObject configuration) {
         Pattern webUriPattern = null;
         String webUriReplacement = null;
         if (configuration != null && configuration.contains("weburl")) {
diff a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabForgeFactory.java b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabForgeFactory.java
--- a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabForgeFactory.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabForgeFactory.java
@@ -3,17 +3,23 @@
 import org.openjdk.skara.forge.*;
 import org.openjdk.skara.host.Credential;
 import org.openjdk.skara.json.JSONObject;
 
 import java.net.URI;
+import java.util.Set;
 
 public class GitLabForgeFactory implements ForgeFactory {
     @Override
     public String name() {
         return "gitlab";
     }
 
+    @Override
+    public Set<String> knownHosts() {
+        return Set.of("gitlab.com");
+    }
+
     @Override
     public Forge create(URI uri, Credential credential, JSONObject configuration) {
         if (credential != null) {
             return new GitLabHost(uri, credential);
         } else {
diff a/forge/src/test/java/org/openjdk/skara/forge/ForgeTests.java b/forge/src/test/java/org/openjdk/skara/forge/ForgeTests.java
--- a/forge/src/test/java/org/openjdk/skara/forge/ForgeTests.java
+++ b/forge/src/test/java/org/openjdk/skara/forge/ForgeTests.java
@@ -39,10 +39,15 @@
                                        @Override
                                        public String name() {
                                            return "something";
                                        }
 
+                                       @Override
+                                       public Set<String> knownHosts() {
+                                           return Set.of();
+                                       }
+
                                        @Override
                                        public Forge create(URI uri, Credential credential, JSONObject configuration) {
                                            return null;
                                        }
                                    },
@@ -50,10 +55,15 @@
                                        @Override
                                        public String name() {
                                            return "other";
                                        }
 
+                                       @Override
+                                       public Set<String> knownHosts() {
+                                           return Set.of();
+                                       }
+
                                        @Override
                                        public Forge create(URI uri, Credential credential, JSONObject configuration) {
                                            return null;
                                        }
                                    });
