diff a/vcs/src/test/java/org/openjdk/skara/vcs/openjdk/OpenJDKTagTests.java b/vcs/src/test/java/org/openjdk/skara/vcs/openjdk/OpenJDKTagTests.java
--- a/vcs/src/test/java/org/openjdk/skara/vcs/openjdk/OpenJDKTagTests.java
+++ b/vcs/src/test/java/org/openjdk/skara/vcs/openjdk/OpenJDKTagTests.java
@@ -20,14 +20,15 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 package org.openjdk.skara.vcs.openjdk;
 
+import org.openjdk.skara.vcs.Tag;
+
 import org.junit.jupiter.api.Test;
-import static org.junit.jupiter.api.Assertions.*;
 
-import org.openjdk.skara.vcs.Tag;
+import static org.junit.jupiter.api.Assertions.*;
 
 class OpenJDKTagTests {
     @Test
     void parseTags() {
         var tag = new Tag("jdk-10+20");
@@ -90,6 +91,24 @@
         var tag = new Tag("jdk-10+0");
         var jdkTag = OpenJDKTag.create(tag).orElseThrow();
         assertEquals(0, jdkTag.buildNum());
         assertFalse(jdkTag.previous().isPresent());
     }
+
+    @Test
+    void parseJfxTags() {
+        var tag = new Tag("12.1.3+14");
+        var jdkTag = OpenJDKTag.create(tag).orElseThrow();
+        assertEquals("12.1.3", jdkTag.version());
+        assertEquals(14, jdkTag.buildNum());
+        var previousTag = jdkTag.previous().orElseThrow();
+        assertEquals(13, previousTag.buildNum());
+    }
+
+    @Test
+    void parseJfxTagsGa() {
+        var tag = new Tag("12.1-ga");
+        var jdkTag = OpenJDKTag.create(tag).orElseThrow();
+        assertEquals("12.1", jdkTag.version());
+        assertEquals(0, jdkTag.buildNum());
+    }
 }
