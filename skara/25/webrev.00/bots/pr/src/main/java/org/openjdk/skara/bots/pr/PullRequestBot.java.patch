diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestBot.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestBot.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestBot.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestBot.java
@@ -37,10 +37,11 @@
     private final String censusRef;
     private final Map<String, List<Pattern>> labelPatterns;
     private final Map<String, String> externalCommands;
     private final Map<String, String> blockingLabels;
     private final ConcurrentMap<Hash, Boolean> currentLabels = new ConcurrentHashMap<>();
+    private final PullRequestUpdateCache updateCache;
 
     PullRequestBot(HostedRepository repo, HostedRepository censusRepo, String censusRef, Map<String,
             List<Pattern>> labelPatterns, Map<String, String> externalCommands, Map<String, String> blockingLabels) {
         remoteRepo = repo;
         this.censusRepo = censusRepo;
@@ -46,10 +47,11 @@
         this.censusRepo = censusRepo;
         this.censusRef = censusRef;
         this.labelPatterns = labelPatterns;
         this.externalCommands = externalCommands;
         this.blockingLabels = blockingLabels;
+        this.updateCache = new PullRequestUpdateCache();
     }
 
     PullRequestBot(HostedRepository repo, HostedRepository censusRepo, String censusRef) {
         this(repo, censusRepo, censusRef, Map.of(), Map.of(), Map.of());
     }
@@ -56,13 +58,15 @@
 
     private List<WorkItem> getWorkItems(List<PullRequest> pullRequests) {
         var ret = new LinkedList<WorkItem>();
 
         for (var pr : pullRequests) {
-            ret.add(new CheckWorkItem(pr, censusRepo, censusRef, blockingLabels));
-            ret.add(new CommandWorkItem(pr, censusRepo, censusRef, externalCommands));
-            ret.add(new LabelerWorkItem(pr, labelPatterns, currentLabels));
+            if (updateCache.needsUpdate(pr)) {
+                ret.add(new CheckWorkItem(pr, censusRepo, censusRef, blockingLabels));
+                ret.add(new CommandWorkItem(pr, censusRepo, censusRef, externalCommands));
+                ret.add(new LabelerWorkItem(pr, labelPatterns, currentLabels));
+            }
         }
 
         return ret;
     }
 
