diff a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubPullRequest.java b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubPullRequest.java
--- a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubPullRequest.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubPullRequest.java
@@ -419,11 +419,11 @@
     }
 
     @Override
     public void setState(State state) {
         request.patch("pulls/" + json.get("number").toString())
-               .body("state", state == State.CLOSED ? "closed" : "open")
+               .body("state", state != State.OPEN ? "closed" : "open")
                .execute();
     }
 
     @Override
     public void addLabel(String label) {
diff a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabMergeRequest.java b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabMergeRequest.java
--- a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabMergeRequest.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabMergeRequest.java
@@ -548,11 +548,11 @@
 
 
     @Override
     public void setState(State state) {
         request.put("")
-               .body("state_event", state == State.CLOSED ? "close" : "reopen")
+               .body("state_event", state != State.OPEN ? "close" : "reopen")
                .execute();
     }
 
     @Override
     public void addLabel(String label) {
diff a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Issue.java b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Issue.java
--- a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Issue.java
+++ b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Issue.java
@@ -102,10 +102,11 @@
      */
     ZonedDateTime updatedAt();
 
     enum State {
         OPEN,
+        RESOLVED,
         CLOSED
     }
 
     /**
      * Set the state.
diff a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraIssue.java b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraIssue.java
--- a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraIssue.java
+++ b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraIssue.java
@@ -137,14 +137,27 @@
     @Override
     public ZonedDateTime updatedAt() {
         return ZonedDateTime.parse(json.get("fields").get("updated").asString(), dateFormat);
     }
 
+    private String stateName(State state) {
+        switch (state) {
+            case OPEN:
+                return "Open";
+            case RESOLVED:
+                return "Resolved";
+            case CLOSED:
+                return "Closed";
+            default:
+                throw new IllegalStateException("Unknown state " + state);
+        }
+    }
+
     @Override
     public void setState(State state) {
         var transitions = request.get("/transitions").execute();
-        var wantedStateName = state == State.CLOSED ? "Closed" : "Open";
+        var wantedStateName = stateName(state);
         for (var transition : transitions.get("transitions").asArray()) {
             if (transition.get("to").get("name").asString().equals(wantedStateName)) {
                 var query = JSON.object()
                                 .put("transition", JSON.object()
                                                        .put("id", transition.get("id").asString()));
