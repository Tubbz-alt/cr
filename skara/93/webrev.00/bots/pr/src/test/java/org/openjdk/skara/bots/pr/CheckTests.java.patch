diff a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java
--- a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java
+++ b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java
@@ -59,15 +59,15 @@
             var pr = credentials.createPullRequest(author, "master", "edit", "This is a pull request");
 
             // Check the status
             TestBotRunner.runPeriodicItems(checkBot);
 
-            // Verify that the check failed
+            // Verify that the check succeeded
             var checks = pr.getChecks(editHash);
             assertEquals(1, checks.size());
             var check = checks.get("jcheck");
-            assertEquals(CheckStatus.FAILURE, check.status());
+            assertEquals(CheckStatus.SUCCESS, check.status());
 
             // The PR should now be ready for review
             assertTrue(pr.getLabels().contains("rfr"));
             assertFalse(pr.getLabels().contains("ready"));
 
@@ -362,15 +362,15 @@
             var pr = credentials.createPullRequest(author, "master", "edit", "This is a pull request");
 
             // Check the status
             TestBotRunner.runPeriodicItems(checkBot);
 
-            // Verify that the check failed
+            // Verify that the check passed
             var checks = pr.getChecks(editHash);
             assertEquals(1, checks.size());
             var check = checks.get("jcheck");
-            assertEquals(CheckStatus.FAILURE, check.status());
+            assertEquals(CheckStatus.SUCCESS, check.status());
 
             // The PR should now be ready for review
             assertTrue(pr.getLabels().contains("rfr"));
             assertFalse(pr.getLabels().contains("ready"));
 
@@ -408,10 +408,16 @@
             TestBotRunner.runPeriodicItems(checkBot);
 
             // The PR is now neither ready for review nor integration
             assertFalse(pr.getLabels().contains("rfr"));
             assertFalse(pr.getLabels().contains("ready"));
+
+            // The check should now be failing
+            checks = pr.getChecks(addedHash);
+            assertEquals(1, checks.size());
+            check = checks.get("jcheck");
+            assertEquals(CheckStatus.FAILURE, check.status());
         }
     }
 
     @Test
     void individualReviewComments(TestInfo testInfo) throws IOException {
