diff a/storage/src/test/java/org/openjdk/skara/storage/FileStorageTests.java b/storage/src/test/java/org/openjdk/skara/storage/FileStorageTests.java
--- a/storage/src/test/java/org/openjdk/skara/storage/FileStorageTests.java
+++ b/storage/src/test/java/org/openjdk/skara/storage/FileStorageTests.java
@@ -31,16 +31,16 @@
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
 
 class FileStorageTests {
     private FileStorage<String> stringStorage(Path fileName) {
-        return new FileStorage<String>(fileName, (added, cur) -> Stream.concat(cur.stream(), Stream.of(added))
-                                                                       .sorted()
-                                                                       .collect(Collectors.joining(";")),
-                                       cur -> Arrays.stream(cur.split(";"))
-                                                    .filter(str -> !str.isEmpty())
-                                                    .collect(Collectors.toSet()));
+        return new FileStorage<>(fileName, (added, cur) -> Stream.concat(cur.stream(), added.stream())
+                                                                 .sorted()
+                                                                 .collect(Collectors.joining(";")),
+                                 cur -> Arrays.stream(cur.split(";"))
+                                              .filter(str -> !str.isEmpty())
+                                              .collect(Collectors.toSet()));
     }
 
     @Test
     void simple() throws IOException {
         var tmpFile = Files.createTempFile("filestorage", ".txt");
@@ -51,10 +51,22 @@
         assertEquals(Set.of("hello there"), storage.current());
 
         Files.delete(tmpFile);
     }
 
+    @Test
+    void multiple() throws IOException {
+        var tmpFile = Files.createTempFile("filestorage", ".txt");
+        var storage = stringStorage(tmpFile);
+
+        assertEquals(Set.of(), storage.current());
+        storage.put(List.of("hello", "there"));
+        assertEquals(Set.of("hello", "there"), storage.current());
+
+        Files.delete(tmpFile);
+    }
+
     @Test
     void retained() throws IOException {
         var tmpFile = Files.createTempFile("filestorage", ".txt");
         var storage = stringStorage(tmpFile);
 
