diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdateHistoryTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdateHistoryTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdateHistoryTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdateHistoryTests.java
@@ -20,23 +20,23 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 package org.openjdk.skara.bots.notify;
 
-import org.junit.jupiter.api.*;
-
 import org.openjdk.skara.host.HostedRepository;
 import org.openjdk.skara.storage.StorageBuilder;
-import org.openjdk.skara.test.*;
-import org.openjdk.skara.vcs.*;
+import org.openjdk.skara.test.HostCredentials;
 import org.openjdk.skara.vcs.Tag;
+import org.openjdk.skara.vcs.*;
+
+import org.junit.jupiter.api.*;
 
 import java.io.IOException;
 import java.nio.file.Files;
+import java.util.*;
 
 import static org.junit.jupiter.api.Assertions.*;
-import static org.junit.jupiter.api.Assertions.assertEquals;
 
 class UpdateHistoryTests {
     private String resetHostedRepository(HostedRepository repository) throws IOException {
         var folder = Files.createTempDirectory("updatehistory");
         var localRepository = Repository.init(folder, repository.getRepositoryType());
@@ -62,12 +62,11 @@
         try (var credentials = new HostCredentials(testInfo)) {
             var repository = credentials.getHostedRepository();
             var ref = resetHostedRepository(repository);
             var history = createHistory(repository, ref);
 
-            history.addTag(new Tag("1"));
-            history.addTag(new Tag("2"));
+            history.addTags(List.of(new Tag("1"), new Tag("2")));
 
             assertTrue(history.hasTag(new Tag("1")));
             assertTrue(history.hasTag(new Tag("2")));
 
             var newHistory = createHistory(repository, ref);
@@ -104,12 +103,11 @@
         try (var credentials = new HostCredentials(testInfo)) {
             var repository = credentials.getHostedRepository();
             var ref = resetHostedRepository(repository);
             var history = createHistory(repository, ref);
 
-            history.addTag(new Tag("1"));
-            history.addTag(new Tag("2"));
+            history.addTags(List.of(new Tag("1"), new Tag("2")));
 
             assertTrue(history.hasTag(new Tag("1")));
             assertTrue(history.hasTag(new Tag("2")));
 
             var history1 = createHistory(repository, ref);
@@ -122,12 +120,12 @@
             assertTrue(history2.hasTag(new Tag("1")));
             assertTrue(history2.hasTag(new Tag("2")));
             assertFalse(history2.hasTag(new Tag("3")));
             assertFalse(history2.hasTag(new Tag("4")));
 
-            history1.addTag(new Tag("3"));
-            history2.addTag(new Tag("4"));
+            history1.addTags(Set.of(new Tag("3")));
+            history2.addTags(Set.of(new Tag("4")));
 
             assertTrue(history1.hasTag(new Tag("3")));
             assertFalse(history1.hasTag(new Tag("4")));
             assertTrue(history2.hasTag(new Tag("3")));
             assertTrue(history2.hasTag(new Tag("4")));
