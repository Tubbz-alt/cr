diff a/vcs/src/main/resources/ext.py b/vcs/src/main/resources/ext.py
--- a/vcs/src/main/resources/ext.py
+++ b/vcs/src/main/resources/ext.py
@@ -23,10 +23,11 @@
 import mercurial.patch
 import mercurial.mdiff
 import mercurial.util
 import mercurial.hg
 import mercurial.node
+import mercurial.copies
 import difflib
 import sys
 
 # space separated version list
 testedwith = '4.9.2 5.0.2 5.2.1'
@@ -72,27 +73,30 @@
 
 def _diff_git_raw(repo, ctx1, ctx2, modified, added, removed, showPatch):
     nullHash = b'0' * 40
     removed_copy = set(removed)
 
+    copied = mercurial.copies.pathcopies(ctx1, ctx2)
+
     for path in added:
         fctx = ctx2.filectx(path)
         if fctx.renamed():
-            parent = fctx.p1()
             old_path, _ = fctx.renamed()
             if old_path in removed:
                 removed_copy.discard(old_path)
+        elif path in copied:
+            old_path = copied[path]
+            if old_path in removed:
+                removed_copy.discard(old_path)
 
     for path in sorted(modified | added | removed_copy):
         if path in modified:
             fctx = ctx2.filectx(path)
             writeln(b':' + mode(ctx1.filectx(path)) + b' ' + mode(fctx) + b' ' + nullHash + b' ' + nullHash + b' M\t' + fctx.path())
         elif path in added:
             fctx = ctx2.filectx(path)
-            if not fctx.renamed():
-                writeln(b':000000 ' + mode(fctx) + b' ' + nullHash + b' ' + nullHash + b' A\t' + fctx.path())
-            else:
+            if fctx.renamed():
                 parent = fctx.p1()
                 score = int_to_str(int(ratio(parent.data(), fctx.data(), 0.5) * 100))
                 old_path, _ = fctx.renamed()
 
                 if old_path in removed:
@@ -100,19 +104,32 @@
                 else:
                     operation = b'C'
 
                 write(b':' + mode(parent) + b' ' + mode(fctx) + b' ' + nullHash + b' ' + nullHash + b' ')
                 writeln(operation + score + b'\t' + old_path + b'\t' + path)
+            elif path in copied:
+                old_path = copied[path]
+                score = b'100'
+
+                if old_path in removed:
+                    operation = b'R'
+                else:
+                    operation = b'C'
+
+                write(b':' + mode(fctx) + b' ' + mode(fctx) + b' ' + nullHash + b' ' + nullHash + b' ')
+                writeln(operation + score + b'\t' + old_path + b'\t' + path)
+            else:
+                writeln(b':000000 ' + mode(fctx) + b' ' + nullHash + b' ' + nullHash + b' A\t' + fctx.path())
         elif path in removed_copy:
             fctx = ctx1.filectx(path)
             writeln(b':' + mode(fctx) + b' 000000 ' + nullHash + b' ' + nullHash + b' D\t' + path)
 
     if showPatch:
         writeln(b'')
 
         match = _match_exact(repo.root, repo.getcwd(), list(modified) + list(added) + list(removed_copy))
-        opts = mercurial.mdiff.diffopts(git=True, nodates=True, context=0, showfunc=True)
+        opts = mercurial.mdiff.diffopts(git=True, nodates=True, context=0)
         for d in mercurial.patch.diff(repo, ctx1.node(), ctx2.node(), match=match, opts=opts):
             write(d)
 
 def really_differs(repo, p1, p2, ctx, files):
     # workaround bug in hg (present since forever):
