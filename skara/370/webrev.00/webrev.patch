diff a/bots/cli/build.gradle b/bots/cli/build.gradle
--- a/bots/cli/build.gradle
+++ b/bots/cli/build.gradle
@@ -60,10 +60,11 @@
     implementation project(':json')
     implementation project(':ini')
     implementation project(':process')
     implementation project(':args')
     implementation project(':proxy')
+    implementation project(':version')
 
     testImplementation project(':test')
 }
 
 images {
diff a/bots/cli/src/main/java/module-info.java b/bots/cli/src/main/java/module-info.java
--- a/bots/cli/src/main/java/module-info.java
+++ b/bots/cli/src/main/java/module-info.java
@@ -29,10 +29,11 @@
     requires org.openjdk.skara.json;
     requires org.openjdk.skara.args;
     requires org.openjdk.skara.process;
     requires org.openjdk.skara.proxy;
     requires org.openjdk.skara.network;
+    requires org.openjdk.skara.version;
 
     requires java.sql;
 
     exports org.openjdk.skara.bots.cli;
 }
diff a/bots/cli/src/main/java/org/openjdk/skara/bots/cli/BotLauncher.java b/bots/cli/src/main/java/org/openjdk/skara/bots/cli/BotLauncher.java
--- a/bots/cli/src/main/java/org/openjdk/skara/bots/cli/BotLauncher.java
+++ b/bots/cli/src/main/java/org/openjdk/skara/bots/cli/BotLauncher.java
@@ -25,10 +25,11 @@
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.bot.*;
 import org.openjdk.skara.network.URIBuilder;
 import org.openjdk.skara.json.*;
 import org.openjdk.skara.proxy.HttpProxy;
+import org.openjdk.skara.version.Version;
 
 import java.io.IOException;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.*;
 import java.time.Duration;
@@ -121,10 +122,14 @@
                       .optional(),
                 Switch.shortcut("o")
                       .fullname("once")
                       .helptext("Instead of repeatedly executing periodical task, run each task exactly once")
                       .optional(),
+                Switch.shortcut("v")
+                      .fullname("version")
+                      .helptext("Show version")
+                      .optional(),
                 Switch.shortcut("l")
                       .fullname("list-bots")
                       .helptext("List all available bots and then exit")
                       .optional());
         var inputs = List.of(
@@ -142,10 +147,15 @@
                 System.out.println(" - " + botFactory.name() + " (" + botFactory.getClass().getModule() + ")");
             }
             System.exit(0);
         }
 
+        if (arguments.contains("version")) {
+            System.out.println(Version.fromManifest().orElse("unknown"));
+            System.exit(0);
+        }
+
         Path jsonFile = arguments.at(0).via(Paths::get);
         var jsonConfig = readConfiguration(jsonFile);
 
         applyLogging(jsonConfig);
         var log = Logger.getLogger("org.openjdk.skara.bots.cli");
diff a/bots/mlbridge/build.gradle b/bots/mlbridge/build.gradle
--- a/bots/mlbridge/build.gradle
+++ b/bots/mlbridge/build.gradle
@@ -42,8 +42,9 @@
     implementation project(':vcs')
     implementation project(':jcheck')
     implementation project(':json')
     implementation project(':email')
     implementation project(':webrev')
+    implementation project(':version')
 
     testImplementation project(':test')
 }
diff a/bots/mlbridge/src/main/java/module-info.java b/bots/mlbridge/src/main/java/module-info.java
--- a/bots/mlbridge/src/main/java/module-info.java
+++ b/bots/mlbridge/src/main/java/module-info.java
@@ -29,10 +29,11 @@
     requires org.openjdk.skara.jcheck;
     requires org.openjdk.skara.json;
     requires org.openjdk.skara.email;
     requires org.openjdk.skara.webrev;
     requires org.openjdk.skara.network;
+    requires org.openjdk.skara.version;
     requires java.logging;
     requires java.net.http;
 
     provides org.openjdk.skara.bot.BotFactory with org.openjdk.skara.bots.mlbridge.MailingListBridgeBotFactory;
 }
diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/WebrevStorage.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/WebrevStorage.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/WebrevStorage.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/WebrevStorage.java
@@ -25,10 +25,11 @@
 import org.openjdk.skara.email.EmailAddress;
 import org.openjdk.skara.forge.*;
 import org.openjdk.skara.network.URIBuilder;
 import org.openjdk.skara.vcs.*;
 import org.openjdk.skara.webrev.Webrev;
+import org.openjdk.skara.version.Version;
 
 import java.io.*;
 import java.net.URI;
 import java.net.http.*;
 import java.nio.file.*;
@@ -54,11 +55,13 @@
         this.author = author;
     }
 
     private void generate(PullRequest pr, Repository localRepository, Path folder, Hash base, Hash head) throws IOException {
         Files.createDirectories(folder);
-        Webrev.repository(localRepository).output(folder)
+        Webrev.repository(localRepository)
+              .output(folder)
+              .version(Version.fromManifest().orElse("unknown"))
               .generate(base, head);
     }
 
     private String generatePlaceholder(PullRequest pr, Hash base, Hash head) {
         return "This file was too large to be included in the published webrev, and has been replaced with " +
diff a/cli/build.gradle b/cli/build.gradle
--- a/cli/build.gradle
+++ b/cli/build.gradle
@@ -40,17 +40,11 @@
     implementation project(':host')
     implementation project(':forge')
     implementation project(':issuetracker')
     implementation project(':proxy')
     implementation project(':ssh')
-}
-
-
-jar {
-    manifest {
-        attributes("Implementation-Title": "org.openjdk.skara.cli", "Implementation-Version": archiveVersion)
-    }
+    implementation project(':version')
 }
 
 images {
     ext.launchers = [
         'git-jcheck': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitJCheck',
diff a/cli/src/main/java/module-info.java b/cli/src/main/java/module-info.java
--- a/cli/src/main/java/module-info.java
+++ b/cli/src/main/java/module-info.java
@@ -29,10 +29,11 @@
     requires org.openjdk.skara.json;
     requires org.openjdk.skara.host;
     requires org.openjdk.skara.forge;
     requires org.openjdk.skara.proxy;
     requires org.openjdk.skara.ssh;
+    requires org.openjdk.skara.version;
 
     requires java.net.http;
     requires java.logging;
 
     exports org.openjdk.skara.cli;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitDefpath.java b/cli/src/main/java/org/openjdk/skara/cli/GitDefpath.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitDefpath.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitDefpath.java
@@ -26,10 +26,11 @@
 import org.openjdk.skara.forge.Forge;
 import org.openjdk.skara.host.Credential;
 import org.openjdk.skara.vcs.*;
 import org.openjdk.skara.webrev.*;
 import org.openjdk.skara.proxy.HttpProxy;
+import org.openjdk.skara.version.Version;
 
 import java.io.*;
 import java.nio.file.*;
 import java.util.*;
 import java.net.http.*;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitFork.java b/cli/src/main/java/org/openjdk/skara/cli/GitFork.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitFork.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitFork.java
@@ -25,10 +25,11 @@
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.forge.Forge;
 import org.openjdk.skara.host.*;
 import org.openjdk.skara.vcs.Repository;
 import org.openjdk.skara.proxy.HttpProxy;
+import org.openjdk.skara.version.Version;
 
 import java.io.*;
 import java.net.URI;
 import java.nio.file.*;
 import java.nio.charset.StandardCharsets;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitInfo.java b/cli/src/main/java/org/openjdk/skara/cli/GitInfo.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitInfo.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitInfo.java
@@ -26,10 +26,11 @@
 import org.openjdk.skara.vcs.*;
 import org.openjdk.skara.issuetracker.IssueTracker;
 import org.openjdk.skara.jcheck.*;
 import org.openjdk.skara.vcs.openjdk.*;
 import org.openjdk.skara.proxy.HttpProxy;
+import org.openjdk.skara.version.Version;
 
 import java.io.IOException;
 import java.net.URI;
 import java.nio.file.Path;
 import java.util.*;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitJCheck.java b/cli/src/main/java/org/openjdk/skara/cli/GitJCheck.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitJCheck.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitJCheck.java
@@ -27,10 +27,11 @@
 import org.openjdk.skara.jcheck.*;
 import org.openjdk.skara.json.JSON;
 import org.openjdk.skara.json.JSONValue;
 import org.openjdk.skara.vcs.*;
 import org.openjdk.skara.vcs.openjdk.CommitMessageParsers;
+import org.openjdk.skara.version.Version;
 
 import java.io.IOException;
 import java.net.*;
 import java.nio.file.*;
 import java.util.*;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitOpenJDKImport.java b/cli/src/main/java/org/openjdk/skara/cli/GitOpenJDKImport.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitOpenJDKImport.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitOpenJDKImport.java
@@ -25,10 +25,11 @@
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.json.*;
 import org.openjdk.skara.vcs.*;
 import org.openjdk.skara.vcs.openjdk.*;
 import org.openjdk.skara.vcs.openjdk.convert.*;
+import org.openjdk.skara.version.Version;
 
 import java.io.*;
 import java.nio.file.*;
 import java.util.*;
 import static java.util.stream.Collectors.toList;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitPr.java
@@ -29,10 +29,11 @@
 import org.openjdk.skara.issuetracker.Issue;
 import org.openjdk.skara.jcheck.JCheckConfiguration;
 import org.openjdk.skara.proxy.HttpProxy;
 import org.openjdk.skara.vcs.*;
 import org.openjdk.skara.vcs.openjdk.CommitMessageParsers;
+import org.openjdk.skara.version.Version;
 
 import java.io.IOException;
 import java.net.URI;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.*;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitPublish.java b/cli/src/main/java/org/openjdk/skara/cli/GitPublish.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitPublish.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitPublish.java
@@ -22,10 +22,11 @@
  */
 package org.openjdk.skara.cli;
 
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.vcs.*;
+import org.openjdk.skara.version.Version;
 
 import java.io.*;
 import java.nio.file.*;
 import java.util.*;
 import java.util.function.Supplier;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitSync.java b/cli/src/main/java/org/openjdk/skara/cli/GitSync.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitSync.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitSync.java
@@ -24,10 +24,11 @@
 
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.vcs.*;
 import org.openjdk.skara.forge.*;
 import org.openjdk.skara.proxy.HttpProxy;
+import org.openjdk.skara.version.Version;
 
 import java.io.*;
 import java.net.*;
 import java.nio.file.*;
 import java.util.*;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitToken.java b/cli/src/main/java/org/openjdk/skara/cli/GitToken.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitToken.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitToken.java
@@ -21,10 +21,11 @@
  * questions.
  */
 package org.openjdk.skara.cli;
 
 import org.openjdk.skara.args.*;
+import org.openjdk.skara.version.Version;
 
 import java.io.IOException;
 import java.net.URI;
 import java.util.List;
 import java.util.logging.Level;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitTranslate.java b/cli/src/main/java/org/openjdk/skara/cli/GitTranslate.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitTranslate.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitTranslate.java
@@ -22,10 +22,11 @@
  */
 package org.openjdk.skara.cli;
 
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.vcs.ReadOnlyRepository;
+import org.openjdk.skara.version.Version;
 
 import java.io.IOException;
 import java.util.*;
 import java.util.logging.*;
 import java.nio.file.*;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitVerifyImport.java b/cli/src/main/java/org/openjdk/skara/cli/GitVerifyImport.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitVerifyImport.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitVerifyImport.java
@@ -22,10 +22,11 @@
  */
 package org.openjdk.skara.cli;
 
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.vcs.*;
+import org.openjdk.skara.version.Version;
 
 import java.io.IOException;
 import java.nio.file.*;
 import java.util.*;
 import java.util.stream.*;
diff a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
@@ -24,10 +24,11 @@
 
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.proxy.HttpProxy;
 import org.openjdk.skara.vcs.*;
 import org.openjdk.skara.webrev.*;
+import org.openjdk.skara.version.Version;
 
 import java.io.*;
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.net.http.HttpClient;
diff a/cli/src/main/java/org/openjdk/skara/cli/HgOpenJDKImport.java b/cli/src/main/java/org/openjdk/skara/cli/HgOpenJDKImport.java
--- a/cli/src/main/java/org/openjdk/skara/cli/HgOpenJDKImport.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/HgOpenJDKImport.java
@@ -25,10 +25,11 @@
 import org.openjdk.skara.args.*;
 import org.openjdk.skara.json.*;
 import org.openjdk.skara.vcs.*;
 import org.openjdk.skara.vcs.openjdk.*;
 import org.openjdk.skara.vcs.openjdk.convert.*;
+import org.openjdk.skara.version.Version;
 
 import java.io.*;
 import java.nio.file.*;
 import java.util.*;
 import static java.util.stream.Collectors.toList;
diff a/cli/src/main/java/org/openjdk/skara/cli/Version.java b/cli/src/main/java/org/openjdk/skara/cli/Version.java
--- a/cli/src/main/java/org/openjdk/skara/cli/Version.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- *
- * This code is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License version 2 only, as
- * published by the Free Software Foundation.
- *
- * This code is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * version 2 for more details (a copy is included in the LICENSE file that
- * accompanied this code).
- *
- * You should have received a copy of the GNU General Public License version
- * 2 along with this work; if not, write to the Free Software Foundation,
- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
- *
- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
- * or visit www.oracle.com if you need additional information or have any
- * questions.
- */
-package org.openjdk.skara.cli;
-
-import java.io.IOException;
-import java.util.jar.Manifest;
-import java.util.Optional;
-
-class Version {
-    private static String version = null;
-    static Optional<String> fromManifest() {
-        if (version == null) {
-            try {
-                var resources = Version.class.getClassLoader().getResources("META-INF/MANIFEST.MF");
-                while (resources.hasMoreElements()) {
-                    var manifest = new Manifest(resources.nextElement().openStream());
-                    var title = manifest.getMainAttributes().getValue("Implementation-Title");
-                    if (title != null && title.equals(Version.class.getModule().getName())) {
-                        version = manifest.getMainAttributes().getValue("Implementation-Version");
-                        break;
-                    }
-                }
-            } catch (IOException e) {
-                // pass
-            }
-        }
-
-        return Optional.ofNullable(version);
-    }
-}
diff a/settings.gradle b/settings.gradle
--- a/settings.gradle
+++ b/settings.gradle
@@ -42,10 +42,11 @@
 include 'vcs'
 include 'webrev'
 include 'network'
 include 'forge'
 include 'issuetracker'
+include 'version'
 
 include 'bots:bridgekeeper'
 include 'bots:cli'
 include 'bots:forward'
 include 'bots:hgbridge'
diff a/version/build.gradle b/version/build.gradle
--- /dev/null
+++ b/version/build.gradle
@@ -0,0 +1,40 @@
+/*
+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+module {
+    name = 'org.openjdk.skara.version'
+}
+
+jar {
+    manifest {
+        attributes("Implementation-Title": "org.openjdk.skara.version", "Implementation-Version": archiveVersion)
+    }
+}
+
+publishing {
+    publications {
+        version(MavenPublication) {
+            from components.java
+        }
+    }
+}
diff a/version/src/main/java/module-info.java b/version/src/main/java/module-info.java
--- /dev/null
+++ b/version/src/main/java/module-info.java
@@ -0,0 +1,25 @@
+/*
+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+module org.openjdk.skara.version {
+    exports org.openjdk.skara.version;
+}
diff a/version/src/main/java/org/openjdk/skara/version/Version.java b/version/src/main/java/org/openjdk/skara/version/Version.java
--- /dev/null
+++ b/version/src/main/java/org/openjdk/skara/version/Version.java
@@ -0,0 +1,50 @@
+/*
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+package org.openjdk.skara.version;
+
+import java.io.IOException;
+import java.util.jar.Manifest;
+import java.util.Optional;
+
+public class Version {
+    private static String version = null;
+    public static Optional<String> fromManifest() {
+        if (version == null) {
+            try {
+                var resources = Version.class.getClassLoader().getResources("META-INF/MANIFEST.MF");
+                while (resources.hasMoreElements()) {
+                    var manifest = new Manifest(resources.nextElement().openStream());
+                    var title = manifest.getMainAttributes().getValue("Implementation-Title");
+                    if (title != null && title.equals(Version.class.getModule().getName())) {
+                        version = manifest.getMainAttributes().getValue("Implementation-Version");
+                        break;
+                    }
+                }
+            } catch (IOException e) {
+                // pass
+            }
+        }
+
+        return Optional.ofNullable(version);
+    }
+}
