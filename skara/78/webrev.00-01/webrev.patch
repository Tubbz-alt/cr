diff a/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java b/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java
--- a/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java
+++ b/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java
@@ -176,12 +176,11 @@
 
     public List<FileEntry> files(Hash h, List<Path> paths) throws IOException {
         return List.of();
     }
 
-    public boolean dump(FileEntry entry, Path to) throws IOException {
-        return false;
+    public void dump(FileEntry entry, Path to) throws IOException {
     }
 
     public Diff diff(Hash base, Hash head) throws IOException {
         return null;
     }
diff a/vcs/src/main/java/org/openjdk/skara/vcs/ReadOnlyRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/ReadOnlyRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/ReadOnlyRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/ReadOnlyRepository.java
@@ -64,11 +64,11 @@
     List<FileEntry> files(Hash h, List<Path> paths) throws IOException;
     default List<FileEntry> files(Hash h, Path... paths) throws IOException {
         return files(h, Arrays.asList(paths));
     }
 
-    boolean dump(FileEntry entry, Path to) throws IOException;
+    void dump(FileEntry entry, Path to) throws IOException;
     Diff diff(Hash base, Hash head) throws IOException;
     Diff diff(Hash head) throws IOException;
     List<String> config(String key) throws IOException;
     Repository copyTo(Path destination) throws IOException;
     String pullPath(String remote) throws IOException;
diff a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
@@ -730,19 +730,17 @@
 
         return Optional.empty();
     }
 
     @Override
-    public boolean dump(FileEntry entry, Path to) throws IOException {
+    public void dump(FileEntry entry, Path to) throws IOException {
         var type = entry.type();
         if (type.isRegular()) {
             var path = unpackFile(entry.hash().hex());
             Files.createDirectories(to.getParent());
             Files.move(path, to, StandardCopyOption.REPLACE_EXISTING);
-            return true;
         }
-        return false;
     }
 
     @Override
     public Diff diff(Hash from) throws IOException {
         return diff(from, null);
diff a/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
@@ -665,17 +665,16 @@
             return entries;
         }
     }
 
     @Override
-    public boolean dump(FileEntry entry, Path to) throws IOException {
+    public void dump(FileEntry entry, Path to) throws IOException {
         var output = to.toAbsolutePath();
         try (var p = capture("hg", "cat", "--output=" + output.toString(),
                                           "--rev=" + entry.commit(),
                                           entry.path().toString())) {
-            var res = await(p);
-            return Files.exists(output);
+            await(p);
         }
     }
 
     @Override
     public void revert(Hash parent) throws IOException {
