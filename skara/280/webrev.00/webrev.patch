diff a/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestWorkItem.java b/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestWorkItem.java
--- a/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestWorkItem.java
+++ b/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestWorkItem.java
@@ -402,11 +402,11 @@
                     log.info("Found existing scratch directory for " + repository.name());
                     localRepo = Repository.get(localRepoDir).orElseThrow(() -> {
                             return new RuntimeException("Repository in " + localRepoDir + " has vanished");
                     });
                 }
-                fetchHead = localRepo.fetch(repository.url(), pr.targetRef());
+                fetchHead = localRepo.fetch(repository.url(), pr.headHash().hex());
                 localRepo.checkout(fetchHead, true);
                 job = ci.submit(localRepoDir, jobs, jobId);
             } catch (IOException e) {
                 var lines = List.of(
                         "<!-- TEST ERROR -->",
diff a/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryPullRequest.java b/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryPullRequest.java
--- a/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryPullRequest.java
+++ b/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryPullRequest.java
@@ -36,11 +36,10 @@
     List<Review> reviews = new ArrayList<Review>();
     HostUser author;
     HostedRepository repository;
     Hash headHash;
     String id;
-    String targetRef;
     Map<String, Map<String, Check>> checks = new HashMap<>();
 
     @Override
     public HostedRepository repository() {
         return repository;
@@ -90,11 +89,11 @@
         return null;
     }
 
     @Override
     public String targetRef() {
-        return targetRef;
+        return null;
     }
 
     @Override
     public Hash targetHash() {
         return null;
diff a/bots/tester/src/test/java/org/openjdk/skara/bots/tester/TestWorkItemTests.java b/bots/tester/src/test/java/org/openjdk/skara/bots/tester/TestWorkItemTests.java
--- a/bots/tester/src/test/java/org/openjdk/skara/bots/tester/TestWorkItemTests.java
+++ b/bots/tester/src/test/java/org/openjdk/skara/bots/tester/TestWorkItemTests.java
@@ -502,11 +502,10 @@
             repo.id = 1337L;
 
             var pr = new InMemoryPullRequest();
             pr.repository = repo;
             pr.id = "17";
-            pr.targetRef = "master";
 
             var duke = new HostUser(0, "duke", "Duke");
             pr.author = duke;
             pr.headHash = head;
 
@@ -611,15 +610,14 @@
             repo.id = 1337L;
 
             var pr = new InMemoryPullRequest();
             pr.repository = repo;
             pr.id = "17";
-            pr.targetRef = "master";
+            pr.headHash = head;
 
             var duke = new HostUser(0, "duke", "Duke");
             pr.author = duke;
-            pr.headHash = head;
 
             var now = ZonedDateTime.now();
             var comment = new Comment("0", "/test tier1", duke, now, now);
             pr.comments = new ArrayList<>(List.of(comment));
 
@@ -737,15 +735,14 @@
             repo.id = 1337L;
 
             var pr = new InMemoryPullRequest();
             pr.repository = repo;
             pr.id = "17";
-            pr.targetRef = "master";
+            pr.headHash = head;
 
             var duke = new HostUser(0, "duke", "Duke");
             pr.author = duke;
-            pr.headHash = head;
 
             var now = ZonedDateTime.now();
             var comment = new Comment("0", "/test tier1", duke, now, now);
             pr.comments = new ArrayList<>(List.of(comment));
 
@@ -826,15 +823,14 @@
             repo.id = 1337L;
 
             var pr = new InMemoryPullRequest();
             pr.repository = repo;
             pr.id = "17";
-            pr.targetRef = "master";
+            pr.headHash = head;
 
             var duke = new HostUser(0, "duke", "Duke");
             pr.author = duke;
-            pr.headHash = head;
 
             var now = ZonedDateTime.now();
             var comment = new Comment("0", "/test tier1", duke, now, now);
             pr.comments = new ArrayList<>(List.of(comment));
 
