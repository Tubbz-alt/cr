diff a/email/src/main/java/org/openjdk/skara/email/SMTP.java b/email/src/main/java/org/openjdk/skara/email/SMTP.java
--- a/email/src/main/java/org/openjdk/skara/email/SMTP.java
+++ b/email/src/main/java/org/openjdk/skara/email/SMTP.java
@@ -23,37 +23,42 @@
 package org.openjdk.skara.email;
 
 import java.io.*;
 import java.net.Socket;
 import java.nio.charset.StandardCharsets;
+import java.time.Duration;
 import java.time.format.DateTimeFormatter;
 import java.util.regex.Pattern;
 
 /**
  * Limited SMTP client implementation - only compatibility requirement (currently) is the OpenJDK
  * mailing list servers.
  */
 public class SMTP {
     private static Pattern initReply = Pattern.compile("220 .*");
-    private static Pattern ehloReply = Pattern.compile("^250 HELP$");
+    private static Pattern ehloReply = Pattern.compile("^250 .*");
     private static Pattern mailReply = Pattern.compile("^250 .*");
     private static Pattern rcptReply = Pattern.compile("^250 .*");
     private static Pattern dataReply = Pattern.compile("354 Enter.*");
     private static Pattern doneReply = Pattern.compile("250 .*");
 
     public static void send(String server, EmailAddress recipient, Email email) throws IOException {
+        send(server, recipient, email, Duration.ofMinutes(30));
+    }
+
+    public static void send(String server, EmailAddress recipient, Email email, Duration timeout) throws IOException {
         var port = 25;
         if (server.contains(":")) {
             var parts = server.split(":", 2);
             server = parts[0];
             port = Integer.parseInt(parts[1]);
         }
         try (var socket = new Socket(server, port);
              var out = new OutputStreamWriter(socket.getOutputStream(), StandardCharsets.UTF_8);
              var in = new InputStreamReader(socket.getInputStream(), StandardCharsets.UTF_8)) {
 
-            var session = new SMTPSession(in, out);
+            var session = new SMTPSession(in, out, timeout);
 
             session.waitForPattern(initReply);
             session.sendCommand("EHLO " + email.sender().domain(), ehloReply);
             session.sendCommand("MAIL FROM:" + email.sender().address(), mailReply);
             session.sendCommand("RCPT TO:<" + recipient.address() + ">", rcptReply);
