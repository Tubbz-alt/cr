diff a/host/src/main/java/org/openjdk/skara/host/gitlab/GitLabMergeRequest.java b/host/src/main/java/org/openjdk/skara/host/gitlab/GitLabMergeRequest.java
--- a/host/src/main/java/org/openjdk/skara/host/gitlab/GitLabMergeRequest.java
+++ b/host/src/main/java/org/openjdk/skara/host/gitlab/GitLabMergeRequest.java
@@ -333,10 +333,13 @@
 
     private String encodeMarkdown(String message) {
         return message.replaceAll("\n", "  \n");
     }
 
+    private final Pattern checkBodyPattern = Pattern.compile("^##### ([^\\n\\r]*)\\R(.*)",
+                                                             Pattern.DOTALL | Pattern.MULTILINE);
+
     @Override
     public Map<String, Check> getChecks(Hash hash) {
         var pattern = Pattern.compile(String.format(checkResultPattern, hash.hex()));
         var matchers = getComments().stream()
                 .collect(Collectors.toMap(comment -> comment,
@@ -352,11 +355,15 @@
                                 checkBuilder.complete(entry.getValue().group(2).equals("SUCCESS"), entry.getKey().updatedAt());
                             }
                             if (!entry.getValue().group(3).equals("NONE")) {
                                 checkBuilder.metadata(new String(Base64.getDecoder().decode(entry.getValue().group(3)), StandardCharsets.UTF_8));
                             }
-                            checkBuilder.summary(entry.getKey().body());
+                            var checkBodyMatcher = checkBodyPattern.matcher(entry.getKey().body());
+                            if (checkBodyMatcher.find()) {
+                                checkBuilder.title(checkBodyMatcher.group(1));
+                                checkBuilder.summary(checkBodyMatcher.group(2));
+                            }
                             return checkBuilder.build();
                         }));
     }
 
     @Override
