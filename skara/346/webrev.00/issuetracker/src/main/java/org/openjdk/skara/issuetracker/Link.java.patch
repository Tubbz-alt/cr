diff a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Link.java b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Link.java
--- a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Link.java
+++ b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Link.java
@@ -33,33 +33,43 @@
     private final URI iconUrl;
     private final String iconTitle;
     private final URI statusIconUrl;
     private final String statusIconTitle;
     private final boolean resolved;
+    private final Issue linked;
 
-    Link(URI uri, String title, String relationship, String summary, URI iconUrl, String iconTitle, URI statusIconUrl, String statusIconTitle, boolean resolved) {
+    Link(URI uri, String title, String relationship, String summary, URI iconUrl, String iconTitle, URI statusIconUrl, String statusIconTitle, boolean resolved, Issue linked) {
         this.uri = uri;
         this.title = title;
         this.relationship = relationship;
         this.summary = summary;
         this.iconUrl = iconUrl;
         this.iconTitle = iconTitle;
         this.statusIconUrl = statusIconUrl;
         this.statusIconTitle = statusIconTitle;
         this.resolved = resolved;
+        this.linked = linked;
     }
 
-    public static LinkBuilder create(URI uri, String title) {
-        return new LinkBuilder(uri, title);
+    public static WebLinkBuilder create(URI uri, String title) {
+        return new WebLinkBuilder(uri, title);
     }
 
-    public URI uri() {
-        return uri;
+    public static IssueLinkBuilder create(Issue issue, String relationship) {
+        return new IssueLinkBuilder(issue, relationship);
     }
 
-    public String title() {
-        return title;
+    public Optional<URI> uri() {
+        return Optional.ofNullable(uri);
+    }
+
+    public Optional<String> title() {
+        return Optional.ofNullable(title);
+    }
+
+    public Optional<Issue> issue() {
+        return Optional.ofNullable(linked);
     }
 
     public Optional<String> relationship() {
         return Optional.ofNullable(relationship);
     }
@@ -99,10 +109,11 @@
         Link link = (Link) o;
         return resolved == link.resolved &&
                 uri.equals(link.uri) &&
                 title.equals(link.title) &&
                 Objects.equals(relationship, link.relationship) &&
+                Objects.equals(linked, link.linked) &&
                 Objects.equals(summary, link.summary) &&
                 Objects.equals(iconUrl, link.iconUrl) &&
                 Objects.equals(iconTitle, link.iconTitle) &&
                 Objects.equals(statusIconUrl, link.statusIconUrl) &&
                 Objects.equals(statusIconTitle, link.statusIconTitle);
@@ -117,10 +128,11 @@
     public String toString() {
         return "Link{" +
                 "uri=" + uri +
                 ", title='" + title + '\'' +
                 ", relationship='" + relationship + '\'' +
+                ", linked='" + linked + '\'' +
                 ", summary='" + summary + '\'' +
                 ", iconUrl=" + iconUrl +
                 ", iconTitle='" + iconTitle + '\'' +
                 ", statusIconUrl=" + statusIconUrl +
                 ", statusIconTitle='" + statusIconTitle + '\'' +
