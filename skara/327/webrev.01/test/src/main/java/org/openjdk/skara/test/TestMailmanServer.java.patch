diff a/test/src/main/java/org/openjdk/skara/test/TestMailmanServer.java b/test/src/main/java/org/openjdk/skara/test/TestMailmanServer.java
--- a/test/src/main/java/org/openjdk/skara/test/TestMailmanServer.java
+++ b/test/src/main/java/org/openjdk/skara/test/TestMailmanServer.java
@@ -22,26 +22,29 @@
  */
 package org.openjdk.skara.test;
 
 import com.sun.net.httpserver.*;
 import org.openjdk.skara.email.EmailAddress;
-import org.openjdk.skara.network.URIBuilder;
 import org.openjdk.skara.mailinglist.Mbox;
+import org.openjdk.skara.network.URIBuilder;
 
 import java.io.*;
 import java.net.*;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.*;
 import java.security.*;
 import java.time.Duration;
 import java.util.*;
+import java.util.logging.Logger;
 import java.util.regex.Pattern;
 
 public class TestMailmanServer implements AutoCloseable {
     private final HttpServer httpServer;
     private final SMTPServer smtpServer;
     private final Map<String, Path> lists = new HashMap<>();
+    private final Logger log = Logger.getLogger("org.openjdk.skara.test");
+
     private boolean lastResponseCached;
 
     static private final Pattern listPathPattern = Pattern.compile("^/test/(.*?)/.*");
 
     private class Handler implements HttpHandler {
@@ -53,22 +56,28 @@
             }
             var list = lists.get(listMatcher.group(1));
             var response = Files.readString(list);
             lastResponseCached = false;
 
+            log.warning("Read " + response.length() + " chars");
             try {
                 var digest = MessageDigest.getInstance("SHA-256");
                 digest.update(response.getBytes(StandardCharsets.UTF_8));
                 var etag = "\"" + Base64.getUrlEncoder().encodeToString(digest.digest()) + "\"";
                 exchange.getResponseHeaders().add("ETag", etag);
 
                 if (exchange.getRequestHeaders().containsKey("If-None-Match")) {
                     if (exchange.getRequestHeaders().getFirst("If-None-Match").equals(etag)) {
                         exchange.sendResponseHeaders(304, 0);
                         lastResponseCached = true;
+                        log.warning("Cache hit!");
                         return;
+                    } else {
+                        log.warning("Cache mismatch");
                     }
+                } else {
+                    log.warning("No If-None-Match tag");
                 }
 
                 var responseBytes = response.getBytes(StandardCharsets.UTF_8);
                 exchange.sendResponseHeaders(200, responseBytes.length);
                 OutputStream outputStream = exchange.getResponseBody();
