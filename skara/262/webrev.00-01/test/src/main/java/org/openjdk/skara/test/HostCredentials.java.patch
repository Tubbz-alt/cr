diff a/test/src/main/java/org/openjdk/skara/test/HostCredentials.java b/test/src/main/java/org/openjdk/skara/test/HostCredentials.java
--- a/test/src/main/java/org/openjdk/skara/test/HostCredentials.java
+++ b/test/src/main/java/org/openjdk/skara/test/HostCredentials.java
@@ -89,11 +89,11 @@
             throw new RuntimeException("not implemented yet");
         }
 
         @Override
         public HostedRepository getHostedRepository(Forge host) {
-            return host.repository(config.get("project").asString()).get();
+            return host.repository(config.get("project").asString()).orElseThrow();
         }
 
         @Override
         public IssueProject getIssueProject(IssueTracker host) {
             return host.project(config.get("project").asString());
@@ -126,11 +126,11 @@
             throw new RuntimeException("not implemented yet");
         }
 
         @Override
         public HostedRepository getHostedRepository(Forge host) {
-            return host.repository(config.get("project").asString()).get();
+            return host.repository(config.get("project").asString()).orElseThrow();
         }
 
         @Override
         public IssueProject getIssueProject(IssueTracker host) {
             return host.project(config.get("project").asString());
@@ -163,11 +163,11 @@
             return IssueTracker.from("jira", hostUri, pat, null);
         }
 
         @Override
         public HostedRepository getHostedRepository(Forge host) {
-            return host.repository(config.get("project").asString()).get();
+            return host.repository(config.get("project").asString()).orElseThrow();
         }
 
         @Override
         public IssueProject getIssueProject(IssueTracker host) {
             return host.project(config.get("project").asString());
@@ -207,11 +207,11 @@
             return createHost(userIndex);
         }
 
         @Override
         public HostedRepository getHostedRepository(Forge host) {
-            return host.repository("test").get();
+            return host.repository("test").orElseThrow();
         }
 
         @Override
         public IssueProject getIssueProject(IssueTracker host) {
             return host.project("test");
