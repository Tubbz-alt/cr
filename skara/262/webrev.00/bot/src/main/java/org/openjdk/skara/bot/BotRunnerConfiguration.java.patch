diff a/bot/src/main/java/org/openjdk/skara/bot/BotRunnerConfiguration.java b/bot/src/main/java/org/openjdk/skara/bot/BotRunnerConfiguration.java
--- a/bot/src/main/java/org/openjdk/skara/bot/BotRunnerConfiguration.java
+++ b/bot/src/main/java/org/openjdk/skara/bot/BotRunnerConfiguration.java
@@ -152,11 +152,13 @@
             var hostName = entry.value().get("host").asString();
             if (!repositoryHosts.containsKey(hostName)) {
                 throw new ConfigurationError("Repository " + entry.name() + " uses undefined host '" + hostName + "'");
             }
             var host = repositoryHosts.get(hostName);
-            var repo = host.repository(entry.value().get("repository").asString());
+            var repo = host.repository(entry.value().get("repository").asString()).orElseThrow(() ->
+                    new ConfigurationError("Repository " + entry.value().get("repository").asString() + " is not available at " + hostName)
+            );
             ret.put(entry.name(), repo);
         }
 
         return ret;
     }
@@ -179,11 +181,13 @@
             var host = repositoryHosts.get(hostName);
             if (!repositoryHosts.containsKey(hostName)) {
                 throw new ConfigurationError("Repository entry " + entry + " uses undefined host '" + hostName + "'");
             }
             var repositoryName = entry.substring(hostSeparatorIndex + 1);
-            ret.repository = host.repository(repositoryName);
+            ret.repository = host.repository(repositoryName).orElseThrow(() ->
+                    new ConfigurationError("Repository " + repositoryName + " is not available at " + hostName)
+            );
         } else {
             if (!repositories.containsKey(entry)) {
                 throw new ConfigurationError("Repository " + entry + " is not defined!");
             }
             ret.repository = repositories.get(entry);
