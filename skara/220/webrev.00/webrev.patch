diff a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
@@ -309,11 +309,11 @@
     }
 
 
     @Override
     public void revert(Hash h) throws IOException {
-        try (var p = capture("git", "checkout", h.hex(), "--", ".")) {
+        try (var p = capture("git", "checkout", "--recurse-submodules", h.hex(), "--", ".")) {
             await(p);
         }
     }
 
     @Override
@@ -343,11 +343,11 @@
         }
     }
 
     private void checkout(String ref, boolean force) throws IOException {
         var cmd = new ArrayList<String>();
-        cmd.addAll(List.of("git", "-c", "advice.detachedHead=false", "checkout"));
+        cmd.addAll(List.of("git", "-c", "advice.detachedHead=false", "checkout", "--recurse-submodules"));
         if (force) {
             cmd.add("--force");
         }
         cmd.add(ref);
         try (var p = capture(cmd)) {
@@ -871,11 +871,11 @@
         return r.exists() ? Optional.of(new GitRepository(r.root())) : Optional.empty();
     }
 
     @Override
     public Repository copyTo(Path destination) throws IOException {
-        try (var p = capture("git", "clone", root().toString(), destination.toString())) {
+        try (var p = capture("git", "clone", "--recurse-submodules", root().toString(), destination.toString())) {
             await(p);
         }
 
         return new GitRepository(destination);
     }
@@ -1007,10 +1007,12 @@
     public static Repository clone(URI from, Path to, boolean isBare) throws IOException {
         var cmd = new ArrayList<String>();
         cmd.addAll(List.of("git", "clone"));
         if (isBare) {
             cmd.add("--bare");
+        } else {
+            cmd.add("--recurse-submodules");
         }
         cmd.addAll(List.of(from.toString(), to.toString()));
         try (var p = capture(Path.of("").toAbsolutePath(), cmd)) {
             await(p);
         }
