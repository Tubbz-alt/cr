diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveItem.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveItem.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveItem.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveItem.java
@@ -40,11 +40,11 @@
                                () -> "RFR: " + pr.title(),
                                () -> "",
                                () -> ArchiveMessages.composeConversation(pr, base, head),
                                () -> {
                                     var fullWebrev = webrevGenerator.generate(base, head, "00");
-                                    webrevNotification.notify(fullWebrev, 0, true);
+                                    webrevNotification.notify(0, fullWebrev, null);
                                     return ArchiveMessages.composeConversationFooter(pr, issueTracker, issuePrefix, localRepo, fullWebrev, base, head);
                                });
     }
 
     static ArchiveItem from(PullRequest pr, Repository localRepo, WebrevStorage.WebrevGenerator webrevGenerator, WebrevNotification webrevNotification, Hash lastBase, Hash lastHead, Hash base, Hash head, int index, ArchiveItem parent) {
@@ -52,26 +52,26 @@
                                () -> String.format("Re: [Rev %02d] RFR: %s", index, pr.title()),
                                () -> "",
                                () -> ArchiveMessages.composeRevision(pr, localRepo, base, head, lastBase, lastHead),
                                () -> {
                                     var fullWebrev = webrevGenerator.generate(base, head, String.format("%02d", index));
-                                    webrevNotification.notify(fullWebrev, index, true);
                                     if (lastBase.equals(base)) {
                                         var incrementalWebrev = webrevGenerator.generate(lastHead, head, String.format("%02d-%02d", index - 1, index));
-                                        webrevNotification.notify(incrementalWebrev, index, false);
+                                        webrevNotification.notify(index, fullWebrev, incrementalWebrev);
                                         return ArchiveMessages.composeIncrementalFooter(pr, localRepo, fullWebrev, incrementalWebrev, head, lastHead);
                                     } else {
                                         // It may be possible to auto-rebase the last head onto the new base to get an incremental webrev
                                         try {
                                             localRepo.checkout(lastHead, true);
                                             localRepo.rebase(base, "duke", "duke@openjdk.org");
                                             var rebasedLastHead = localRepo.head();
                                             var incrementalWebrev = webrevGenerator.generate(rebasedLastHead, head, String.format("%02d-%02d", index - 1, index));
-                                            webrevNotification.notify(incrementalWebrev, index, false);
+                                            webrevNotification.notify(index, fullWebrev, incrementalWebrev);
                                             return ArchiveMessages.composeIncrementalFooter(pr, localRepo, fullWebrev, incrementalWebrev, head, lastHead);
                                         } catch (IOException e) {
                                             // If it doesn't work out we just post a full webrev
+                                            webrevNotification.notify(index, fullWebrev, null);
                                             return ArchiveMessages.composeRebaseFooter(pr, localRepo, fullWebrev, base, head);
                                         }
                                     }
                                });
     }
