diff a/vcs/src/main/java/org/openjdk/skara/vcs/tools/UnifiedDiffParser.java b/vcs/src/main/java/org/openjdk/skara/vcs/tools/UnifiedDiffParser.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/tools/UnifiedDiffParser.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/tools/UnifiedDiffParser.java
@@ -147,12 +147,12 @@
                     targetLines.add(line.substring(1)); // skip initial '+'
                 } else {
                     throw new IllegalStateException("Unexpected diff line: " + line);
                 }
             }
-            hunks.add(new Hunk(Range.fromString(sourceRange), sourceLines, sourceHasNewlineAtEndOfFile,
-                               Range.fromString(targetRange), targetLines, targetHasNewlineAtEndOfFile));
+            hunks.add(new Hunk(GitRange.fromString(sourceRange), sourceLines, sourceHasNewlineAtEndOfFile,
+                               GitRange.fromString(targetRange), targetLines, targetHasNewlineAtEndOfFile));
         }
 
         return Hunks.ofTextual(hunks);
     }
 
@@ -259,18 +259,10 @@
                 i++;
                 continue;
             }
 
             if (line.startsWith(" ")) {
-                // this is the start of another hunk
-                // TODO: explain this strange behaviour
-                if (sourceLines.size() == 0) {
-                    sourceStart--;
-                }
-                if (targetLines.size() == 0) {
-                    targetStart--;
-                }
                 hunks.add(new Hunk(new Range(sourceStart, sourceLines.size()), sourceLines,
                                    new Range(targetStart, targetLines.size()), targetLines));
 
                 sourceStart += sourceLines.size();
                 targetStart += targetLines.size();
@@ -285,16 +277,10 @@
                 }
             }
         }
 
         if (sourceLines.size() > 0 || targetLines.size() > 0) {
-            if (sourceLines.size() == 0) {
-                sourceStart--;
-            }
-            if (targetLines.size() == 0) {
-                targetStart--;
-            }
             hunks.add(new Hunk(new Range(sourceStart, sourceLines.size()), sourceLines,
                                new Range(targetStart, targetLines.size()), targetLines));
         }
 
         return hunks;
