diff a/cli/src/main/java/org/openjdk/skara/cli/GitWImport.java b/cli/src/main/java/org/openjdk/skara/cli/GitWImport.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitWImport.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitWImport.java
@@ -55,11 +55,11 @@
                         .describe("NAME")
                         .helptext("Use NAME as a name for the patch (default is patch file name)")
                         .optional(),
                 Switch.shortcut("f")
                         .fullname("file")
-                        .helptext("Input is a file path")
+                        .helptext("Input is a file path to a local patch file")
                         .optional(),
                 Switch.shortcut("k")
                         .fullname("keep")
                         .helptext("Keep downloaded patch file in current directory")
                         .optional(),
@@ -152,11 +152,13 @@
                 .orElseThrow(() -> new IllegalStateException("Can not find patch file name in webrev body"));
     }
 
     private static Path downloadPatchFile(URI uri, String patchName, boolean keep) throws IOException, InterruptedException {
         var client = HttpClient.newHttpClient();
-        var patchFile = Paths.get(patchName + ".patch");
+        Path patchFile;
         if (keep) {
+            patchFile = Paths.get(patchName + ".patch");
             if (Files.exists(patchFile)) {
                 System.err.println("Patch file: " + patchFile + " already exists!");
                 System.exit(1);
             } else {
                 Files.createFile(patchFile);
@@ -160,11 +161,11 @@
                 System.err.println("Patch file: " + patchFile + " already exists!");
                 System.exit(1);
             } else {
                 Files.createFile(patchFile);
             }
-        }else {
+        } else {
             patchFile = Files.createTempFile(patchName, ".patch");
         }
 
         var patchFileRequest = HttpRequest.newBuilder()
                 .uri(uri)
