diff a/args/src/main/java/org/openjdk/skara/args/MultiCommandParser.java b/args/src/main/java/org/openjdk/skara/args/MultiCommandParser.java
--- a/args/src/main/java/org/openjdk/skara/args/MultiCommandParser.java
+++ b/args/src/main/java/org/openjdk/skara/args/MultiCommandParser.java
@@ -52,11 +52,11 @@
     private Command helpCommand() {
         return new Command("help", "print a help message", args -> showUsage());
     }
 
     public Executable parse(String[] args) {
-        if (args.length != 0) {
+        if (args.length > 0) {
             var p = subCommands.get(args[0]);
             if (p != null) {
                 var forwardedArgs = Arrays.copyOfRange(args, 1, args.length);
                 return () -> p.main(forwardedArgs);
             }
diff a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
@@ -21,10 +21,11 @@
  * questions.
  */
 package org.openjdk.skara.cli;
 
 import org.openjdk.skara.args.*;
+import org.openjdk.skara.proxy.HttpProxy;
 import org.openjdk.skara.vcs.*;
 import org.openjdk.skara.webrev.*;
 
 import java.io.*;
 import java.net.URI;
@@ -269,11 +270,11 @@
             System.exit(1);
             return null;
         });
 
         var inputString = arguments.at(0).asString();
-        var webrevMetaData = WebrevMetaData.fromWebrevURL(inputString);
+        var webrevMetaData = WebrevMetaData.from(URI.create(inputString));
         var patchFileURI = webrevMetaData.patchURI()
                 .orElseThrow(() -> new IllegalStateException("Could not find patch file in webrev"));
         var patchFile = downloadPatchFile(patchFileURI);
 
         repository.apply(patchFile, false);
@@ -296,10 +297,11 @@
                            .main(GitWebrev::generate),
                     Command.name("apply")
                            .helptext("apply a webrev from a webrev url")
                            .main(GitWebrev::apply)
                 );
+        HttpProxy.setup();
 
         var parser = new MultiCommandParser("git webrev", commands);
         var command = parser.parse(args);
         command.execute();
     }
diff a/webrev/src/main/java/org/openjdk/skara/webrev/WebrevMetaData.java b/webrev/src/main/java/org/openjdk/skara/webrev/WebrevMetaData.java
--- a/webrev/src/main/java/org/openjdk/skara/webrev/WebrevMetaData.java
+++ b/webrev/src/main/java/org/openjdk/skara/webrev/WebrevMetaData.java
@@ -40,11 +40,11 @@
 
     public WebrevMetaData(Optional<URI> patchURI) {
         this.patchURI = patchURI;
     }
 
-    public static WebrevMetaData fromWebrevURL(String uri) throws IOException, URISyntaxException, InterruptedException {
+    public static WebrevMetaData from(URI uri) throws IOException, URISyntaxException, InterruptedException {
         var sanatizedUri = sanitizeURI(uri);
         var patchFile = getPatchFile(sanatizedUri);
 
         return new WebrevMetaData(patchFile);
     }
@@ -54,13 +54,14 @@
             s = s.substring(0, s.length() - suffix.length());
         }
         return s;
     }
 
-    private static URI sanitizeURI(String uri) throws URISyntaxException {
-        uri = dropSuffix(uri, "index.html");
-        return new URI(uri);
+    private static URI sanitizeURI(URI uri) throws URISyntaxException {
+        var path = dropSuffix(uri.getPath(), "index.html");
+        return new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(),
+                       path, uri.getQuery(), uri.getFragment());
     }
 
     private static Optional<URI> getPatchFile(URI uri) throws IOException, InterruptedException {
         var client = HttpClient.newHttpClient();
         var findPatchFileRcequest = HttpRequest.newBuilder()
