diff a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraHost.java b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraHost.java
--- a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraHost.java
+++ b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraHost.java
@@ -20,16 +20,17 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 package org.openjdk.skara.issuetracker.jira;
 
-import org.openjdk.skara.host.*;
+import org.openjdk.skara.host.HostUser;
 import org.openjdk.skara.issuetracker.*;
+import org.openjdk.skara.json.*;
 import org.openjdk.skara.network.*;
-import org.openjdk.skara.json.JSON;
 
 import java.net.URI;
+import java.util.Arrays;
 
 public class JiraHost implements IssueTracker {
     private final URI uri;
     private final RestRequest request;
 
@@ -40,10 +41,18 @@
                                 .setPath("/rest/api/2/")
                                 .build();
         request = new RestRequest(baseApi);
     }
 
+    JiraHost(URI uri, JiraVault jiraVault) {
+        this.uri = uri;
+        var baseApi = URIBuilder.base(uri)
+                                .setPath("/rest/api/2/")
+                                .build();
+        request = new RestRequest(baseApi, () -> Arrays.asList("Cookie", jiraVault.getCookie()));
+    }
+
     URI getUri() {
         return uri;
     }
 
     @Override
@@ -57,20 +66,46 @@
     @Override
     public IssueProject project(String name) {
         return new JiraProject(this, request, name);
     }
 
+    private JSONObject userData(String name) {
+        var data = request.get("user")
+                          .param("username", name)
+                          .execute();
+        return data.asObject();
+    }
+
     @Override
     public HostUser user(String username) {
-        throw new RuntimeException("needs authentication; not implemented yet");
+        var data = request.get("user")
+                          .param("username", username)
+                          .execute();
+        var user = new HostUser(data.get("name").asString(),
+                                data.get("name").asString(),
+                                data.get("displayName").asString());
+        return user;
     }
 
     @Override
     public HostUser currentUser() {
-        throw new RuntimeException("needs authentication; not implemented yet");
+        var data = request.get("myself").execute();
+        var user = new HostUser(data.get("name").asString(),
+                                data.get("name").asString(),
+                                data.get("displayName").asString());
+        return user;
     }
 
     @Override
     public boolean isMemberOf(String groupId, HostUser user) {
-        throw new RuntimeException("not implemented yet");
+        var data = request.get("user")
+                          .param("username", user.id())
+                          .param("expand", "groups")
+                          .execute();
+        for (var group : data.get("groups").get("items").asArray()) {
+            if (group.get("name").asString().equals(groupId)) {
+                return true;
+            }
+        }
+        return false;
     }
 }
