diff a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraHost.java b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraHost.java
--- a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraHost.java
+++ b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraHost.java
@@ -75,11 +75,17 @@
         return data.asObject();
     }
 
     @Override
     public HostUser user(String username) {
-        throw new RuntimeException("needs authentication; not implemented yet");
+        var data = request.get("user")
+                          .param("username", username)
+                          .execute();
+        var user = new HostUser(data.get("name").asString(),
+                                data.get("name").asString(),
+                                data.get("displayName").asString());
+        return user;
     }
 
     @Override
     public HostUser currentUser() {
         var data = request.get("myself").execute();
diff a/issuetracker/src/test/java/org/openjdk/skara/issuetracker/IssueTrackerTests.java b/issuetracker/src/test/java/org/openjdk/skara/issuetracker/IssueTrackerTests.java
--- a/issuetracker/src/test/java/org/openjdk/skara/issuetracker/IssueTrackerTests.java
+++ b/issuetracker/src/test/java/org/openjdk/skara/issuetracker/IssueTrackerTests.java
@@ -43,10 +43,15 @@
 
     @Test
     void simple(TestInfo info) throws IOException {
         try (var credentials = new HostCredentials(info)) {
             var project = credentials.getIssueProject();
+
+            var userName = project.issueTracker().currentUser().id();
+            var user = project.issueTracker().user(userName);
+            assertEquals(userName, user.userName());
+
             var issue = credentials.createIssue(project, "Test issue");
             issue.setTitle("Updated title");
             issue.setBody("This is now the body");
             var comment = issue.addComment("This is a comment");
             issue.updateComment(comment.id(), "Now it is updated");
