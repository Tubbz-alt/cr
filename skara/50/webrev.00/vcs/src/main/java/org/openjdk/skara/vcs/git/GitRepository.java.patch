diff a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
@@ -38,10 +38,11 @@
 import java.util.stream.Collectors;
 
 public class GitRepository implements Repository {
     private final Path dir;
     private final Logger log = Logger.getLogger("org.openjdk.skara.vcs.git");
+    private Path cachedRoot = null;
 
     private java.lang.Process start(String... cmd) throws IOException {
         return start(Arrays.asList(cmd));
     }
 
@@ -273,10 +274,12 @@
         return true;
     }
 
     @Override
     public void clean() throws IOException {
+        cachedRoot = null;
+
         try (var p = capture("git", "clean", "-x", "-d", "--force", "--force")) {
             await(p);
         }
 
         try (var p = capture("git", "reset", "--hard")) {
@@ -288,10 +291,12 @@
         }
     }
 
     @Override
     public Repository reinitialize() throws IOException {
+        cachedRoot = null;
+
         Files.walk(dir)
              .map(Path::toFile)
              .sorted(Comparator.reverseOrder())
              .forEach(File::delete);
 
@@ -335,10 +340,12 @@
         checkout(b.name(), force);
     }
 
     @Override
     public Repository init() throws IOException {
+        cachedRoot = null;
+
         if (!Files.exists(dir)) {
             Files.createDirectories(dir);
         }
 
         try (var p = capture("git", "init")) {
@@ -399,10 +406,14 @@
         }
     }
 
     @Override
     public Path root() throws IOException {
+        if (cachedRoot != null) {
+            return cachedRoot;
+        }
+
         try (var p = capture("git", "rev-parse", "--show-toplevel")) {
             var res = await(p);
             if (res.stdout().size() != 1) {
                 // Perhaps this is a bare repository
                 try (var p2 = capture("git", "rev-parse", "--git-dir")) {
@@ -408,14 +419,17 @@
                 try (var p2 = capture("git", "rev-parse", "--git-dir")) {
                     var res2 = await(p2);
                     if (res2.stdout().size() != 1) {
                         throw new IOException("Unexpected output\n" + res2);
                     }
-                    return dir.resolve(Path.of(res2.stdout().get(0)));
+                    cachedRoot = dir.resolve(Path.of(res2.stdout().get(0)));
+                    return cachedRoot;
                 }
             }
-            return Path.of(res.stdout().get(0));
+
+            cachedRoot = Path.of(res.stdout().get(0));
+            return cachedRoot;
         }
     }
 
     @Override
     public void squash(Hash h) throws IOException {
