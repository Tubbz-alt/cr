diff a/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestBot.java b/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestBot.java
--- a/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestBot.java
+++ b/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestBot.java
@@ -76,15 +76,12 @@
                                          name,
                                          storage,
                                          pr));
             } else {
                 // is there a job running for this PR?
-                var colon = "%3A";
-                var asterisk = "%2A";
-                var id = host + "-" + repoId  + "-"+ pr.id() + "-" + asterisk;
                 try {
-                    var jobs = ci.query("id" + colon + id);
+                    var jobs = ci.jobsFor(pr);
                     if (!jobs.isEmpty()) {
                         var shouldUpdate = false;
                         for (var job : jobs) {
                             if (!states.containsKey(job.id())) {
                                 shouldUpdate = true;
diff a/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryContinuousIntegration.java b/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryContinuousIntegration.java
--- a/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryContinuousIntegration.java
+++ b/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryContinuousIntegration.java
@@ -23,10 +23,11 @@
 package org.openjdk.skara.bots.tester;
 
 import org.openjdk.skara.ci.ContinuousIntegration;
 import org.openjdk.skara.ci.Job;
 import org.openjdk.skara.host.HostUser;
+import org.openjdk.skara.forge.PullRequest;
 
 import java.io.*;
 import java.nio.file.*;
 import java.util.*;
 
@@ -91,9 +92,9 @@
     public void cancel(String id) throws IOException {
         cancelled.add(id);
     }
 
     @Override
-    public List<Job> query(String query) throws IOException {
+    public List<Job> jobsFor(PullRequest pr) throws IOException {
         return List.of();
     }
 }
diff a/ci/build.gradle b/ci/build.gradle
--- a/ci/build.gradle
+++ b/ci/build.gradle
@@ -31,6 +31,8 @@
 }
 
 dependencies {
     implementation project(':host')
     implementation project(':json')
+    implementation project(':forge')
+    implementation project(':issuetracker')
 }
diff a/ci/src/main/java/module-info.java b/ci/src/main/java/module-info.java
--- a/ci/src/main/java/module-info.java
+++ b/ci/src/main/java/module-info.java
@@ -21,9 +21,10 @@
  * questions.
  */
 module org.openjdk.skara.ci {
     requires org.openjdk.skara.host;
     requires org.openjdk.skara.json;
+    requires org.openjdk.skara.forge;
 
     uses org.openjdk.skara.ci.ContinuousIntegrationFactory;
     exports org.openjdk.skara.ci;
 }
diff a/ci/src/main/java/org/openjdk/skara/ci/ContinuousIntegration.java b/ci/src/main/java/org/openjdk/skara/ci/ContinuousIntegration.java
--- a/ci/src/main/java/org/openjdk/skara/ci/ContinuousIntegration.java
+++ b/ci/src/main/java/org/openjdk/skara/ci/ContinuousIntegration.java
@@ -23,20 +23,21 @@
 package org.openjdk.skara.ci;
 
 import org.openjdk.skara.host.Host;
 import org.openjdk.skara.json.JSONObject;
 import org.openjdk.skara.json.JSON;
+import org.openjdk.skara.forge.PullRequest;
 
 import java.io.IOException;
 import java.net.URI;
 import java.nio.file.Path;
 import java.util.*;
 
 public interface ContinuousIntegration extends Host {
     Job submit(Path source, List<String> jobs, String id) throws IOException;
     Job job(String id) throws IOException;
-    List<Job> query(String query) throws IOException;
+    List<Job> jobsFor(PullRequest pr) throws IOException;
     void cancel(String id) throws IOException;
 
     static Optional<ContinuousIntegration> from(URI uri, JSONObject configuration) {
         for (var factory : ContinuousIntegrationFactory.factories()) {
             var ci = factory.create(uri, configuration);
