diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JNotifyBot.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JNotifyBot.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JNotifyBot.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/JNotifyBot.java
@@ -128,22 +128,26 @@
                              .map(Optional::get)
                              .sorted(Comparator.comparingInt(OpenJDKTag::buildNum))
                              .collect(Collectors.toList());
 
         for (var tag : newJdkTags) {
+            // Update the history first - if there is a problem here we don't want to send out multiple updates
+            history.addTags(List.of(tag.tag()));
+
+            var commits = new ArrayList<Commit>();
             var previous = existingPrevious(tag, allJdkTags);
             if (previous.isEmpty()) {
-                log.warning("No previous tag found for '" + tag.tag() + "' - ignoring");
-                continue;
+                var commit = localRepo.lookup(tag.tag());
+                if (commit.isEmpty()) {
+                    throw new RuntimeException("Failed to lookup tag '" + tag.toString() + "'");
+                } else {
+                    commits.add(commit.get());
+                    log.warning("No previous tag found for '" + tag.tag() + "'");
+                }
+            } else {
+                commits.addAll(localRepo.commits(previous.get().tag() + ".." + tag.tag()).asList());
             }
-            var commits = localRepo.commits(previous.get().tag() + ".." + tag.tag()).asList();
-            if (commits.size() == 0) {
-                continue;
-            }
-
-            // Update the history first - if there is a problem here we don't want to send out multiple updates
-            history.addTags(List.of(tag.tag()));
 
             Collections.reverse(commits);
             for (var updater : updaters) {
                 updater.handleTagCommits(repository, commits, tag);
             }
