diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
@@ -488,11 +488,11 @@
             var first = conversations.get(0).first();
             var email = conversations.get(0).replies(first).get(0);
             assertEquals(listAddress, email.sender());
             assertEquals(author, email.author());
             assertEquals(email.recipients(), List.of(listAddress));
-            assertEquals("Re: [Integrated] RFR: My PR", email.subject());
+            assertEquals("[Integrated] RFR: My PR", email.subject());
             assertFalse(email.subject().contains("master"));
             assertTrue(email.body().contains("Changeset: " + editHash.abbreviate()));
             assertTrue(email.body().contains("23456789: More fixes"));
             assertFalse(email.body().contains("Committer"));
             assertFalse(email.body().contains(masterHash.abbreviate()));
@@ -578,11 +578,11 @@
 
             var prEmail = prConversation.replies(prConversation.first()).get(0);
             assertEquals(listAddress, prEmail.sender());
             assertEquals(EmailAddress.from("testauthor", "ta@none.none"), prEmail.author());
             assertEquals(prEmail.recipients(), List.of(listAddress));
-            assertEquals("Re: [Integrated] RFR: My PR", prEmail.subject());
+            assertEquals("[Integrated] RFR: My PR", prEmail.subject());
             assertFalse(prEmail.subject().contains("master"));
             assertTrue(prEmail.body().contains("Changeset: " + editHash.abbreviate()));
             assertTrue(prEmail.body().contains("23456789: More fixes"));
             assertFalse(prEmail.body().contains("Committer"));
             assertFalse(prEmail.body().contains(masterHash.abbreviate()));
@@ -657,11 +657,11 @@
             var prConversation = conversations.get(0);
             var prEmail = prConversation.replies(prConversation.first()).get(0);
             assertEquals(listAddress, prEmail.sender());
             assertEquals(EmailAddress.from("testauthor", "ta@none.none"), prEmail.author());
             assertEquals(prEmail.recipients(), List.of(listAddress));
-            assertEquals("Re: [Integrated] RFR: My PR", prEmail.subject());
+            assertEquals("[Integrated] RFR: My PR", prEmail.subject());
             assertFalse(prEmail.subject().contains("master"));
             assertTrue(prEmail.body().contains("Changeset: " + editHash.abbreviate()));
             assertTrue(prEmail.body().contains("23456789: More fixes"));
             assertFalse(prEmail.body().contains("Committer"));
             assertFalse(prEmail.body().contains(masterHash.abbreviate()));
