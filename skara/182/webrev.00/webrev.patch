diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/CensusInstance.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/CensusInstance.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/CensusInstance.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/CensusInstance.java
@@ -73,12 +73,12 @@
         }
 
         return namespace;
     }
 
-    private static JCheckConfiguration configuration(HostedRepository remoteRepo, Hash hash) {
-        var confFile = remoteRepo.getFileContents(".jcheck/conf", hash.hex());
+    private static JCheckConfiguration configuration(HostedRepository remoteRepo, String ref) {
+        var confFile = remoteRepo.getFileContents(".jcheck/conf", ref);
         return JCheckConfiguration.parse(confFile.lines().collect(Collectors.toList()));
     }
 
     static CensusInstance create(HostedRepository censusRepo, String censusRef, Path folder, PullRequest pr) {
         var repoName = censusRepo.getUrl().getHost() + "/" + censusRepo.getName();
@@ -92,24 +92,20 @@
         } catch (IOException e) {
             initialize(censusRepo, censusRef, repoFolder);
         }
 
         try {
-            var configuration = configuration(pr.repository(), pr.getHeadHash());
+            var configuration = configuration(pr.repository(), pr.getTargetRef());
             var census = Census.parse(repoFolder);
             var project = project(configuration, census);
             var namespace = namespace(census, pr.repository().getNamespace());
             return new CensusInstance(census, configuration, project, namespace);
         } catch (IOException e) {
-    Census census() {
-        return census;
-    }
-
     JCheckConfiguration configuration() {
         return configuration;
     }
 
     Project project() {
diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CensusInstance.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CensusInstance.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CensusInstance.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CensusInstance.java
@@ -73,12 +73,12 @@
         }
 
         return namespace;
     }
 
-    private static JCheckConfiguration configuration(HostedRepository remoteRepo, Hash hash) {
-        var confFile = remoteRepo.getFileContents(".jcheck/conf", hash.hex());
+    private static JCheckConfiguration configuration(HostedRepository remoteRepo, String ref) {
+        var confFile = remoteRepo.getFileContents(".jcheck/conf", ref);
         return JCheckConfiguration.parse(confFile.lines().collect(Collectors.toList()));
     }
 
     static CensusInstance create(HostedRepository censusRepo, String censusRef, Path folder, PullRequest pr) {
         var repoName = censusRepo.getUrl().getHost() + "/" + censusRepo.getName();
@@ -92,11 +92,11 @@
         } catch (IOException e) {
             initialize(censusRepo, censusRef, repoFolder);
         }
 
         try {
-            var configuration = configuration(pr.repository(), pr.getHeadHash());
+            var configuration = configuration(pr.repository(), pr.getTargetRef());
             var census = Census.parse(repoFolder);
             var project = project(configuration, census);
             var namespace = namespace(census, pr.repository().getNamespace());
             return new CensusInstance(census, configuration, project, namespace);
         } catch (IOException e) {
