diff a/test/src/main/java/org/openjdk/skara/test/SMTPServer.java b/test/src/main/java/org/openjdk/skara/test/SMTPServer.java
--- a/test/src/main/java/org/openjdk/skara/test/SMTPServer.java
+++ b/test/src/main/java/org/openjdk/skara/test/SMTPServer.java
@@ -41,10 +41,11 @@
     private static Pattern dataPattern = Pattern.compile("^DATA$");
     private static Pattern messageEndPattern = Pattern.compile("^\\.$");
     private static Pattern quitPattern = Pattern.compile("^QUIT$");
 
     private final static Pattern encodeQuotedPrintablePattern = Pattern.compile("([^\\x00-\\x7f]+)");
+    private final static Pattern headerPattern = Pattern.compile("[^A-Za-z0-9-]+: .+");
 
     private class AcceptThread implements Runnable {
         private void handleSession(SMTPSession session) throws IOException {
             session.sendCommand("220 localhost SMTP", ehloPattern);
             session.sendCommand("250 HELP", mailFromPattern);
@@ -52,15 +53,31 @@
             session.sendCommand("250 RCPT OK", dataPattern);
             session.sendCommand("354 Enter message now, end with .");
             var message = session.readLinesUntil(messageEndPattern);
             session.sendCommand("250 MESSAGE OK", quitPattern);
 
-            // SMTP is only 7-bit safe, ensure that we break any high ascii passing through here
-            var quoteMatcher = encodeQuotedPrintablePattern.matcher(String.join("\n", message));
-            var ascii7message = quoteMatcher.replaceAll(mo -> "HIGH_ASCII");
+            // Email headers are only 7-bit safe, ensure that we break any high ascii passing through
+            var inHeader = true;
+            var mailBody = new StringBuilder();
+            for (var line : message) {
+                if (inHeader) {
+                    var headerMatcher = headerPattern.matcher(line);
+                    if (headerMatcher.matches()) {
+                        var quoteMatcher = encodeQuotedPrintablePattern.matcher(String.join("\n", message));
+                        var ascii7line = quoteMatcher.replaceAll(mo -> "HIGH_ASCII");
+                        mailBody.append(ascii7line);
+                        mailBody.append("\n");
+                        continue;
+                    } else {
+                        inHeader = false;
+                    }
+                }
+                mailBody.append(line);
+                mailBody.append("\n");
+            }
 
-            var email = Email.parse(ascii7message);
+            var email = Email.parse(mailBody.toString());
             emails.addLast(email);
         }
 
         @Override
         public void run() {
