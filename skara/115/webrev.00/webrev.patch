diff a/census/src/main/java/org/openjdk/skara/census/Namespace.java b/census/src/main/java/org/openjdk/skara/census/Namespace.java
--- a/census/src/main/java/org/openjdk/skara/census/Namespace.java
+++ b/census/src/main/java/org/openjdk/skara/census/Namespace.java
@@ -27,14 +27,16 @@
 import java.util.*;
 
 public class Namespace {
     private final String name;
     private final Map<String, Contributor> mapping;
+    private final Map<Contributor, String> reverse;
 
-    Namespace(String name, Map<String, Contributor> mapping) {
+    private Namespace(String name, Map<String, Contributor> mapping, Map<Contributor, String> reverse) {
         this.name = name;
         this.mapping = mapping;
+        this.reverse = reverse;
     }
 
     public String name() {
         return name;
     }
@@ -41,12 +43,17 @@
 
     public Contributor get(String id) {
         return mapping.get(id);
     }
 
+    public String get(Contributor contributor) {
+        return reverse.get(contributor);
+    }
+
     static Namespace parse(Path p, Map<String, Contributor> contributors) throws IOException {
         var mapping = new HashMap<String, Contributor>();
+        var reverse = new HashMap<Contributor, String>();
 
         var document = XML.parse(p);
         var namespace = XML.child(document, "namespace");
         var name = XML.attribute(namespace, "name");
 
@@ -57,10 +64,11 @@
             if (!contributors.containsKey(to)) {
                 throw new IllegalArgumentException("Unknown contributor " + to);
             }
             var contributor = contributors.get(to);
             mapping.put(id, contributor);
+            reverse.put(contributor, id);
         }
 
-        return new Namespace(name, mapping);
+        return new Namespace(name, mapping, reverse);
     }
 }
diff a/census/src/test/java/org/openjdk/skara/census/CensusTests.java b/census/src/test/java/org/openjdk/skara/census/CensusTests.java
--- a/census/src/test/java/org/openjdk/skara/census/CensusTests.java
+++ b/census/src/test/java/org/openjdk/skara/census/CensusTests.java
@@ -109,10 +109,17 @@
 
         var p1 = new Project("project1", "Project One", g1,
                              List.of(new Member(c1, 1)), List.of(new Member(c2, 1)), List.of(new Member(c3, 1)), List.of(new Member(c4, 1)));
         assertEquals(List.of(p1), census.projects());
 
+        var namespace = census.namespace("github.com");
+        assertEquals("github.com", namespace.name());
+        assertEquals(c1, namespace.get("1234567"));
+        assertEquals(c2, namespace.get("2345678"));
+        assertEquals("1234567", namespace.get(c1));
+        assertEquals("2345678", namespace.get(c2));
+
         assertEquals(1, census.version().format());
     }
 
     @Test
     void testParseSingleFile() throws IOException {
